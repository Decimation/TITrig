; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\TRIANGLE.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME3"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME7"
.BEGREC "NONAME8",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.ENDREC "NONAME9"
.BEGREC "NONAME10",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME8"
.TYPE 104
.ENDEF
.ENDREC "NONAME10"
.BEGREC "NONAME11",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME9"
.TYPE 104
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME8"
.TYPE 104
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME15"
.BEGREC "NONAME16",26
.DEFINE "point"
.VALUE 0
.CLASS 8
.TAG "NONAME5"
.TYPE 8
.ENDEF
.DEFINE "label"
.VALUE 6
.CLASS 8
.DIM 20
.TYPE 98
.ENDEF
.ENDREC "NONAME16"
.BEGREC "NONAME17",72
.DEFINE "A"
.VALUE 0
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "B"
.VALUE 9
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "C"
.VALUE 18
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "a"
.VALUE 27
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "b"
.VALUE 36
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "c"
.VALUE 45
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "area"
.VALUE 54
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "perimeter"
.VALUE 63
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.ENDREC "NONAME17"
.BEGREC "NONAME18",8
.DEFINE "a"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "b"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "c"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "A"
.VALUE 3
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "B"
.VALUE 4
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "C"
.VALUE 5
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "complete"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "isSSA"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "NONAME18"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
	SEGMENT DATA
_xangles:
	DW	30
	DB	0
	DW	109
	DB	0
	DB	65
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	165
	DB	0
	DW	109
	DB	0
	DB	66
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	135
	DB	0
	DW	27
	DB	0
	DB	67
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xangles"
.ALIAS "_xangles"
.CLASS 69
.VALUE _xangles
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xsides:
	DW	190
	DB	0
	DW	60
	DB	0
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	60
	DB	0
	DW	55
	DB	0
	DB	98
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	95
	DB	0
	DW	130
	DB	0
	DB	99
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xsides"
.ALIAS "_xsides"
.CLASS 69
.VALUE _xsides
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
	SEGMENT TEXT
_lbl_AngleMode:
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
.DEFINE "lbl_AngleMode"
.ALIAS "_lbl_AngleMode"
.CLASS 84
.VALUE _lbl_AngleMode
.DIM 11
.TYPE 98
.ENDEF
_lbl_SideMode:
	DB	83
	DB	73
	DB	68
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
.DEFINE "lbl_SideMode"
.ALIAS "_lbl_SideMode"
.CLASS 84
.VALUE _lbl_SideMode
.DIM 10
.TYPE 98
.ENDEF
_lbl_SSS:
	DB	83
	DB	83
	DB	83
	DB	0
.DEFINE "lbl_SSS"
.ALIAS "_lbl_SSS"
.CLASS 84
.VALUE _lbl_SSS
.DIM 4
.TYPE 98
.ENDEF
_lbl_SSA:
	DB	83
	DB	83
	DB	65
	DB	32
	DB	40
	DB	33
	DB	41
	DB	0
.DEFINE "lbl_SSA"
.ALIAS "_lbl_SSA"
.CLASS 84
.VALUE _lbl_SSA
.DIM 8
.TYPE 98
.ENDEF
_lbl_SAS:
	DB	83
	DB	65
	DB	83
	DB	0
.DEFINE "lbl_SAS"
.ALIAS "_lbl_SAS"
.CLASS 84
.VALUE _lbl_SAS
.DIM 4
.TYPE 98
.ENDEF
_lbl_AAS:
	DB	65
	DB	65
	DB	83
	DB	0
.DEFINE "lbl_AAS"
.ALIAS "_lbl_AAS"
.CLASS 84
.VALUE _lbl_AAS
.DIM 4
.TYPE 98
.ENDEF
_lbl_ASA:
	DB	65
	DB	83
	DB	65
	DB	0
.DEFINE "lbl_ASA"
.ALIAS "_lbl_ASA"
.CLASS 84
.VALUE _lbl_ASA
.DIM 4
.TYPE 98
.ENDEF
_lbl_Unknown:
	DB	63
	DB	0
.DEFINE "lbl_Unknown"
.ALIAS "_lbl_Unknown"
.CLASS 84
.VALUE _lbl_Unknown
.DIM 2
.TYPE 98
.ENDEF
	SEGMENT BSS
_triangle:
	DS	72
.DEFINE "triangle"
.ALIAS "_triangle"
.CLASS 83
.VALUE _triangle
.TAG "NONAME17"
.TYPE 8
.ENDEF
_trigstatus:
	DS	8
.DEFINE "trigstatus"
.ALIAS "_trigstatus"
.CLASS 83
.VALUE _trigstatus
.TAG "NONAME18"
.TYPE 8
.ENDEF
_ui_bDispMeasurements:
	DS	1
.DEFINE "ui_bDispMeasurements"
.ALIAS "_ui_bDispMeasurements"
.CLASS 83
.VALUE _ui_bDispMeasurements
.TYPE 12
.ENDEF
	SEGMENT DATA
_ui_Mode:
	DW	230
	DB	0
	DW	10
	DB	0
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_Mode"
.ALIAS "_ui_Mode"
.CLASS 69
.VALUE _ui_Mode
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_Type:
	DW	230
	DB	0
	DW	20
	DB	0
	DB	46
	DB	46
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_Type"
.ALIAS "_ui_Type"
.CLASS 69
.VALUE _ui_Type
.TAG "NONAME16"
.TYPE 8
.ENDEF
	SEGMENT TEXT
_ui_btn_Mode:
	DW	280
	DB	0
	DW	230
	DB	0
	DB	77
	DB	111
	DB	100
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Mode"
.ALIAS "_ui_btn_Mode"
.CLASS 84
.VALUE _ui_btn_Mode
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Clear:
	DW	215
	DB	0
	DW	230
	DB	0
	DB	67
	DB	108
	DB	101
	DB	97
	DB	114
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Clear"
.ALIAS "_ui_btn_Clear"
.CLASS 84
.VALUE _ui_btn_Clear
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Data:
	DW	145
	DB	0
	DW	230
	DB	0
	DB	68
	DB	97
	DB	116
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Data"
.ALIAS "_ui_btn_Data"
.CLASS 84
.VALUE _ui_btn_Data
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Pref:
	DW	70
	DB	0
	DW	230
	DB	0
	DB	80
	DB	114
	DB	101
	DB	102
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Pref"
.ALIAS "_ui_btn_Pref"
.CLASS 84
.VALUE _ui_btn_Pref
.TAG "NONAME16"
.TYPE 8
.ENDEF
	SEGMENT DATA
_xmeasureData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	80
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xmeasureData"
.ALIAS "_xmeasureData"
.CLASS 69
.VALUE _xmeasureData
.DIM 2
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xanglesData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	66
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	195
	DB	0
	DB	67
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xanglesData"
.ALIAS "_xanglesData"
.CLASS 69
.VALUE _xanglesData
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xsidesData:
	DW	130
	DB	0
	DW	155
	DB	0
	DB	97
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	175
	DB	0
	DB	98
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	195
	DB	0
	DB	99
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xsidesData"
.ALIAS "_xsidesData"
.CLASS 69
.VALUE _xsidesData
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_data_X_ex:
	DW	10
	DB	0
	DW	215
	DB	0
	DB	42
	DB	88
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "data_X_ex"
.ALIAS "_data_X_ex"
.CLASS 69
.VALUE _data_X_ex
.TAG "NONAME16"
.TYPE 8
.ENDEF
;    1	//
;    2	// Created by Decimation on 4/27/2018.
;    3	//
;    4	
;    5	#include "Triangle.h"
;    6	#include "debug.h"
;    7	#include "Trigonometry.h"
;    8	#include <string.h>
;    9	
;   10	static superpoint_t xangles[3] = {
;   11			{{30,       119 - 10}, "A"},   // AAA
;   12			{{10 + 155, 119 - 10}, "B"},   // BBB
;   13			{{135,      27},       "C"}   // CCC
;   14	};
;   15	
;   16	static superpoint_t xsides[3] = {
;   17			{{10 + 180, 60},  "a"},  // aaa
;   18			{{60,       55},  "b"},  // bbb
;   19			{{140 - 45, 130}, "c"}   // ccc
;   20	};
;   21	
;   22	
;   23	#define angle_A xangles[0]
;   24	#define angle_B xangles[1]
;   25	#define angle_C xangles[2]
;   26	
;   27	#define side_a xsides[0]
;   28	#define side_b xsides[1]
;   29	#define side_c xsides[2]
;   30	
;   31	static const char lbl_AngleMode[] = "ANGLE MODE";
;   32	static const char lbl_SideMode[]  = "SIDE MODE";
;   33	static const char lbl_SSS[]       = "SSS";
;   34	static const char lbl_SSA[]       = "SSA (!)";
;   35	static const char lbl_SAS[]       = "SAS";
;   36	static const char lbl_AAS[]       = "AAS";
;   37	static const char lbl_ASA[]       = "ASA";
;   38	static const char lbl_Unknown[]   = "?";
;   39	
;   40	static triangle_t   triangle;
;   41	static trigstatus_t trigstatus;
;   42	
;   43	/**
;   44	 * When true : display area and perimeter
;   45	 * When false: display a, b, c, A, B, C
;   46	 */
;   47	static bool ui_bDispMeasurements;
;   48	
;   49	static superpoint_t       ui_Mode      = {{230, 10}, "ANGLE MODE"};
;   50	static superpoint_t       ui_Type      = {{230, 20}, "..."};
;   51	static const superpoint_t ui_btn_Mode  = {280, 230, "Mode"};
;   52	static const superpoint_t ui_btn_Clear = {215, 230, "Clear"};
;   53	static const superpoint_t ui_btn_Data  = {145, 230, "Data"};
;   54	static const superpoint_t ui_btn_Pref  = {70, 230, "Pref"};
;   55	
;   56	static superpoint_t xmeasureData[2] = {
;   57			{10, 155, "A = "},
;   58			{10, 175, "P = "},
;   59	};
;   60	
;   61	static superpoint_t xanglesData[3] = {
;   62			{10, 155, "A = "},
;   63			{10, 175, "B = "},
;   64			{10, 195, "C = "}
;   65	};
;   66	
;   67	static superpoint_t xsidesData[3] = {
;   68			{130, 155, "a = "},
;   69			{130, 175, "b = "},
;   70			{130, 195, "c = "}
;   71	};
;   72	
;   73	static superpoint_t data_X_ex = {10, 215, "*X = "};
	SEGMENT CODE
;   74	
;   75	static void trig_Redraw()
;   76	{
_trig_Redraw:
.DEFINE "_trig_Redraw"

.VALUE _trig_Redraw

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Redraw",76,"_trig_Redraw"

.LINE 76

.DEFINE "index"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   77		int index = 0;
;   78		for (index = 0; index < 3; index++)
.LINE 78

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_3
L_1:
;   79		{
;   80			gfx_Clear(&xangles[index]);
.LINE 80

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;   81			gfx_Clear(&xsides[index]);
.LINE 81

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;   82	
;   83			gfx_Print(&xangles[index]);
.LINE 83

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;   84			gfx_Print(&xsides[index]);
.LINE 84

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;   85	
;   86			dbg_sprintf(dbgout, "[%s, %s]\n", xangles[index].label, xsides[index].label);
.LINE 86

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,HL
	LD	DE,_xsides
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	PEA	IY+6
	LD	DE,_xangles
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	PEA	IY+6
	LD	BC,L__0
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   87		}
L_3:
.LINE 87

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_1
;   88	}
.LINE 88

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Redraw ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;index                                 IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Redraw",88,"_trig_Redraw"
	SEGMENT STRSECT
L__0:
	DB	"[%s, %s]"
	DB	10,0
	SEGMENT CODE
;   89	
;   90	static void dbg_printTriangle()
;   91	{
_dbg_printTriangle:
.DEFINE "_dbg_printTriangle"

.VALUE _dbg_printTriangle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "dbg_printTriangle",91,"_dbg_printTriangle"

.LINE 91

.DEFINE "buf"

.CLASS 65

.VALUE -38

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-38
	LD	SP,HL
;   92		char buf[20];
;   93		os_RealToStr(buf, &triangle.A, 0, 0, -1);
.LINE 93

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   94		dbg_sprintf(dbgout, "Angle A: %s | ", buf);
.LINE 94

	PEA	IX+-38
	LD	BC,L__3
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;   95		os_RealToStr(buf, &triangle.a, 0, 0, -1);
.LINE 95

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   96		dbg_sprintf(dbgout, "Side a: %s\n", buf);
.LINE 96

	PEA	IX+-38
	LD	BC,L__4
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;   97	
;   98		os_RealToStr(buf, &triangle.B, 0, 0, -1);
.LINE 98

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   99		dbg_sprintf(dbgout, "Angle B: %s | ", buf);
.LINE 99

	PEA	IX+-38
	LD	BC,L__5
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  100		os_RealToStr(buf, &triangle.b, 0, 0, -1);
.LINE 100

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  101		dbg_sprintf(dbgout, "Side b: %s\n", buf);
.LINE 101

	PEA	IX+-38
	LD	BC,L__6
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  102	
;  103		os_RealToStr(buf, &triangle.C, 0, 0, -1);
.LINE 103

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  104		dbg_sprintf(dbgout, "Angle C: %s | ", buf);
.LINE 104

	PEA	IX+-38
	LD	BC,L__7
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  105		os_RealToStr(buf, &triangle.c, 0, 0, -1);
.LINE 105

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  106		dbg_sprintf(dbgout, "Side c: %s\n", buf);
.LINE 106

	PEA	IX+-38
	LD	BC,L__8
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  107	
;  108		dbg_sprintf(dbgout, "Angle availability: [%s, %s, %s]\n", trigstatus.A ? "1" : "0", trigstatus.B ? "1" : "0",
.LINE 108

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_7
	LD	BC,L__10
	LD	(IX+-3),BC
	JR	L_8
L_7:
	LD	BC,L__11
	LD	(IX+-3),BC
L_8:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_11
	LD	BC,L__13
	LD	(IX+-6),BC
	JR	L_12
L_11:
	LD	BC,L__14
	LD	(IX+-6),BC
L_12:
;  109					trigstatus.C ? "1" : "0");
.LINE 109

	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_15
	LD	BC,L__16
	LD	(IX+-9),BC
	JR	L_16
L_15:
	LD	BC,L__17
	LD	(IX+-9),BC
L_16:
	LD	BC,(IX+-9)
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,L__18
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  110		dbg_sprintf(dbgout, "Side availability: [%s, %s, %s]\n", trigstatus.a ? "1" : "0", trigstatus.b ? "1" : "0",
.LINE 110

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_19
	LD	BC,L__20
	LD	(IX+-12),BC
	JR	L_20
L_19:
	LD	BC,L__21
	LD	(IX+-12),BC
L_20:
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_23
	LD	BC,L__23
	LD	(IX+-15),BC
	JR	L_24
L_23:
	LD	BC,L__24
	LD	(IX+-15),BC
L_24:
;  111					trigstatus.c ? "1" : "0");
.LINE 111

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_27
	LD	BC,L__26
	LD	(IX+-18),BC
	JR	L_28
L_27:
	LD	BC,L__27
	LD	(IX+-18),BC
L_28:
	LD	BC,(IX+-18)
	PUSH	BC
	LD	BC,(IX+-15)
	PUSH	BC
	LD	BC,(IX+-12)
	PUSH	BC
	LD	BC,L__28
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  112	
;  113		os_RealToStr(buf, &triangle.area, 0, 0, -1);
.LINE 113

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  114		dbg_sprintf(dbgout, "Area: %s\n", buf);
.LINE 114

	PEA	IX+-38
	LD	BC,L__29
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  115		os_RealToStr(buf, &triangle.perimeter, 0, 0, -1);
.LINE 115

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  116		dbg_sprintf(dbgout, "Perimeter: %s\n", buf);
.LINE 116

	PEA	IX+-38
	LD	BC,L__30
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  117	}
.LINE 117

	LD	SP,IX
	POP	IX
	RET	


;**************************** _dbg_printTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trigstatus                         STATIC      8   variable
;_sprintf                            IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealToStr                       IMPORT  -----   function
;buf                                  IX-38     20   variable
;temp25                               IX-18      3   variable
;temp21                               IX-15      3   variable
;temp17                               IX-12      3   variable
;temp13                                IX-9      3   variable
;temp9                                 IX-6      3   variable
;temp5                                 IX-3      3   variable


; Stack Frame Size: 44 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "dbg_printTriangle",117,"_dbg_printTriangle"
	SEGMENT STRSECT
L__3:
	DB	"Angle A: %s | "
	DB	0
L__4:
	DB	"Side a: %s"
	DB	10,0
L__5:
	DB	"Angle B: %s | "
	DB	0
L__6:
	DB	"Side b: %s"
	DB	10,0
L__7:
	DB	"Angle C: %s | "
	DB	0
L__8:
	DB	"Side c: %s"
	DB	10,0
L__10:
	DB	"1"
	DB	0
L__11:
	DB	"0"
	DB	0
L__13:
	DB	"1"
	DB	0
L__14:
	DB	"0"
	DB	0
L__16:
	DB	"1"
	DB	0
L__17:
	DB	"0"
	DB	0
L__18:
	DB	"Angle availability: [%s, %s, %s]"
	DB	10,0
L__20:
	DB	"1"
	DB	0
L__21:
	DB	"0"
	DB	0
L__23:
	DB	"1"
	DB	0
L__24:
	DB	"0"
	DB	0
L__26:
	DB	"1"
	DB	0
L__27:
	DB	"0"
	DB	0
L__28:
	DB	"Side availability: [%s, %s, %s]"
	DB	10,0
L__29:
	DB	"Area: %s"
	DB	10,0
L__30:
	DB	"Perimeter: %s"
	DB	10,0
	SEGMENT CODE
;  118	
;  119	static void trig_Sync()
;  120	{
_trig_Sync:
.DEFINE "_trig_Sync"

.VALUE _trig_Sync

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Sync",120,"_trig_Sync"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  121		dbg_sprintf(dbgout, "[Trig] Synchronizing...\n");
.LINE 121

	LD	BC,L__32
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  122		geo_RoundTriangle(&triangle, gRound);
.LINE 122

	LD	A,(_gRound)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	CALL	_geo_RoundTriangle
	POP	BC
	POP	BC
;  123		dbg_sprintf(dbgout, "[Trig] Rounded\n");
.LINE 123

	LD	BC,L__33
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  124	
;  125		if (trigstatus.A)
.LINE 125

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_32
;  126		{
;  127			os_RealToStr(xangles[0].label, &triangle.A, 0, 0, 6);
.LINE 127

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	LD	BC,_xangles+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  128		}
L_32:
.LINE 128

;  129		if (trigstatus.B)
.LINE 129

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_34
;  130		{
;  131			os_RealToStr(xangles[1].label, &triangle.B, 0, 0, 6);
.LINE 131

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  132		}
L_34:
.LINE 132

;  133		if (trigstatus.C)
.LINE 133

	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_36
;  134		{
;  135			os_RealToStr(xangles[2].label, &triangle.C, 0, 0, 6);
.LINE 135

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  136		}
L_36:
.LINE 136

;  137		if (trigstatus.a)
.LINE 137

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_38
;  138		{
;  139			os_RealToStr(xsides[0].label, &triangle.a, 0, 0, 6);
.LINE 139

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	LD	BC,_xsides+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  140		}
L_38:
.LINE 140

;  141		if (trigstatus.b)
.LINE 141

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_40
;  142		{
;  143			os_RealToStr(xsides[1].label, &triangle.b, 0, 0, 6);
.LINE 143

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  144		}
L_40:
.LINE 144

;  145		if (trigstatus.c)
.LINE 145

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_41
;  146		{
;  147			os_RealToStr(xsides[2].label, &triangle.c, 0, 0, 6);
.LINE 147

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  148		}
L_41:
.LINE 148

;  149	
;  150		ui_DispData();
.LINE 150

	CALL	_ui_DispData
;  151		trig_TruncateLabels(gDigitThreshold);
.LINE 151

	LD	A,(_gDigitThreshold)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_trig_TruncateLabels
	POP	BC
;  152		dbg_sprintf(dbgout, "[Trig] Truncated labels\n");
.LINE 152

	LD	BC,L__40
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  153		trig_Redraw();
.LINE 153

	CALL	_trig_Redraw
;  154		dbg_printTriangle();
.LINE 154

	CALL	_dbg_printTriangle
;  155	}
.LINE 155

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Sync ***************************
;Name                         Addr/Register   Size   Type
;_dbg_printTriangle                  STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gDigitThreshold                    IMPORT      1   variable
;_trig_TruncateLabels                STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_os_RealToStr                       IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_gRound                             IMPORT      1   variable
;_geo_RoundTriangle                  IMPORT  -----   function
;_sprintf                            IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Sync",155,"_trig_Sync"
	SEGMENT STRSECT
L__32:
	DB	"[Trig] Synchronizing..."
	DB	10,0
L__33:
	DB	"[Trig] Rounded"
	DB	10,0
L__40:
	DB	"[Trig] Truncated labels"
	DB	10,0
	SEGMENT CODE
;  156	
;  157	real_t trig_AreaBySin(real_t a, real_t b, real_t C)
;  158	{
_trig_AreaBySin:
.DEFINE "_trig_AreaBySin"

.VALUE _trig_AreaBySin

.CLASS 2

.TAG "NONAME8"

.TYPE 72

.ENDEF

.BEGFUNC "trig_AreaBySin",158,"_trig_AreaBySin"

.LINE 158

.DEFINE "a"

.CLASS 65

.VALUE 9

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "b"

.CLASS 65

.VALUE 18

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "C"

.CLASS 65

.VALUE 27

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "buf"

.CLASS 65

.VALUE -9

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "onehalf"

.CLASS 65

.VALUE -18

.TAG "NONAME8"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-63
	LD	SP,HL
;  159		//Area =  1/2 ab sin C
;  160	
;  161		const real_t onehalf = os_FloatToReal(0.5f);
.LINE 161

	LD	C,63
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PEA	IX+-27
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  162		real_t       buf;
;  163		C   = os_RealSinDeg(C);
.LINE 163

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LEA	HL,IX+27
	LD	BC,9
	LDIR	
	PEA	IX+-36
	CALL	_os_RealSinDeg
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+27
	LD	BC,9
	LDIR	
;  164		buf = os_RealMul(&onehalf, &a);
.LINE 164

	PEA	IX+9
	PEA	IX+-18
	PEA	IX+-45
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  165		buf = os_RealMul(&buf, &b);
.LINE 165

	PEA	IX+18
	PEA	IX+-9
	PEA	IX+-54
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  166		return os_RealMul(&buf, &C);
.LINE 166

	PEA	IX+27
	PEA	IX+-9
	PEA	IX+-63
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)
;  167	}
.LINE 167

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_AreaBySin ***************************
;Name                         Addr/Register   Size   Type
;_os_RealMul                         IMPORT  -----   function
;_os_RealSinDeg                      IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;onehalf                              IX-18      9   variable
;buf                                   IX-9      9   variable
;C                                    IX+27      9   parameter
;b                                    IX+18      9   parameter
;a                                     IX+9      9   parameter


; Stack Frame Size: 99 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_AreaBySin",167,"_trig_AreaBySin"
;  168	
;  169	static void trig_HeronsFormula()
;  170	{
_trig_HeronsFormula:
.DEFINE "_trig_HeronsFormula"

.VALUE _trig_HeronsFormula

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_HeronsFormula",170,"_trig_HeronsFormula"

.LINE 170

.DEFINE "s"

.CLASS 65

.VALUE -9

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "num"

.CLASS 65

.VALUE -18

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "root"

.CLASS 65

.VALUE -27

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "sma"

.CLASS 65

.VALUE -36

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "real2"

.CLASS 65

.VALUE -45

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "smc"

.CLASS 65

.VALUE -54

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "smb"

.CLASS 65

.VALUE -63

.TAG "NONAME8"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-171
	ADD	HL,SP
	LD	SP,HL
;  171		real_t       num, s, root;
;  172		real_t       sma, smb, smc;
;  173		const real_t real2 = os_Int24ToReal(2);
.LINE 173

	LD	BC,2
	PUSH	BC
	PEA	IX+-72
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-45
	LD	BC,9
	LDIR	
;  174	
;  175		num = os_RealAdd(&triangle.a, &triangle.b);
.LINE 175

	LD	BC,_triangle+36
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-81
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  176		num = os_RealAdd(&num, &triangle.c);
.LINE 176

	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-18
	PEA	IX+-90
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  177	
;  178		// Half of perimeter
;  179		s = os_RealDiv(&num, &real2);
.LINE 179

	PEA	IX+-45
	PEA	IX+-18
	PEA	IX+-99
	CALL	_os_RealDiv
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  180	
;  181		triangle.perimeter = os_RealMul(&s, &real2);
.LINE 181

	PEA	IX+-45
	PEA	IX+-9
	PEA	IX+-108
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+63
	LD	BC,9
	LDIR	
;  182		dbg_sprintf(dbgout, "[Trig] Solved for perimeter\n");
.LINE 182

	LD	BC,L__43
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  183	
;  184		sma = os_RealSub(&s, &triangle.a);
.LINE 184

	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-117
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  185		smb = os_RealSub(&s, &triangle.b);
.LINE 185

	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-126
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-63
	LD	BC,9
	LDIR	
;  186		smc = os_RealSub(&s, &triangle.c);
.LINE 186

	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-135
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-54
	LD	BC,9
	LDIR	
;  187	
;  188		sma = os_RealMul(&s, &sma);
.LINE 188

	PEA	IX+-36
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-144
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  189	
;  190		root = os_RealMul(&sma, &smb);
.LINE 190

	PEA	IX+-63
	PEA	IX+-36
	LD	HL,IX
	LD	BC,-153
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;  191		root = os_RealMul(&root, &smc);
.LINE 191

	PEA	IX+-54
	PEA	IX+-27
	LD	HL,IX
	LD	BC,-162
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;  192	
;  193		triangle.area = os_RealSqrt(&root);
.LINE 193

	PEA	IX+-27
	LD	HL,IX
	LD	BC,-171
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSqrt
	POP	BC
	POP	BC
	LD	DE,_triangle+54
	LD	BC,9
	LDIR	
;  194		dbg_sprintf(dbgout, "[Trig] Solved for area\n");
.LINE 194

	LD	BC,L__44
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  195	}
.LINE 195

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_HeronsFormula ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSqrt                        IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_RealMul                         IMPORT  -----   function
;_os_RealDiv                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;smb                                  IX-63      9   variable
;smc                                  IX-54      9   variable
;real2                                IX-45      9   variable
;sma                                  IX-36      9   variable
;root                                 IX-27      9   variable
;num                                  IX-18      9   variable
;s                                     IX-9      9   variable


; Stack Frame Size: 177 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_HeronsFormula",195,"_trig_HeronsFormula"
	SEGMENT STRSECT
L__43:
	DB	"[Trig] Solved for perimeter"
	DB	10,0
L__44:
	DB	"[Trig] Solved for area"
	DB	10,0
	SEGMENT CODE
;  196	
;  197	static void trig_SolveSSS()
;  198	{
_trig_SolveSSS:
.DEFINE "_trig_SolveSSS"

.VALUE _trig_SolveSSS

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveSSS",198,"_trig_SolveSSS"

.LINE 198

.DEFINE "buf"

.CLASS 65

.VALUE -12

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -21

.TAG "NONAME8"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-69
	LD	SP,HL
;  199		real_t       buf;
;  200		const real_t real180 = os_Int24ToReal(180);
.LINE 200

	LD	BC,180
	PUSH	BC
	PEA	IX+-30
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-21
	LD	BC,9
	LDIR	
;  201		dbg_sprintf(dbgout, "[Trig] Solving SSS triangle\n");
.LINE 201

	LD	DE,L__46
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	LD	(IX+-69),BC
	CALL	_sprintf
	LD	BC,(IX+-69)
	POP	DE
	POP	DE
;  202		triangle.A   = loc_Angle_x(triangle.b, triangle.c, triangle.a);
.LINE 202

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PEA	IX+-39
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  203		trigstatus.A = true;
.LINE 203

	LD	A,1
	LD	(_trigstatus+3),A
;  204		dbg_sprintf(dbgout, "[Trig] Solved for angle A\n");
.LINE 204

	LD	DE,L__47
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	LD	(IX+-69),BC
	CALL	_sprintf
	LD	BC,(IX+-69)
	POP	DE
	POP	DE
;  205	
;  206		triangle.B   = loc_Angle_x(triangle.c, triangle.a, triangle.b);
.LINE 206

	LD	DE,_triangle+9
	LD	(IX+-3),DE
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PEA	IX+-48
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,(IX+-3)
	LD	BC,9
	LDIR	
;  207		trigstatus.B = true;
.LINE 207

	LD	A,1
	LD	(_trigstatus+4),A
;  208		dbg_sprintf(dbgout, "[Trig] Solved for angle B\n");
.LINE 208

	LD	BC,L__48
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  209	
;  210		buf = os_RealAdd(&triangle.A, &triangle.B);
.LINE 210

	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-57
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  211		triangle.C   = os_RealSub(&real180, &buf);
.LINE 211

	PEA	IX+-12
	PEA	IX+-21
	PEA	IX+-66
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  212		trigstatus.C = true;
.LINE 212

	LD	A,1
	LD	(_trigstatus+5),A
;  213		dbg_sprintf(dbgout, "[Trig] Solved for angle C\n");
.LINE 213

	LD	BC,L__49
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  214	
;  215		trig_HeronsFormula();
.LINE 215

	CALL	_trig_HeronsFormula
;  216		trig_Sync();
.LINE 216

	CALL	_trig_Sync
;  217	}
.LINE 217

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveSSS ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_HeronsFormula                 STATIC  -----   function
;_os_RealSub                         IMPORT  -----   function
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_loc_Angle_x                        IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-21      9   variable
;buf                                  IX-12      9   variable
;G_0                                   IX-3      3   variable


; Stack Frame Size: 75 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveSSS",217,"_trig_SolveSSS"
	SEGMENT STRSECT
L__46:
	DB	"[Trig] Solving SSS triangle"
	DB	10,0
L__47:
	DB	"[Trig] Solved for angle A"
	DB	10,0
L__48:
	DB	"[Trig] Solved for angle B"
	DB	10,0
L__49:
	DB	"[Trig] Solved for angle C"
	DB	10,0
	SEGMENT CODE
;  218	
;  219	static void trig_SolveMissingAngle()
;  220	{
_trig_SolveMissingAngle:
.DEFINE "_trig_SolveMissingAngle"

.VALUE _trig_SolveMissingAngle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveMissingAngle",220,"_trig_SolveMissingAngle"

.LINE 220

.DEFINE "buf"

.CLASS 65

.VALUE -9

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -18

.TAG "NONAME8"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-81
	LD	SP,HL
;  221		const real_t real180 = os_Int24ToReal(180);
.LINE 221

	LD	BC,180
	PUSH	BC
	PEA	IX+-27
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  222		real_t       buf;
;  223	
;  224		if (trigstatus.A && trigstatus.B)
.LINE 224

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_53
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_53
;  225		{
;  226			buf = os_RealAdd(&triangle.A, &triangle.B);
.LINE 226

	LD	BC,_triangle+9
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-36
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  227			triangle.C   = os_RealSub(&real180, &buf);
.LINE 227

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-45
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  228			trigstatus.C = true;
.LINE 228

	LD	A,1
	LD	(_trigstatus+5),A
;  229		}
;  230		else if (trigstatus.A && trigstatus.C)
.LINE 230

	JR	L_54
L_53:
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_51
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_51
;  231		{
;  232			buf = os_RealAdd(&triangle.A, &triangle.C);
.LINE 232

	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-54
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  233			triangle.B   = os_RealSub(&real180, &buf);
.LINE 233

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-63
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  234			trigstatus.B = true;
.LINE 234

	LD	A,1
	LD	(_trigstatus+4),A
;  235		}
;  236		else if (trigstatus.B && trigstatus.C)
.LINE 236

	JR	L_54
L_51:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_54
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_54
;  237		{
;  238			buf = os_RealAdd(&triangle.B, &triangle.C);
.LINE 238

	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-72
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  239			triangle.A   = os_RealSub(&real180, &buf);
.LINE 239

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-81
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  240			trigstatus.A = true;
.LINE 240

	LD	A,1
	LD	(_trigstatus+3),A
;  241		}
;  242	}
L_54:
.LINE 242

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveMissingAngle ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSub                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-18      9   variable
;buf                                   IX-9      9   variable


; Stack Frame Size: 87 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveMissingAngle",242,"_trig_SolveMissingAngle"
;  243	
;  244	static void trig_TruncateLabels(int len)
;  245	{
_trig_TruncateLabels:
.DEFINE "_trig_TruncateLabels"

.VALUE _trig_TruncateLabels

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_TruncateLabels",245,"_trig_TruncateLabels"

.LINE 245

.DEFINE "len"

.CLASS 65

.VALUE 6

.TYPE 4

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  246		int i = 0;
.LINE 246

	LD	BC,0
	LD	(IX+-3),BC
;  247		for (; i < 3; i++)
.LINE 247

	JR	L_58
L_56:
;  248		{
;  249			lib_StrCut(xangles[i].label, len, 20 - len);
.LINE 249

	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
;  250			lib_StrCut(xsides[i].label, len, 20 - len);
.LINE 250

	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  251			//lib_StrCut(xmeasureData[i].label, len * 2, 20 - len);
;  252		}
L_58:
.LINE 252

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_56
;  253	}
.LINE 253

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_TruncateLabels ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_lib_StrCut                         IMPORT  -----   function
;i                                     IX-3      3   variable
;len                                   IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_TruncateLabels",253,"_trig_TruncateLabels"
;  254	
;  255	static void trig_CheckSolvability()
;  256	{
_trig_CheckSolvability:
.DEFINE "_trig_CheckSolvability"

.VALUE _trig_CheckSolvability

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_CheckSolvability",256,"_trig_CheckSolvability"

.LINE 256

.DEFINE "rbuf"

.CLASS 65

.VALUE -9

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -18

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "cbuf"

.CLASS 65

.VALUE -38

.DIM 20

.TYPE 98

.ENDEF

.DEFINE "cbuf2"

.CLASS 65

.VALUE -58

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-313
	ADD	HL,SP
	LD	SP,HL
;  257		real_t       rbuf;
;  258		char         cbuf[20];
;  259		char         cbuf2[20];
;  260		const real_t real180 = os_Int24ToReal(180);
.LINE 260

	LD	BC,180
	PUSH	BC
	PEA	IX+-67
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  261	
;  262		dbg_sprintf(dbgout, "[Trig] Checking solvability...\n");
.LINE 262

	LD	DE,L__60
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  263		ui_DispData();
.LINE 263

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_ui_DispData
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  264	
;  265		// Automatically solve for the third angle when possible
;  266		trig_SolveMissingAngle();
.LINE 266

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  267		trig_Sync();
.LINE 267

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_Sync
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  268	
;  269	
;  270		if (trigstatus.complete)
.LINE 270

	LD	A,(_trigstatus+6)
	OR	A,A
	JR	NZ,L_113
;  271		{
;  272	
;  273			return;
.LINE 273

;  274		}
.LINE 274

;  275	
;  276	
;  277		// SSS
;  278		if (trigstatus.a && trigstatus.b && trigstatus.c)
.LINE 278

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_76
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_76
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_76
;  279		{
;  280			dbg_sprintf(dbgout, "SSS detected [%s, %s, %s]\n", xsides[0].label, xsides[1].label, xsides[2].label);
.LINE 280

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	BC,_xsides+6
	PUSH	BC
	LD	BC,L__65
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  281			gfx_Clear(&ui_Type);
.LINE 281

	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  282			sp_SetLabel(&ui_Type, lbl_SSS);
.LINE 282

	LD	BC,_lbl_SSS
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  283			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 283

	LD	BC,3
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_PrintColor
	POP	BC
	POP	BC
;  284	
;  285			trig_SolveSSS();
.LINE 285

	CALL	_trig_SolveSSS
;  286			trigstatus.complete = true;
.LINE 286

	LD	A,1
	LD	(_trigstatus+6),A
;  287			return;
.LINE 287

	JR	L_113
;  288		}
L_76:
.LINE 288

;  289	
;  290		// AAS
;  291		// "AAS" is when we know two angles and one side (which is not between the angles).
;  292		if (trigstatus.A && trigstatus.C && trigstatus.c)
.LINE 292

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_75
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_75
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_75
;  293		{
;  294			dbg_sprintf(dbgout, "AAS_1 detected [%s, %s, %s]\n", xangles[0].label, xangles[2].label, xsides[2].label);
.LINE 294

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__69
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  295			gfx_Clear(&ui_Type);
.LINE 295

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  296			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 296

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  297			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 297

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  298	
;  299			trig_SolveMissingAngle();
.LINE 299

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  300			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 300

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-76
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  301			trigstatus.a = true;
.LINE 301

	LD	A,1
	LD	(_trigstatus),A
;  302			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
.LINE 302

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PEA	IX+-85
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  303			trigstatus.b = true;
.LINE 303

	LD	A,1
	LD	(_trigstatus+1),A
;  304	
;  305			trig_Sync();
.LINE 305

	CALL	_trig_Sync
;  306			trigstatus.complete = true;
.LINE 306

	LD	A,1
	LD	(_trigstatus+6),A
;  307			trig_HeronsFormula();
.LINE 307

	CALL	_trig_HeronsFormula
;  308			ui_DispData();
.LINE 308

	CALL	_ui_DispData
;  309			return;
.LINE 309

	JR	L_113
;  310		}
;  311		else if (trigstatus.B && trigstatus.C && trigstatus.b)
L_75:
.LINE 311

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_73
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_73
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_73
;  312		{
;  313			dbg_sprintf(dbgout, "AAS_2 detected [%s, %s, %s]\n", xangles[1].label, xangles[2].label, xsides[1].label);
.LINE 313

	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__73
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  314			gfx_Clear(&ui_Type);
.LINE 314

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  315			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 315

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  316			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 316

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  317	
;  318			trig_SolveMissingAngle();
.LINE 318

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  319	
;  320			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 320

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PEA	IX+-94
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  321			trigstatus.c = true;
.LINE 321

	LD	A,1
	LD	(_trigstatus+2),A
;  322			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 322

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-103
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  323			trigstatus.a = true;
.LINE 323

	LD	A,1
	LD	(_trigstatus),A
;  324	
;  325			//dbg_printTriangle();
;  326			trig_Sync();
.LINE 326

	CALL	_trig_Sync
;  327			trigstatus.complete = true;
.LINE 327

	LD	A,1
	LD	(_trigstatus+6),A
;  328			trig_HeronsFormula();
.LINE 328

	CALL	_trig_HeronsFormula
;  329			ui_DispData();
.LINE 329

	CALL	_ui_DispData
;  330			return;
.LINE 330

	JR	L_113
;  331		}
;  332		else if (trigstatus.A && trigstatus.B && trigstatus.b)
L_73:
.LINE 332

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_88
;  333		{
;  334			dbg_sprintf(dbgout, "AAS_3 detected [%s, %s, %s]\n", xangles[0].label, xangles[1].label, xsides[1].label);
.LINE 334

	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__77
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  335			gfx_Clear(&ui_Type);
.LINE 335

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  336			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 336

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  337			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 337

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  338	
;  339			trig_SolveMissingAngle();
.LINE 339

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  340			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 340

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PEA	IX+-112
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  341			trigstatus.c = true;
.LINE 341

	LD	A,1
	LD	(_trigstatus+2),A
;  342			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
.LINE 342

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-121
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  343			trigstatus.a = true;
.LINE 343

	LD	A,1
	LD	(_trigstatus),A
;  344	
;  345			trig_Sync();
.LINE 345

	CALL	_trig_Sync
;  346			trigstatus.complete = true;
.LINE 346

	LD	A,1
	LD	(_trigstatus+6),A
;  347			trig_HeronsFormula();
.LINE 347

	CALL	_trig_HeronsFormula
;  348			ui_DispData();
.LINE 348

	CALL	_ui_DispData
;  349			return;
.LINE 349

	JR	L_113
;  350		}
L_88:
.LINE 350

;  351	
;  352		// ASA
;  353		// "ASA" is when we know two angles and a side between the angles.
;  354		if (trigstatus.A && trigstatus.c && trigstatus.B)
.LINE 354

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_87
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_87
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_87
;  355		{
;  356			dbg_sprintf(dbgout, "ASA_1 detected [%s, %s, %s]\n", xangles[0].label, xsides[2].label, xangles[1].label);
.LINE 356

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__81
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  357			gfx_Clear(&ui_Type);
.LINE 357

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  358			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 358

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  359			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 359

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  360	
;  361			trig_SolveMissingAngle();
.LINE 361

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  362			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 362

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-130
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  363			trigstatus.a = true;
.LINE 363

	LD	A,1
	LD	(_trigstatus),A
;  364			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
.LINE 364

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-139
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  365			trigstatus.b = true;
.LINE 365

	LD	A,1
	LD	(_trigstatus+1),A
;  366	
;  367			trig_Sync();
.LINE 367

	CALL	_trig_Sync
;  368			trigstatus.complete = true;
.LINE 368

	LD	A,1
	LD	(_trigstatus+6),A
;  369			trig_HeronsFormula();
.LINE 369

	CALL	_trig_HeronsFormula
;  370			ui_DispData();
.LINE 370

	CALL	_ui_DispData
;  371			return;
.LINE 371

	JR	L_113
;  372		}
;  373		else if (trigstatus.A && trigstatus.b && trigstatus.C) //todo: verify
L_87:
.LINE 373

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_85
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_85
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_85
;  374		{
;  375			dbg_sprintf(dbgout, "ASA_2 detected [%s, %s, %s]\n", xangles[0].label, xsides[1].label, xangles[2].label);
.LINE 375

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__85
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  376			gfx_Clear(&ui_Type);
.LINE 376

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  377			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 377

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  378			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 378

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  379	
;  380			trig_SolveMissingAngle();
.LINE 380

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  381			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
.LINE 381

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-148
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  382			trigstatus.a = true;
.LINE 382

	LD	A,1
	LD	(_trigstatus),A
;  383			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 383

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-157
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  384			trigstatus.c = true;
.LINE 384

	LD	A,1
	LD	(_trigstatus+2),A
;  385	
;  386			trig_Sync();
.LINE 386

	CALL	_trig_Sync
;  387			trigstatus.complete = true;
.LINE 387

	LD	A,1
	LD	(_trigstatus+6),A
;  388			trig_HeronsFormula();
.LINE 388

	CALL	_trig_HeronsFormula
;  389			ui_DispData();
.LINE 389

	CALL	_ui_DispData
;  390			return;
.LINE 390

	JR	L_113
;  391		}
;  392		else if (trigstatus.B && trigstatus.a && trigstatus.C) //todo: verify
L_85:
.LINE 392

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_100
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_100
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_100
;  393		{
;  394			dbg_sprintf(dbgout, "ASA_3 detected [%s, %s, %s]\n", xangles[1].label, xsides[0].label, xangles[2].label);
.LINE 394

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__89
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  395			gfx_Clear(&ui_Type);
.LINE 395

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  396			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 396

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  397			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 397

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  398	
;  399			trig_SolveMissingAngle();
.LINE 399

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  400			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
.LINE 400

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-166
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  401			trigstatus.b = true;
.LINE 401

	LD	A,1
	LD	(_trigstatus+1),A
;  402			triangle.c   = los_Side_x(triangle.C, triangle.a, triangle.A);
.LINE 402

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-175
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  403			trigstatus.c = true;
.LINE 403

	LD	A,1
	LD	(_trigstatus+2),A
;  404	
;  405			trig_Sync();
.LINE 405

	CALL	_trig_Sync
;  406			trigstatus.complete = true;
.LINE 406

	LD	A,1
	LD	(_trigstatus+6),A
;  407			trig_HeronsFormula();
.LINE 407

	CALL	_trig_HeronsFormula
;  408			ui_DispData();
.LINE 408

	CALL	_ui_DispData
;  409			return;
.LINE 409

	JR	L_113
;  410		}
L_100:
.LINE 410

;  411	
;  412		// SAS
;  413		// "SAS" is when we know two sides and the angle between them.
;  414		if (trigstatus.b && trigstatus.A && trigstatus.c)
.LINE 414

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_99
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_99
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_99
;  415		{
;  416			dbg_sprintf(dbgout, "SAS_1 detected [%s, %s, %s]\n", xsides[1].label, xangles[0].label, xsides[2].label);
.LINE 416

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__93
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  417			gfx_Clear(&ui_Type);
.LINE 417

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  418			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 418

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  419			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 419

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  420	
;  421			triangle.a   = loc_Side_x(triangle.b, triangle.c, triangle.A);
.LINE 421

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-184
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  422			trigstatus.a = true;
.LINE 422

	LD	A,1
	LD	(_trigstatus),A
;  423	
;  424			// todo: need to find the smaller of the two angles
;  425			triangle.B   = los_Angle_x(triangle.b, triangle.A, triangle.a);
.LINE 425

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-193
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  426			trigstatus.B = true;
.LINE 426

	LD	A,1
	LD	(_trigstatus+4),A
;  427	
;  428			trig_SolveMissingAngle();
.LINE 428

	CALL	_trig_SolveMissingAngle
;  429	
;  430			trigstatus.complete = true;
.LINE 430

	LD	A,1
	LD	(_trigstatus+6),A
;  431			trig_Sync();
.LINE 431

	CALL	_trig_Sync
;  432			trig_HeronsFormula();
.LINE 432

	CALL	_trig_HeronsFormula
;  433			ui_DispData();
.LINE 433

	CALL	_ui_DispData
;  434			return;
.LINE 434

	JR	L_113
;  435		}
;  436		else if (trigstatus.c && trigstatus.B && trigstatus.a) //todo: verify
L_99:
.LINE 436

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_97
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_97
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_97
;  437		{
;  438			dbg_sprintf(dbgout, "SAS_2 detected [%s, %s, %s]\n", xsides[2].label, xangles[1].label, xsides[0].label);
.LINE 438

	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,L__97
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  439			gfx_Clear(&ui_Type);
.LINE 439

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  440			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 440

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  441			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 441

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  442	
;  443			triangle.b   = loc_Side_x(triangle.a, triangle.c, triangle.B);
.LINE 443

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-202
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  444			trigstatus.b = true;
.LINE 444

	LD	A,1
	LD	(_trigstatus+1),A
;  445	
;  446			// todo: need to find the smaller of the two angles
;  447			triangle.A   = los_Angle_x(triangle.a, triangle.B, triangle.b);
.LINE 447

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-211
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  448			trigstatus.A = true;
.LINE 448

	LD	A,1
	LD	(_trigstatus+3),A
;  449	
;  450			trig_SolveMissingAngle();
.LINE 450

	CALL	_trig_SolveMissingAngle
;  451			trig_Sync();
.LINE 451

	CALL	_trig_Sync
;  452			trigstatus.complete = true;
.LINE 452

	LD	A,1
	LD	(_trigstatus+6),A
;  453			trig_HeronsFormula();
.LINE 453

	CALL	_trig_HeronsFormula
;  454			ui_DispData();
.LINE 454

	CALL	_ui_DispData
;  455			return;
.LINE 455

	JR	L_113
;  456		}
;  457		else if (trigstatus.b && trigstatus.C && trigstatus.a)
L_97:
.LINE 457

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_112
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_112
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_112
;  458		{
;  459			dbg_sprintf(dbgout, "SAS_3 detected [%s, %s, %s]\n", xsides[1].label, xangles[2].label, xsides[0].label);
.LINE 459

	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__101
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  460			gfx_Clear(&ui_Type);
.LINE 460

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  461			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 461

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  462			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 462

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  463	
;  464			triangle.c   = loc_Side_x(triangle.a, triangle.b, triangle.C);
.LINE 464

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-220
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  465			trigstatus.c = true;
.LINE 465

	LD	A,1
	LD	(_trigstatus+2),A
;  466	
;  467			// todo: need to find the smaller of the two angles
;  468			triangle.A   = los_Angle_x(triangle.a, triangle.C, triangle.c);
.LINE 468

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-229
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  469			trigstatus.A = true;
.LINE 469

	LD	A,1
	LD	(_trigstatus+3),A
;  470	
;  471			trig_SolveMissingAngle();
.LINE 471

	CALL	_trig_SolveMissingAngle
;  472			trig_Sync();
.LINE 472

	CALL	_trig_Sync
;  473			trigstatus.complete = true;
.LINE 473

	LD	A,1
	LD	(_trigstatus+6),A
;  474			trig_HeronsFormula();
.LINE 474

	CALL	_trig_HeronsFormula
;  475			ui_DispData();
.LINE 475

	CALL	_ui_DispData
;  476			return;
.LINE 476

	JR	L_113
;  477		}
L_112:
.LINE 477

;  478	
;  479		// SSA
;  480		// "SSA" is when we know two sides and an angle that is not the angle between the sides.
;  481		// todo: check if it has multiple answers
;  482		if (trigstatus.b && trigstatus.c && trigstatus.B)
.LINE 482

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_111
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_111
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_111
;  483		{
;  484			dbg_sprintf(dbgout, "SSA_1 detected [%s, %s, %s]\n", xsides[1].label, xsides[2].label, xangles[1].label);
.LINE 484

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__105
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  485			gfx_Clear(&ui_Type);
.LINE 485

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  486			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 486

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  487			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 487

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  488			trigstatus.isSSA = true;
.LINE 488

	LD	A,1
	LD	(_trigstatus+7),A
;  489	
;  490			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
.LINE 490

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-238
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  491			trigstatus.C = true;
.LINE 491

	LD	A,1
	LD	(_trigstatus+5),A
;  492	
;  493			trig_SolveMissingAngle();
.LINE 493

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  494	
;  495			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 495

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-247
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  496			trigstatus.a = true;
.LINE 496

	LD	A,1
	LD	(_trigstatus),A
;  497	
;  498			// other possible answer for C
;  499			rbuf = os_RealSub(&real180, &triangle.C);
.LINE 499

	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-256
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  500			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 500

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  501	
;  502			sprintf(cbuf2, "*C = %s", cbuf);
.LINE 502

	PEA	IX+-38
	LD	BC,L__106
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  503			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 503

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  504			gfx_Clear(&data_X_ex);
.LINE 504

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  505			gfx_Print(&data_X_ex);
.LINE 505

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  506			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 506

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__107
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  507			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
.LINE 507

	PEA	IX+-38
	LD	BC,L__108
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  508	
;  509			trig_Sync();
.LINE 509

	CALL	_trig_Sync
;  510			trigstatus.complete = true;
.LINE 510

	LD	A,1
	LD	(_trigstatus+6),A
;  511			trig_HeronsFormula();
.LINE 511

	CALL	_trig_HeronsFormula
;  512			ui_DispData();
.LINE 512

	CALL	_ui_DispData
;  513			return;
.LINE 513

	JR	L_113
;  514		}
;  515		else if (trigstatus.b && trigstatus.a && trigstatus.B) //todo: verify
L_111:
.LINE 515

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_109
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_109
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_109
;  516		{
;  517			dbg_sprintf(dbgout, "SSA_2 detected [%s, %s, %s]\n", xsides[1].label, xsides[0].label, xangles[1].label);
.LINE 517

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__112
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  518			gfx_Clear(&ui_Type);
.LINE 518

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  519			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 519

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  520			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 520

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  521			trigstatus.isSSA = true;
.LINE 521

	LD	A,1
	LD	(_trigstatus+7),A
;  522	
;  523			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
.LINE 523

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-265
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  524			trigstatus.C = true;
.LINE 524

	LD	A,1
	LD	(_trigstatus+5),A
;  525	
;  526			trig_SolveMissingAngle();
.LINE 526

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  527	
;  528			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 528

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-274
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  529			trigstatus.c = true;
.LINE 529

	LD	A,1
	LD	(_trigstatus+2),A
;  530	
;  531			// other possible answer for C
;  532			rbuf = os_RealSub(&real180, &triangle.C);
.LINE 532

	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-283
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  533			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 533

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  534	
;  535			sprintf(cbuf2, "*C = %s", cbuf);
.LINE 535

	PEA	IX+-38
	LD	BC,L__113
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  536			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 536

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  537			gfx_Clear(&data_X_ex);
.LINE 537

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  538			gfx_Print(&data_X_ex);
.LINE 538

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  539			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 539

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__114
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  540			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
.LINE 540

	PEA	IX+-38
	LD	BC,L__115
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  541	
;  542			trig_Sync();
.LINE 542

	CALL	_trig_Sync
;  543			trigstatus.complete = true;
.LINE 543

	LD	A,1
	LD	(_trigstatus+6),A
;  544			trig_HeronsFormula();
.LINE 544

	CALL	_trig_HeronsFormula
;  545			ui_DispData();
.LINE 545

	CALL	_ui_DispData
;  546			return;
.LINE 546

	JR	L_113
;  547		}
;  548		else if (trigstatus.a && trigstatus.c && trigstatus.C) //todo: verify
L_109:
.LINE 548

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_113
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_113
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_113
;  549		{
;  550			dbg_sprintf(dbgout, "SSA_3 detected [%s, %s, %s]\n", xsides[0].label, xsides[2].label, xangles[2].label);
.LINE 550

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	DE,L__119
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  551			gfx_Clear(&ui_Type);
.LINE 551

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  552			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 552

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  553			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 553

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  554			trigstatus.isSSA = true;
.LINE 554

	LD	A,1
	LD	(_trigstatus+7),A
;  555	
;  556			triangle.B   = los_Angle_x(triangle.a, triangle.C, triangle.c);
.LINE 556

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-292
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  557			trigstatus.B = true;
.LINE 557

	LD	A,1
	LD	(_trigstatus+4),A
;  558	
;  559			trig_SolveMissingAngle();
.LINE 559

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  560	
;  561			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
.LINE 561

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-301
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  562			trigstatus.b = true;
.LINE 562

	LD	A,1
	LD	(_trigstatus+1),A
;  563	
;  564			// other possible answer for B
;  565			rbuf = os_RealSub(&real180, &triangle.B);
.LINE 565

	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-310
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  566			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 566

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  567	
;  568			sprintf(cbuf2, "*B = %s", cbuf);
.LINE 568

	PEA	IX+-38
	LD	BC,L__120
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  569			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 569

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  570			gfx_Clear(&data_X_ex);
.LINE 570

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  571			gfx_Print(&data_X_ex);
.LINE 571

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  572			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 572

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__121
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  573			dbg_sprintf(dbgout, "Other possible solution for B = %s\n", cbuf);
.LINE 573

	PEA	IX+-38
	LD	BC,L__122
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  574	
;  575			trig_Sync();
.LINE 575

	CALL	_trig_Sync
;  576			trigstatus.complete = true;
.LINE 576

	LD	A,1
	LD	(_trigstatus+6),A
;  577			trig_HeronsFormula();
.LINE 577

	CALL	_trig_HeronsFormula
;  578			ui_DispData();
.LINE 578

	CALL	_ui_DispData
;  579			return;
;  580		}
;  581	}
L_113:
.LINE 581

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_CheckSolvability ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Print                          IMPORT  -----   function
;_data_X_ex                          STATIC     26   variable
;_os_RealToStr                       IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_lbl_SSA                            STATIC      8   variable
;_los_Angle_x                        IMPORT  -----   function
;_loc_Side_x                         IMPORT  -----   function
;_lbl_SAS                            STATIC      4   variable
;_lbl_ASA                            STATIC      4   variable
;_trig_HeronsFormula                 STATIC  -----   function
;_triangle                           STATIC     72   variable
;_los_Side_x                         IMPORT  -----   function
;_lbl_AAS                            STATIC      4   variable
;_xangles                            STATIC     78   variable
;_trig_SolveSSS                      STATIC  -----   function
;_gfx_PrintColor                     IMPORT  -----   function
;_lbl_SSS                            STATIC      4   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Type                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_trigstatus                         STATIC      8   variable
;_trig_Sync                          STATIC  -----   function
;_trig_SolveMissingAngle             STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;cbuf2                                IX-58     20   variable
;cbuf                                 IX-38     20   variable
;real180                              IX-18      9   variable
;rbuf                                  IX-9      9   variable


; Stack Frame Size: 319 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_CheckSolvability",581,"_trig_CheckSolvability"
	SEGMENT STRSECT
L__60:
	DB	"[Trig] Checking solvability..."
	DB	10,0
L__65:
	DB	"SSS detected [%s, %s, %s]"
	DB	10,0
L__69:
	DB	"AAS_1 detected [%s, %s, %s]"
	DB	10,0
L__73:
	DB	"AAS_2 detected [%s, %s, %s]"
	DB	10,0
L__77:
	DB	"AAS_3 detected [%s, %s, %s]"
	DB	10,0
L__81:
	DB	"ASA_1 detected [%s, %s, %s]"
	DB	10,0
L__85:
	DB	"ASA_2 detected [%s, %s, %s]"
	DB	10,0
L__89:
	DB	"ASA_3 detected [%s, %s, %s]"
	DB	10,0
L__93:
	DB	"SAS_1 detected [%s, %s, %s]"
	DB	10,0
L__97:
	DB	"SAS_2 detected [%s, %s, %s]"
	DB	10,0
L__101:
	DB	"SAS_3 detected [%s, %s, %s]"
	DB	10,0
L__105:
	DB	"SSA_1 detected [%s, %s, %s]"
	DB	10,0
L__106:
	DB	"*C = %s"
	DB	0
L__107:
	DB	"data_X_ex = %s"
	DB	10,0
L__108:
	DB	"Other possible solution for C = %s"
	DB	10,0
L__112:
	DB	"SSA_2 detected [%s, %s, %s]"
	DB	10,0
L__113:
	DB	"*C = %s"
	DB	0
L__114:
	DB	"data_X_ex = %s"
	DB	10,0
L__115:
	DB	"Other possible solution for C = %s"
	DB	10,0
L__119:
	DB	"SSA_3 detected [%s, %s, %s]"
	DB	10,0
L__120:
	DB	"*B = %s"
	DB	0
L__121:
	DB	"data_X_ex = %s"
	DB	10,0
L__122:
	DB	"Other possible solution for B = %s"
	DB	10,0
	SEGMENT CODE
;  582	
;  583	static void ui_ClearMeasurements()
;  584	{
_ui_ClearMeasurements:
.DEFINE "_ui_ClearMeasurements"

.VALUE _ui_ClearMeasurements

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_ClearMeasurements",584,"_ui_ClearMeasurements"

.LINE 584

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  585		int i = 0;
.LINE 585

	LD	BC,0
	LD	(IX+-3),BC
;  586		for (; i < 2; i++)
.LINE 586

	JR	L_117
L_115:
;  587		{
;  588			gfx_Clear(&xmeasureData[i]);
.LINE 588

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  589		}
L_117:
.LINE 589

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_115
;  590		dbg_sprintf(dbgout, "[UI] Cleared measurements\n");
.LINE 590

	LD	BC,L__125
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  591	}
.LINE 591

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_gfx_Clear                          IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_ClearMeasurements",591,"_ui_ClearMeasurements"
	SEGMENT STRSECT
L__125:
	DB	"[UI] Cleared measurements"
	DB	10,0
	SEGMENT CODE
;  592	
;  593	static void ui_ClearAngleSideData()
;  594	{
_ui_ClearAngleSideData:
.DEFINE "_ui_ClearAngleSideData"

.VALUE _ui_ClearAngleSideData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_ClearAngleSideData",594,"_ui_ClearAngleSideData"

.LINE 594

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  595		int i = 0;
.LINE 595

	LD	BC,0
	LD	(IX+-3),BC
;  596		for (; i < 3; i++)
.LINE 596

	JR	L_123
L_121:
;  597		{
;  598			gfx_Clear(&xsidesData[i]);
.LINE 598

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  599			gfx_Clear(&xanglesData[i]);
.LINE 599

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  600		}
L_123:
.LINE 600

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_121
;  601		dbg_sprintf(dbgout, "[UI] Cleared angle and side data\n");
.LINE 601

	LD	BC,L__128
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  602	}
.LINE 602

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_ClearAngleSideData",602,"_ui_ClearAngleSideData"
	SEGMENT STRSECT
L__128:
	DB	"[UI] Cleared angle and side data"
	DB	10,0
	SEGMENT CODE
;  603	
;  604	static void trig_SelectSide()
;  605	{
_trig_SelectSide:
.DEFINE "_trig_SelectSide"

.VALUE _trig_SelectSide

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SelectSide",605,"_trig_SelectSide"

.LINE 605

.DEFINE "currentSelection"

.CLASS 65

.VALUE -3

.TAG "NONAME16"

.TYPE 40

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-52
	LD	SP,HL
;  606		uint8_t key;
;  607		superpoint_t* currentSelection = &xsides[1]; // start at b
.LINE 607

	LD	IY,_xsides
	LEA	BC,IY+26
	LD	(IX+-3),BC
;  608		gfx_HighlightPoint(&xsides[1]);
.LINE 608

	LEA	BC,IY+26
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  609		RECURSE:
.LINE 609

;  610		while ((key = os_GetCSC()) != sk_Enter)
.LINE 610

	JR	L_156
L_157:
;  611		{
;  612			if (key == sk_Clear)
.LINE 612

	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_165
;  613			{
;  614				return;
.LINE 614

;  615			}
.LINE 615

;  616	
;  617			if (key == sk_Zoom)
.LINE 617

	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_134
;  618			{
;  619				if (ui_bDispMeasurements)
.LINE 619

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_129
;  620				{
;  621					ui_bDispMeasurements = false;
.LINE 621

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  622					ui_ClearMeasurements();
.LINE 622

	CALL	_ui_ClearMeasurements
;  623				}
;  624				else
.LINE 624

	JR	L_130
L_129:
;  625				{
;  626					ui_bDispMeasurements = true;
.LINE 626

	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  627					ui_ClearAngleSideData();
.LINE 627

	CALL	_ui_ClearAngleSideData
;  628				}
L_130:
.LINE 628

;  629				ui_DispData();
.LINE 629

	CALL	_ui_DispData
;  630			}
L_134:
.LINE 630

;  631	
;  632			if (key == sk_Trace)
.LINE 632

	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_136
;  633			{
;  634				trig_Reset();
.LINE 634

	CALL	_trig_Reset
;  635				currentSelection = &xsides[1];
.LINE 635

	LD	IY,_xsides
	LEA	BC,IY+26
	LD	(IX+-3),BC
;  636				gfx_HighlightPoint(&xsides[1]);
.LINE 636

	LEA	BC,IY+26
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  637			}
L_136:
.LINE 637

;  638	
;  639			if (key == sk_Graph)
.LINE 639

	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_139
;  640			{
;  641				gfx_Clear(&ui_Mode);
.LINE 641

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  642				sp_SetLabel(&ui_Mode, lbl_AngleMode);
.LINE 642

	LD	BC,_lbl_AngleMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  643				gfx_Print(&ui_Mode);
.LINE 643

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  644				gfx_ClearHighlight(currentSelection);
.LINE 644

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  645				trig_SelectAngle();
.LINE 645

	CALL	_trig_SelectAngle
;  646				return;
.LINE 646

	JR	L_165
;  647			}
L_139:
.LINE 647

;  648	
;  649			/* bbb -> aaa */
;  650			if (key == sk_Right && PointEq(*currentSelection, xsides[1]))
.LINE 650

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_142
	LD	BC,_xsides+26
	LD	(IX+-16),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_142
;  651			{
;  652				gfx_ClearHighlight(&xsides[1]);
.LINE 652

	LD	BC,(IX+-16)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  653				gfx_HighlightPoint(&xsides[0]);
.LINE 653

	LD	BC,_xsides
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  654				currentSelection = &xsides[0];
.LINE 654

	LD	BC,_xsides
	LD	(IX+-3),BC
;  655			}
L_142:
.LINE 655

;  656	
;  657			/* bbb -> ccc */
;  658			if (key == sk_Down && PointEq(*currentSelection, xsides[1]))
.LINE 658

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_146
	LD	BC,_xsides+26
	LD	(IX+-19),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_146
;  659			{
;  660				gfx_ClearHighlight(&xsides[1]);
.LINE 660

	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  661				gfx_HighlightPoint(&xsides[2]);
.LINE 661

	LD	BC,_xsides+52
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  662				currentSelection = &xsides[2];
.LINE 662

	LD	BC,_xsides+52
	LD	(IX+-3),BC
;  663			}
L_146:
.LINE 663

;  664	
;  665			/* ccc -> bbb */
;  666			if ((key == sk_Up || key == sk_Left) && PointEq(*currentSelection, xsides[2]))
.LINE 666

	LD	A,(IX+-4)
	CP	A,4
	JR	Z,L_144
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_149
L_144:
	LD	BC,_xsides+52
	LD	(IX+-22),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_149
;  667			{
;  668				gfx_ClearHighlight(&xsides[2]);
.LINE 668

	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  669				gfx_HighlightPoint(&xsides[1]);
.LINE 669

	LD	BC,_xsides+26
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  670				currentSelection = &xsides[1];
.LINE 670

	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  671			}
L_149:
.LINE 671

;  672	
;  673			/* ccc -> aaa */
;  674			if (key == sk_Right && PointEq(*currentSelection, xsides[2]))
.LINE 674

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_152
	LD	BC,_xsides+52
	LD	(IX+-13),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_152
;  675			{
;  676				gfx_ClearHighlight(&xsides[2]);
.LINE 676

	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  677				gfx_HighlightPoint(&xsides[0]);
.LINE 677

	LD	BC,_xsides
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  678				currentSelection = &xsides[0];
.LINE 678

	LD	BC,_xsides
	LD	(IX+-3),BC
;  679			}
L_152:
.LINE 679

;  680	
;  681			/* aaa -> bbb */
;  682			if (key == sk_Left && PointEq(*currentSelection, xsides[0]))
.LINE 682

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_155
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_155
;  683			{
;  684				gfx_ClearHighlight(&xsides[0]);
.LINE 684

	LD	BC,_xsides
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  685				gfx_HighlightPoint(&xsides[1]);
.LINE 685

	LD	BC,_xsides+26
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  686				currentSelection = &xsides[1];
.LINE 686

	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  687			}
L_155:
.LINE 687

;  688	
;  689			/* aaa -> ccc */
;  690			if (key == sk_Down && PointEq(*currentSelection, xsides[0]))
.LINE 690

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_156
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_156
;  691			{
;  692				gfx_ClearHighlight(&xsides[0]);
.LINE 692

	LD	BC,_xsides
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  693				gfx_HighlightPoint(&xsides[2]);
.LINE 693

	LD	BC,_xsides+52
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  694				currentSelection = &xsides[2];
.LINE 694

	LD	BC,_xsides+52
	LD	(IX+-3),BC
;  695			}
;  696		}
L_156:
.LINE 696

	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_157
;  697	
;  698		if (PointEq(*currentSelection, xsides[0]))
.LINE 698

	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_161
;  699		{
;  700			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", xsides[0].label);
.LINE 700

	LD	BC,_xsides
	LD	(IX+-25),BC
	LD	BC,_xsides+6
	PUSH	BC
	LD	BC,L__150
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  701			triangle.a   = io_gfx_ReadReal(&xsides[0]);
.LINE 701

	LD	BC,(IX+-25)
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  702			trigstatus.a = true;
.LINE 702

	LD	A,1
	LD	(_trigstatus),A
;  703		}
L_161:
.LINE 703

;  704	
;  705		if (PointEq(*currentSelection, xsides[1]))
.LINE 705

	LD	BC,_xsides+26
	LD	(IX+-10),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_163
;  706		{
;  707			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", xsides[1].label);
.LINE 707

	LD	IY,(IX+-10)
	PEA	IY+6
	LD	BC,L__152
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  708			triangle.b   = io_gfx_ReadReal(&xsides[1]);
.LINE 708

	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  709			trigstatus.b = true;
.LINE 709

	LD	A,1
	LD	(_trigstatus+1),A
;  710		}
L_163:
.LINE 710

;  711	
;  712		if (PointEq(*currentSelection, xsides[2]))
.LINE 712

	LD	BC,_xsides+52
	LD	(IX+-7),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_164
;  713		{
;  714			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", xsides[2].label);
.LINE 714

	LD	IY,(IX+-7)
	PEA	IY+6
	LD	BC,L__154
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  715			triangle.c   = io_gfx_ReadReal(&xsides[2]);
.LINE 715

	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-52
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  716			trigstatus.c = true;
.LINE 716

	LD	A,1
	LD	(_trigstatus+2),A
;  717		}
L_164:
.LINE 717

;  718	
;  719		trig_CheckSolvability();
.LINE 719

	CALL	_trig_CheckSolvability
;  720		gfx_HighlightPoint(currentSelection);
.LINE 720

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  721		goto RECURSE;
.LINE 721

	JR	L_156
;  722	
;  723	}
L_165:
.LINE 723

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectSide ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_PointEq                            IMPORT  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_gfx_ClearHighlight                 IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_lbl_AngleMode                      STATIC     11   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_gfx_HighlightPoint                 IMPORT  -----   function
;_xsides                             STATIC     78   variable
;G_9                                  IX-25      3   variable
;G_4                                  IX-22      3   variable
;G_2                                  IX-19      3   variable
;G_1                                  IX-16      3   variable
;G_6                                  IX-13      3   variable
;G_10                                 IX-10      3   variable
;G_12                                  IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 58 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SelectSide",723,"_trig_SelectSide"
	SEGMENT STRSECT
L__150:
	DB	"[Trig] User selected side %s"
	DB	10,0
L__152:
	DB	"[Trig] User selected side %s"
	DB	10,0
L__154:
	DB	"[Trig] User selected side %s"
	DB	10,0
	SEGMENT CODE
;  724	
;  725	static void trig_Quit()
;  726	{
_trig_Quit:
.DEFINE "_trig_Quit"

.VALUE _trig_Quit

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Quit",726,"_trig_Quit"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  727		gfx_ZeroScreen();
.LINE 727

	CALL	_gfx_ZeroScreen
;  728		gfx_End();
.LINE 728

	CALL	_gfx_End
;  729		dbg_sprintf(dbgout, "[Trig] Zeroed screen and ended GFX\n");
.LINE 729

	LD	BC,L__156
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  730	}
.LINE 730

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Quit ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_gfx_End                            IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Quit",730,"_trig_Quit"
	SEGMENT STRSECT
L__156:
	DB	"[Trig] Zeroed screen and ended GFX"
	DB	10,0
	SEGMENT CODE
;  731	
;  732	static void trig_Reset()
;  733	{
_trig_Reset:
.DEFINE "_trig_Reset"

.VALUE _trig_Reset

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Reset",733,"_trig_Reset"

.LINE 733

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-12
	LD	SP,HL
;  734		int i = 0;
.LINE 734

	LD	BC,0
	LD	(IX+-3),BC
;  735		bool  * bptr = (bool*) &trigstatus;
;  736		real_t* rptr = (real_t*) &triangle;
;  737		for (; i < sizeof(trigstatus) / sizeof(bool); i++)
.LINE 737

	JR	L_170
L_168:
;  738		{
;  739			bptr[i] = false;
.LINE 739

	LD	BC,_trigstatus
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  740		}
L_170:
.LINE 740

	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_168
;  741		for (i = 0; i < sizeof(triangle) / sizeof(real_t); i++)
.LINE 741

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_174
L_172:
;  742		{
;  743			rptr[i] = os_Int24ToReal(0);
.LINE 743

	LD	BC,0
	PUSH	BC
	PEA	IX+-12
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	A,9
	CALL	__imul_b
	LD	DE,_triangle
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,9
	LDIR	
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  744		}
L_174:
.LINE 744

	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_172
;  745		for (i = 0; i < 3; i++)
.LINE 745

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_179
L_177:
;  746		{
;  747			gfx_Clear(&xanglesData[i]);
.LINE 747

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  748			lib_MemZero(xanglesData[i].label + kLabelOffset, 16);
.LINE 748

	LD	BC,16
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  749	
;  750			gfx_Clear(&xsidesData[i]);
.LINE 750

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  751			lib_MemZero(xsidesData[i].label + kLabelOffset, 16);
.LINE 751

	LD	BC,16
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  752		}
L_179:
.LINE 752

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_177
;  753		gfx_Clear(&ui_Type);
.LINE 753

	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  754		gfx_Clear(&data_X_ex);
.LINE 754

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  755		lib_MemZero(data_X_ex.label + kLabelOffset, 16);
.LINE 755

	LD	BC,16
	PUSH	BC
	LD	BC,_data_X_ex+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  756	
;  757		gfx_Clear(&xmeasureData[0]);
.LINE 757

	LD	BC,_xmeasureData
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  758		gfx_Clear(&xmeasureData[1]);
.LINE 758

	LD	BC,_xmeasureData+26
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  759		lib_MemZero(xmeasureData[0].label + kLabelOffset, 20 - kLabelOffset);
.LINE 759

	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  760		lib_MemZero(xmeasureData[1].label + kLabelOffset, 20 - kLabelOffset);
.LINE 760

	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  761	
;  762		sp_SetLabel(&xangles[0], "A");
.LINE 762

	LD	BC,L__161
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  763		sp_SetLabel(&xangles[1], "B");
.LINE 763

	LD	BC,L__162
	PUSH	BC
	LD	BC,_xangles+26
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  764		sp_SetLabel(&xangles[2], "C");
.LINE 764

	LD	BC,L__163
	PUSH	BC
	LD	BC,_xangles+52
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  765		sp_SetLabel(&xsides[0], "a");
.LINE 765

	LD	BC,L__164
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  766		sp_SetLabel(&xsides[1], "b");
.LINE 766

	LD	BC,L__165
	PUSH	BC
	LD	BC,_xsides+26
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  767		sp_SetLabel(&xsides[2], "c");
.LINE 767

	LD	BC,L__166
	PUSH	BC
	LD	BC,_xsides+52
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  768		trig_Redraw();
.LINE 768

	CALL	_trig_Redraw
;  769		trig_DrawTriangleSides();
.LINE 769

	CALL	_trig_DrawTriangleSides
;  770		trig_Sync();
.LINE 770

	CALL	_trig_Sync
;  771	}
.LINE 771

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Reset ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_DrawTriangleSides             STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_sp_SetLabel                        IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_data_X_ex                          STATIC     26   variable
;_ui_Type                            STATIC     26   variable
;_xsidesData                         STATIC     78   variable
;_lib_MemZero                        IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_Int24ToReal                     IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 18 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Reset",771,"_trig_Reset"
	SEGMENT STRSECT
L__161:
	DB	"A"
	DB	0
L__162:
	DB	"B"
	DB	0
L__163:
	DB	"C"
	DB	0
L__164:
	DB	"a"
	DB	0
L__165:
	DB	"b"
	DB	0
L__166:
	DB	"c"
	DB	0
	SEGMENT CODE
;  772	
;  773	static void trig_DrawTriangleSides()
;  774	{
_trig_DrawTriangleSides:
.DEFINE "_trig_DrawTriangleSides"

.VALUE _trig_DrawTriangleSides

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_DrawTriangleSides",774,"_trig_DrawTriangleSides"

.LINE 774

.DEFINE "index"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "verts"

.CLASS 65

.VALUE -36

.DIM 6

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-36
	LD	SP,HL
;  775		int index = 0;
;  776	
;  777		/* Triangle coordinates */
;  778		const int verts[6] = {
;  779				140, 10,   /* (x0, y0) */
;  780				10, 119,  /* (x1, y1) */
;  781				209, 119, /* (x2, y2) */
;  782		};
.LINE 782

	LEA	DE,IX+-36
	LD	HL,_0temp183
	LD	BC,18
	LDIR	
;  783	
;  784		/* Leg a */
;  785		gfx_Line(verts[0], verts[1], verts[2], verts[3]);
.LINE 785

	LEA	IY,IX+-36
	LEA	BC,IY+9
	LD	(IX+-9),BC
	LEA	BC,IY+6
	LD	(IX+-6),BC
	LEA	IY,IX+-33
	LD	(IX+-18),IY
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  786	
;  787		/* Leg b */
;  788		gfx_Line(verts[2], verts[3], verts[4], verts[5]);
.LINE 788

	LEA	BC,IX+-21
	LD	(IX+-15),BC
	LEA	IY,IX+-24
	LD	(IX+-12),IY
	LD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  789	
;  790		/* Hypotenuse */
;  791		gfx_Line(verts[4], verts[5], verts[0], verts[1]);
.LINE 791

	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	LD	HL,(IX+-15)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  792	
;  793	
;  794		// Angles A, B, C
;  795		trig_Redraw();
.LINE 795

	CALL	_trig_Redraw
;  796	
;  797		// Leg a, b, c
;  798		for (index = 0; index < 3; index++)
.LINE 798

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_187
L_185:
;  799		{
;  800			gfx_Print(&xsides[index]);
.LINE 800

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  801		}
L_187:
.LINE 801

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_185
;  802	}
.LINE 802

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_DrawTriangleSides ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_gfx_Print                          IMPORT  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gfx_Line                           IMPORT  -----   function
;_0temp183                           STATIC     18   variable
;verts                                IX-36     18   variable
;G_18                                 IX-18      3   variable
;G_16                                 IX-15      3   variable
;G_17                                 IX-12      3   variable
;G_14                                  IX-9      3   variable
;G_15                                  IX-6      3   variable
;index                                 IX-3      3   variable


; Stack Frame Size: 42 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_DrawTriangleSides",802,"_trig_DrawTriangleSides"
	SEGMENT TEXT
_0temp183:
	DW	140
	DB	0
	DW	10
	DB	0
	DW	10
	DB	0
	DW	119
	DB	0
	DW	209
	DB	0
	DW	119
	DB	0
	SEGMENT CODE
;  803	
;  804	static void ui_DispData()
;  805	{
_ui_DispData:
.DEFINE "_ui_DispData"

.VALUE _ui_DispData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispData",805,"_ui_DispData"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  806		if (ui_bDispMeasurements)
.LINE 806

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_191
;  807		{
;  808			ui_DispMeasurements();
.LINE 808

	CALL	_ui_DispMeasurements
;  809		}
;  810		else if (!ui_bDispMeasurements)
.LINE 810

	JR	L_192
L_191:
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	NZ,L_192
;  811		{
;  812			ui_DispAngleSideData();
.LINE 812

	CALL	_ui_DispAngleSideData
;  813		}
;  814	}
L_192:
.LINE 814

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispData ***************************
;Name                         Addr/Register   Size   Type
;_ui_DispAngleSideData               STATIC  -----   function
;_ui_DispMeasurements                STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispData",814,"_ui_DispData"
;  815	
;  816	static void trig_SelectAngle()
;  817	{
_trig_SelectAngle:
.DEFINE "_trig_SelectAngle"

.VALUE _trig_SelectAngle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SelectAngle",817,"_trig_SelectAngle"

.LINE 817

.DEFINE "currentSelection"

.CLASS 65

.VALUE -3

.TAG "NONAME16"

.TYPE 40

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-52
	LD	SP,HL
;  818		uint8_t key;
;  819		superpoint_t* currentSelection = &xangles[0];
.LINE 819

	LD	BC,_xangles
	LD	(IX+-3),BC
;  820		gfx_HighlightPoint(&xangles[0]);
.LINE 820

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  821		RECURSE:
.LINE 821

;  822		while ((key = os_GetCSC()) != sk_Enter)
.LINE 822

	JR	L_222
L_223:
;  823		{
;  824			if (key == sk_Clear)
.LINE 824

	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_231
;  825			{
;  826				return;
.LINE 826

;  827			}
.LINE 827

;  828	
;  829			if (key == sk_Zoom)
.LINE 829

	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_201
;  830			{
;  831				if (ui_bDispMeasurements)
.LINE 831

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_196
;  832				{
;  833					ui_bDispMeasurements = false;
.LINE 833

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  834					ui_ClearMeasurements();
.LINE 834

	CALL	_ui_ClearMeasurements
;  835				}
;  836				else
.LINE 836

	JR	L_197
L_196:
;  837				{
;  838					ui_bDispMeasurements = true;
.LINE 838

	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  839					ui_ClearAngleSideData();
.LINE 839

	CALL	_ui_ClearAngleSideData
;  840				}
L_197:
.LINE 840

;  841				ui_DispData();
.LINE 841

	CALL	_ui_DispData
;  842			}
L_201:
.LINE 842

;  843	
;  844			if (key == sk_Trace)
.LINE 844

	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_203
;  845			{
;  846				trig_Reset();
.LINE 846

	CALL	_trig_Reset
;  847				currentSelection = &xangles[0];
.LINE 847

	LD	BC,_xangles
	LD	(IX+-3),BC
;  848				gfx_HighlightPoint(&xangles[0]);
.LINE 848

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  849			}
L_203:
.LINE 849

;  850	
;  851			if (key == sk_Graph)
.LINE 851

	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_206
;  852			{
;  853				gfx_Clear(&ui_Mode);
.LINE 853

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  854				sp_SetLabel(&ui_Mode, lbl_SideMode);
.LINE 854

	LD	BC,_lbl_SideMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  855				gfx_Print(&ui_Mode);
.LINE 855

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  856				gfx_ClearHighlight(currentSelection);
.LINE 856

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  857				trig_SelectSide();
.LINE 857

	CALL	_trig_SelectSide
;  858				return;
.LINE 858

	JR	L_231
;  859			}
L_206:
.LINE 859

;  860	
;  861			/* AAA -> BBB */
;  862			if (key == sk_Right && PointEq(*currentSelection, xangles[0]))
.LINE 862

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_209
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_209
;  863			{
;  864				gfx_ClearHighlight(&xangles[0]);
.LINE 864

	LD	BC,_xangles
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  865				gfx_HighlightPoint(&xangles[1]);
.LINE 865

	LD	BC,_xangles+26
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  866				currentSelection = &xangles[1];
.LINE 866

	LD	BC,_xangles+26
	LD	(IX+-3),BC
;  867			}
L_209:
.LINE 867

;  868	
;  869			/* AAA -> CCC */
;  870			if (key == sk_Up && PointEq(*currentSelection, xangles[0]))
.LINE 870

	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_212
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_212
;  871			{
;  872				gfx_ClearHighlight(&xangles[0]);
.LINE 872

	LD	BC,_xangles
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  873				gfx_HighlightPoint(&xangles[2]);
.LINE 873

	LD	BC,_xangles+52
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  874				currentSelection = &xangles[2];
.LINE 874

	LD	BC,_xangles+52
	LD	(IX+-3),BC
;  875			}
L_212:
.LINE 875

;  876	
;  877			/* BBB -> AAA */
;  878			if (key == sk_Left && PointEq(*currentSelection, xangles[1]))
.LINE 878

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_215
	LD	BC,_xangles+26
	LD	(IX+-16),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_215
;  879			{
;  880				gfx_ClearHighlight(&xangles[1]);
.LINE 880

	LD	BC,(IX+-16)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  881				gfx_HighlightPoint(&xangles[0]);
.LINE 881

	LD	BC,_xangles
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  882				currentSelection = &xangles[0];
.LINE 882

	LD	BC,_xangles
	LD	(IX+-3),BC
;  883			}
L_215:
.LINE 883

;  884	
;  885			/* BBB -> CCC */
;  886			if (key == sk_Up && PointEq(*currentSelection, xangles[1]))
.LINE 886

	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_218
	LD	BC,_xangles+26
	LD	(IX+-19),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_218
;  887			{
;  888				gfx_ClearHighlight(&xangles[1]);
.LINE 888

	LD	BC,(IX+-19)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  889				gfx_HighlightPoint(&xangles[2]);
.LINE 889

	LD	BC,_xangles+52
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  890				currentSelection = &xangles[2];
.LINE 890

	LD	BC,_xangles+52
	LD	(IX+-3),BC
;  891			}
L_218:
.LINE 891

;  892	
;  893			/* CCC -> AAA */
;  894			if (key == sk_Left && PointEq(*currentSelection, xangles[2]))
.LINE 894

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_221
	LD	BC,_xangles+52
	LD	(IX+-22),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_221
;  895			{
;  896				gfx_ClearHighlight(&xangles[2]);
.LINE 896

	LD	BC,(IX+-22)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  897				gfx_HighlightPoint(&xangles[0]);
.LINE 897

	LD	BC,_xangles
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  898				currentSelection = &xangles[0];
.LINE 898

	LD	BC,_xangles
	LD	(IX+-3),BC
;  899			}
L_221:
.LINE 899

;  900	
;  901			/* CCC -> BBB */
;  902			if (key == sk_Down && PointEq(*currentSelection, xangles[2]))
.LINE 902

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_222
	LD	BC,_xangles+52
	LD	(IX+-13),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_222
;  903			{
;  904				gfx_ClearHighlight(&xangles[2]);
.LINE 904

	LD	BC,(IX+-13)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  905				gfx_HighlightPoint(&xangles[1]);
.LINE 905

	LD	BC,_xangles+26
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  906				currentSelection = &xangles[1];
.LINE 906

	LD	BC,_xangles+26
	LD	(IX+-3),BC
;  907			}
;  908		}
L_222:
.LINE 908

	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_223
;  909	
;  910		if (PointEq(*currentSelection, xangles[0]))
.LINE 910

	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_227
;  911		{
;  912			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", xangles[0].label);
.LINE 912

	LD	BC,_xangles
	LD	(IX+-25),BC
	LD	BC,_xangles+6
	PUSH	BC
	LD	BC,L__192
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  913			triangle.A   = io_gfx_ReadReal(&xangles[0]);
.LINE 913

	LD	BC,(IX+-25)
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  914			trigstatus.A = true;
.LINE 914

	LD	A,1
	LD	(_trigstatus+3),A
;  915		}
L_227:
.LINE 915

;  916	
;  917		if (PointEq(*currentSelection, xangles[1]))
.LINE 917

	LD	BC,_xangles+26
	LD	(IX+-10),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_229
;  918		{
;  919			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", xangles[1].label);
.LINE 919

	LD	IY,(IX+-10)
	PEA	IY+6
	LD	BC,L__194
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  920			triangle.B   = io_gfx_ReadReal(&xangles[1]);
.LINE 920

	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  921			trigstatus.B = true;
.LINE 921

	LD	A,1
	LD	(_trigstatus+4),A
;  922		}
L_229:
.LINE 922

;  923	
;  924		if (PointEq(*currentSelection, xangles[2]))
.LINE 924

	LD	BC,_xangles+52
	LD	(IX+-7),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_230
;  925		{
;  926			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", xangles[2].label);
.LINE 926

	LD	IY,(IX+-7)
	PEA	IY+6
	LD	BC,L__196
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  927			triangle.C   = io_gfx_ReadReal(&xangles[2]);
.LINE 927

	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-52
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  928			trigstatus.C = true;
.LINE 928

	LD	A,1
	LD	(_trigstatus+5),A
;  929		}
L_230:
.LINE 929

;  930	
;  931		trig_CheckSolvability();
.LINE 931

	CALL	_trig_CheckSolvability
;  932		gfx_HighlightPoint(currentSelection);
.LINE 932

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  933		goto RECURSE;
.LINE 933

	JR	L_222
;  934	}
L_231:
.LINE 934

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectAngle ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_PointEq                            IMPORT  -----   function
;_trig_SelectSide                    STATIC  -----   function
;_gfx_ClearHighlight                 IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_lbl_SideMode                       STATIC     10   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_gfx_HighlightPoint                 IMPORT  -----   function
;_xangles                            STATIC     78   variable
;G_27                                 IX-25      3   variable
;G_24                                 IX-22      3   variable
;G_22                                 IX-19      3   variable
;G_21                                 IX-16      3   variable
;G_25                                 IX-13      3   variable
;G_28                                 IX-10      3   variable
;G_30                                  IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 58 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SelectAngle",934,"_trig_SelectAngle"
	SEGMENT STRSECT
L__192:
	DB	"[Trig] User selected angle %s"
	DB	10,0
L__194:
	DB	"[Trig] User selected angle %s"
	DB	10,0
L__196:
	DB	"[Trig] User selected angle %s"
	DB	10,0
	SEGMENT CODE
;  935	
;  936	static void ui_DispMeasurements()
;  937	{
_ui_DispMeasurements:
.DEFINE "_ui_DispMeasurements"

.VALUE _ui_DispMeasurements

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispMeasurements",937,"_ui_DispMeasurements"

.LINE 937

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "real0"

.CLASS 65

.VALUE -12

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "buffer"

.CLASS 65

.VALUE -32

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-41
	LD	SP,HL
;  938		char         buffer[20];
;  939		const real_t real0 = os_Int24ToReal(0);
.LINE 939

	LD	BC,0
	PUSH	BC
	PEA	IX+-41
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  940		int          i     = 0;
.LINE 940

	LD	BC,0
	LD	(IX+-3),BC
;  941	
;  942		for (; i < 2; i++)
.LINE 942

	JR	L_235
L_233:
;  943		{
;  944			gfx_Clear(&xmeasureData[i]);
.LINE 944

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  945		}
L_235:
.LINE 945

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_233
;  946	
;  947		if (os_RealCompare(&triangle.area, &real0) == 0)
.LINE 947

	PEA	IX+-12
	LD	BC,_triangle+54
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_237
;  948		{
;  949			strcpy(xmeasureData[0].label + kLabelOffset, lbl_Unknown);
.LINE 949

	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  950		}
;  951		else
.LINE 951

	JR	L_241
L_237:
;  952		{
;  953			os_RealToStr(buffer, &triangle.area, 0, 0, 6);
.LINE 953

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  954			strncpy(xmeasureData[0].label + kLabelOffset, buffer, 20 - kLabelOffset);
.LINE 954

	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  955		}
L_241:
.LINE 955

;  956	
;  957		if (os_RealCompare(&triangle.perimeter, &real0) == 0)
.LINE 957

	PEA	IX+-12
	LD	BC,_triangle+63
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_240
;  958		{
;  959			strcpy(xmeasureData[1].label + kLabelOffset, lbl_Unknown);
.LINE 959

	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  960		}
;  961		else
.LINE 961

	JR	L_246
L_240:
;  962		{
;  963			os_RealToStr(buffer, &triangle.perimeter, 0, 0, 6);
.LINE 963

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  964			strncpy(xmeasureData[1].label + kLabelOffset, buffer, 20 - kLabelOffset);
.LINE 964

	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  965		}
L_246:
.LINE 965

;  966	
;  967	
;  968		for (i = 0; i < 2; i++)
.LINE 968

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_245
L_243:
;  969		{
;  970			gfx_Clear(&xmeasureData[i]);
.LINE 970

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  971			gfx_Print(&xmeasureData[i]);
.LINE 971

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  972		}
L_245:
.LINE 972

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_243
;  973	}
.LINE 973

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Print                          IMPORT  -----   function
;_strncpy                            IMPORT  -----   function
;_os_RealToStr                       IMPORT  -----   function
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealCompare                     IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_gfx_Clear                          IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buffer                               IX-32     20   variable
;real0                                IX-12      9   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 47 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispMeasurements",973,"_ui_DispMeasurements"
;  974	
;  975	static void ui_DispAngleSideData()
;  976	{
_ui_DispAngleSideData:
.DEFINE "_ui_DispAngleSideData"

.VALUE _ui_DispAngleSideData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispAngleSideData",976,"_ui_DispAngleSideData"

.LINE 976

.DEFINE "i"

.CLASS 65

.VALUE -12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-24
	LD	SP,HL
;  977		int i = 0;
.LINE 977

	LD	BC,0
	LD	(IX+-12),BC
;  978		for (; i < 3; i++)
.LINE 978

	JR	L_261
L_259:
;  979		{
;  980			gfx_Clear(&xsidesData[i]);
.LINE 980

	LD	HL,(IX+-12)
	LD	A,26
	CALL	__imul_b
	LD	(IX+-3),HL
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  981			gfx_Clear(&xanglesData[i]);
.LINE 981

	LD	BC,_xanglesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  982	
;  983			if (*xsides[i].label == 'a' || *xsides[i].label == 'b' || *xsides[i].label == 'c')
.LINE 983

	LD	BC,_xsides
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-15),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,97
	OR	A,A
	SBC	HL,BC
	JR	Z,L_251
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,98
	OR	A,A
	SBC	HL,BC
	JR	Z,L_251
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,99
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_252
L_251:
;  984				strcpy(xsidesData[i].label + kLabelOffset, lbl_Unknown);
.LINE 984

	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  985			else strcpy(xsidesData[i].label + kLabelOffset, xsides[i].label);
.LINE 985

	JR	L_257
L_252:
	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_xsides
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_257:
;  986	
;  987			if (*xangles[i].label == 'A' || *xangles[i].label == 'B' || *xangles[i].label == 'C')
.LINE 987

	LD	BC,(IX+-21)
	LD	(IX+-6),BC
	LD	BC,_xangles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-18),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,65
	OR	A,A
	SBC	HL,BC
	JR	Z,L_255
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,66
	OR	A,A
	SBC	HL,BC
	JR	Z,L_255
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,67
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_256
L_255:
;  988				strcpy(xanglesData[i].label + kLabelOffset, lbl_Unknown);
.LINE 988

	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xanglesData
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  989			else strcpy(xanglesData[i].label + kLabelOffset, xangles[i].label);
.LINE 989

	JR	L_258
L_256:
	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_xangles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	BC,_xanglesData
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_258:
;  990	
;  991			gfx_Clear(&xanglesData[i]);
.LINE 991

	LD	BC,(IX+-24)
	LD	(IX+-9),BC
	LD	BC,_xanglesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  992			gfx_Print(&xanglesData[i]);
.LINE 992

	LD	BC,_xanglesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;  993	
;  994			gfx_Clear(&xsidesData[i]);
.LINE 994

	LD	BC,_xsidesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  995			gfx_Print(&xsidesData[i]);
.LINE 995

	LD	BC,_xsidesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-12)
	INC	BC
	LD	(IX+-12),BC
;  996		}
L_261:
.LINE 996

	LD	BC,3
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_259
;  997		if (trigstatus.isSSA)
.LINE 997

	LD	A,(_trigstatus+7)
	OR	A,A
	JR	Z,L_264
;  998		{
;  999			gfx_Clear(&data_X_ex);
.LINE 999

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
; 1000			gfx_Print(&data_X_ex);
.LINE 1000

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
; 1001		}
; 1002		else if (!trigstatus.isSSA)
.LINE 1002

	JR	L_266
L_264:
	LD	A,(_trigstatus+7)
	OR	A,A
	JR	NZ,L_266
; 1003		{
; 1004			gfx_Clear(&data_X_ex);
.LINE 1004

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
; 1005		}
; 1006	}
L_266:
.LINE 1006

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_data_X_ex                          STATIC     26   variable
;_trigstatus                         STATIC      8   variable
;_gfx_Print                          IMPORT  -----   function
;_xangles                            STATIC     78   variable
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;G_43                                 IX-24      3   variable
;G_38                                 IX-21      3   variable
;G_39                                 IX-18      3   variable
;G_34                                 IX-15      3   variable
;i                                    IX-12      3   variable
;G_44                                  IX-9      3   variable
;G_41                                  IX-6      3   variable
;G_32                                  IX-3      3   variable


; Stack Frame Size: 30 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispAngleSideData",1006,"_ui_DispAngleSideData"
; 1007	
; 1008	void trig_SolveTriangle()
; 1009	{
_trig_SolveTriangle:
.DEFINE "_trig_SolveTriangle"

.VALUE _trig_SolveTriangle

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveTriangle",1009,"_trig_SolveTriangle"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
; 1010		os_ClrHome();
.LINE 1010

	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
; 1011	
; 1012		ui_bDispMeasurements = false;
.LINE 1012

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
; 1013	
; 1014		gfx_Begin();
.LINE 1014

	CALL	_gfx_Begin
; 1015		gfx_SetColor(gfx_blue);
.LINE 1015

	LD	BC,16
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
; 1016		gfx_SetTextFGColor(gfx_black);
.LINE 1016

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
; 1017	
; 1018		gfx_Print(&ui_Mode);
.LINE 1018

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
; 1019		gfx_Print(&ui_btn_Mode);
.LINE 1019

	LD	BC,_ui_btn_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
; 1020		gfx_Print(&ui_btn_Clear);
.LINE 1020

	LD	BC,_ui_btn_Clear
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
; 1021		gfx_Print(&ui_btn_Data);
.LINE 1021

	LD	BC,_ui_btn_Data
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
; 1022	
; 1023		trig_Reset();
.LINE 1023

	CALL	_trig_Reset
; 1024	
; 1025		trig_SelectAngle();
.LINE 1025

	CALL	_trig_SelectAngle
; 1026	
; 1027		trig_Quit();
.LINE 1027

	CALL	_trig_Quit
; 1028	}
.LINE 1028

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trig_Quit                          STATIC  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_btn_Data                        STATIC     26   variable
;_ui_btn_Clear                       STATIC     26   variable
;_ui_btn_Mode                        STATIC     26   variable
;_ui_Mode                            STATIC     26   variable
;_gfx_Print                          IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_HomeUp                         IMPORT  -----   function
;_asm_ClrLCD                         IMPORT  -----   function
;__OS                                IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveTriangle",1028,"_trig_SolveTriangle"
	XREF _strncpy:ROM
	XREF _strcpy:ROM
	XREF _loc_Angle_x:ROM
	XREF _loc_Side_x:ROM
	XREF _los_Angle_x:ROM
	XREF _los_Side_x:ROM
	XREF _os_RealSinDeg:ROM
	XREF _sprintf:ROM
	XREF _geo_RoundTriangle:ROM
	XREF _gfx_PrintColor:ROM
	XREF _gfx_HighlightPoint:ROM
	XREF _gfx_ClearHighlight:ROM
	XREF _sp_SetLabel:ROM
	XREF _PointEq:ROM
	XREF _io_gfx_ReadReal:ROM
	XREF _gfx_Clear:ROM
	XREF _gfx_Print:ROM
	XREF _gDigitThreshold:ROM
	XREF _gRound:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCD:ROM
	XREF _asm_HomeUp:ROM
	XREF __OS:ROM
	XREF _os_GetCSC:ROM
	XREF _os_RealToStr:ROM
	XREF _os_FloatToReal:ROM
	XREF _os_Int24ToReal:ROM
	XREF _os_RealCompare:ROM
	XREF _os_RealSub:ROM
	XREF _os_RealMul:ROM
	XREF _os_RealDiv:ROM
	XREF _os_RealAdd:ROM
	XREF _os_RealSqrt:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_Line:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _lib_StrCut:ROM
	XREF _lib_MemZero:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _trig_SolveTriangle
	XDEF _trig_AreaBySin
	END
