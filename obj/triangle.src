; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\TRIANGLE.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME1"
.TYPE 104
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME7"
.BEGREC "NONAME8",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME9"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME10"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME10",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME10"
.BEGREC "NONAME11",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME11"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME15"
.BEGREC "NONAME16",26
.DEFINE "point"
.VALUE 0
.CLASS 8
.TAG "NONAME13"
.TYPE 8
.ENDEF
.DEFINE "label"
.VALUE 6
.CLASS 8
.DIM 20
.TYPE 98
.ENDEF
.ENDREC "NONAME16"
.BEGREC "NONAME17",72
.DEFINE "A"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "B"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "C"
.VALUE 18
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "a"
.VALUE 27
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "b"
.VALUE 36
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "c"
.VALUE 45
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "area"
.VALUE 54
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "perimeter"
.VALUE 63
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME17"
.BEGREC "NONAME18",8
.DEFINE "a"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "b"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "c"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "A"
.VALUE 3
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "B"
.VALUE 4
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "C"
.VALUE 5
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "complete"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "isSSA"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "NONAME18"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
	SEGMENT DATA
_xangles:
	DW	30
	DB	0
	DW	109
	DB	0
	DB	65
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	165
	DB	0
	DW	109
	DB	0
	DB	66
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	135
	DB	0
	DW	27
	DB	0
	DB	67
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xangles"
.ALIAS "_xangles"
.CLASS 69
.VALUE _xangles
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xsides:
	DW	190
	DB	0
	DW	60
	DB	0
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	60
	DB	0
	DW	55
	DB	0
	DB	98
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	95
	DB	0
	DW	130
	DB	0
	DB	99
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xsides"
.ALIAS "_xsides"
.CLASS 69
.VALUE _xsides
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
	SEGMENT TEXT
_lbl_AngleMode:
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
.DEFINE "lbl_AngleMode"
.ALIAS "_lbl_AngleMode"
.CLASS 84
.VALUE _lbl_AngleMode
.DIM 11
.TYPE 98
.ENDEF
_lbl_SideMode:
	DB	83
	DB	73
	DB	68
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
.DEFINE "lbl_SideMode"
.ALIAS "_lbl_SideMode"
.CLASS 84
.VALUE _lbl_SideMode
.DIM 10
.TYPE 98
.ENDEF
_lbl_SSS:
	DB	83
	DB	83
	DB	83
	DB	0
.DEFINE "lbl_SSS"
.ALIAS "_lbl_SSS"
.CLASS 84
.VALUE _lbl_SSS
.DIM 4
.TYPE 98
.ENDEF
_lbl_SSA:
	DB	83
	DB	83
	DB	65
	DB	32
	DB	40
	DB	33
	DB	41
	DB	0
.DEFINE "lbl_SSA"
.ALIAS "_lbl_SSA"
.CLASS 84
.VALUE _lbl_SSA
.DIM 8
.TYPE 98
.ENDEF
_lbl_SAS:
	DB	83
	DB	65
	DB	83
	DB	0
.DEFINE "lbl_SAS"
.ALIAS "_lbl_SAS"
.CLASS 84
.VALUE _lbl_SAS
.DIM 4
.TYPE 98
.ENDEF
_lbl_AAS:
	DB	65
	DB	65
	DB	83
	DB	0
.DEFINE "lbl_AAS"
.ALIAS "_lbl_AAS"
.CLASS 84
.VALUE _lbl_AAS
.DIM 4
.TYPE 98
.ENDEF
_lbl_ASA:
	DB	65
	DB	83
	DB	65
	DB	0
.DEFINE "lbl_ASA"
.ALIAS "_lbl_ASA"
.CLASS 84
.VALUE _lbl_ASA
.DIM 4
.TYPE 98
.ENDEF
_lbl_Unknown:
	DB	63
	DB	0
.DEFINE "lbl_Unknown"
.ALIAS "_lbl_Unknown"
.CLASS 84
.VALUE _lbl_Unknown
.DIM 2
.TYPE 98
.ENDEF
	SEGMENT BSS
_triangle:
	DS	72
.DEFINE "triangle"
.ALIAS "_triangle"
.CLASS 83
.VALUE _triangle
.TAG "NONAME17"
.TYPE 8
.ENDEF
_trigstatus:
	DS	8
.DEFINE "trigstatus"
.ALIAS "_trigstatus"
.CLASS 83
.VALUE _trigstatus
.TAG "NONAME18"
.TYPE 8
.ENDEF
_ui_bDispMeasurements:
	DS	1
.DEFINE "ui_bDispMeasurements"
.ALIAS "_ui_bDispMeasurements"
.CLASS 83
.VALUE _ui_bDispMeasurements
.TYPE 12
.ENDEF
	SEGMENT DATA
_ui_Mode:
	DW	230
	DB	0
	DW	10
	DB	0
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_Mode"
.ALIAS "_ui_Mode"
.CLASS 69
.VALUE _ui_Mode
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_Type:
	DW	230
	DB	0
	DW	20
	DB	0
	DB	46
	DB	46
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_Type"
.ALIAS "_ui_Type"
.CLASS 69
.VALUE _ui_Type
.TAG "NONAME16"
.TYPE 8
.ENDEF
	SEGMENT TEXT
_ui_btn_Mode:
	DW	280
	DB	0
	DW	230
	DB	0
	DB	77
	DB	111
	DB	100
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Mode"
.ALIAS "_ui_btn_Mode"
.CLASS 84
.VALUE _ui_btn_Mode
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Clear:
	DW	215
	DB	0
	DW	230
	DB	0
	DB	67
	DB	108
	DB	101
	DB	97
	DB	114
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Clear"
.ALIAS "_ui_btn_Clear"
.CLASS 84
.VALUE _ui_btn_Clear
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Data:
	DW	145
	DB	0
	DW	230
	DB	0
	DB	68
	DB	97
	DB	116
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Data"
.ALIAS "_ui_btn_Data"
.CLASS 84
.VALUE _ui_btn_Data
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Pref:
	DW	70
	DB	0
	DW	230
	DB	0
	DB	80
	DB	114
	DB	101
	DB	102
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Pref"
.ALIAS "_ui_btn_Pref"
.CLASS 84
.VALUE _ui_btn_Pref
.TAG "NONAME16"
.TYPE 8
.ENDEF
	SEGMENT DATA
_xmeasureData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	80
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xmeasureData"
.ALIAS "_xmeasureData"
.CLASS 69
.VALUE _xmeasureData
.DIM 2
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xanglesData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	66
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	195
	DB	0
	DB	67
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xanglesData"
.ALIAS "_xanglesData"
.CLASS 69
.VALUE _xanglesData
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xsidesData:
	DW	130
	DB	0
	DW	155
	DB	0
	DB	97
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	175
	DB	0
	DB	98
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	195
	DB	0
	DB	99
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xsidesData"
.ALIAS "_xsidesData"
.CLASS 69
.VALUE _xsidesData
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_data_X_ex:
	DW	10
	DB	0
	DW	215
	DB	0
	DB	42
	DB	88
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "data_X_ex"
.ALIAS "_data_X_ex"
.CLASS 69
.VALUE _data_X_ex
.TAG "NONAME16"
.TYPE 8
.ENDEF
;    1	//
;    2	// Created by Decimation on 4/27/2018.
;    3	//
;    4	
;    5	#include "Triangle.h"
;    6	#include "debug.h"
;    7	#include "Trigonometry.h"
;    8	#include "Types.h"
;    9	#include <string.h>
;   10	
;   11	static superpoint_t xangles[3] = {
;   12			{{30,       119 - 10}, "A"},   // AAA
;   13			{{10 + 155, 119 - 10}, "B"},   // BBB
;   14			{{135,      27},       "C"}   // CCC
;   15	};
;   16	
;   17	static superpoint_t xsides[3] = {
;   18			{{10 + 180, 60},  "a"},  // aaa
;   19			{{60,       55},  "b"},  // bbb
;   20			{{140 - 45, 130}, "c"}   // ccc
;   21	};
;   22	
;   23	
;   24	#define angle_A xangles[0]
;   25	#define angle_B xangles[1]
;   26	#define angle_C xangles[2]
;   27	
;   28	#define side_a xsides[0]
;   29	#define side_b xsides[1]
;   30	#define side_c xsides[2]
;   31	
;   32	static const char lbl_AngleMode[] = "ANGLE MODE";
;   33	static const char lbl_SideMode[]  = "SIDE MODE";
;   34	static const char lbl_SSS[]       = "SSS";
;   35	static const char lbl_SSA[]       = "SSA (!)";
;   36	static const char lbl_SAS[]       = "SAS";
;   37	static const char lbl_AAS[]       = "AAS";
;   38	static const char lbl_ASA[]       = "ASA";
;   39	static const char lbl_Unknown[]   = "?";
;   40	
;   41	static triangle_t   triangle;
;   42	static trigstatus_t trigstatus;
;   43	
;   44	/**
;   45	 * When true : display area and perimeter
;   46	 * When false: display a, b, c, A, B, C
;   47	 */
;   48	static bool ui_bDispMeasurements;
;   49	
;   50	static superpoint_t       ui_Mode      = {{230, 10}, "ANGLE MODE"};
;   51	static superpoint_t       ui_Type      = {{230, 20}, "..."};
;   52	static const superpoint_t ui_btn_Mode  = {280, 230, "Mode"};
;   53	static const superpoint_t ui_btn_Clear = {215, 230, "Clear"};
;   54	static const superpoint_t ui_btn_Data  = {145, 230, "Data"};
;   55	static const superpoint_t ui_btn_Pref  = {70, 230, "Pref"};
;   56	
;   57	static superpoint_t xmeasureData[2] = {
;   58			{10, 155, "A = "},
;   59			{10, 175, "P = "},
;   60	};
;   61	
;   62	static superpoint_t xanglesData[3] = {
;   63			{10, 155, "A = "},
;   64			{10, 175, "B = "},
;   65			{10, 195, "C = "}
;   66	};
;   67	
;   68	static superpoint_t xsidesData[3] = {
;   69			{130, 155, "a = "},
;   70			{130, 175, "b = "},
;   71			{130, 195, "c = "}
;   72	};
;   73	
;   74	static superpoint_t data_X_ex = {10, 215, "*X = "};
	SEGMENT CODE
;   75	
;   76	static void trig_Redraw()
;   77	{
_trig_Redraw:
.DEFINE "_trig_Redraw"

.VALUE _trig_Redraw

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Redraw",77,"_trig_Redraw"

.LINE 77

.DEFINE "index"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   78		int index = 0;
;   79		for (index = 0; index < 3; index++)
.LINE 79

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_3
L_1:
;   80		{
;   81			gfx_Clear(&xangles[index]);
.LINE 81

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;   82			gfx_Clear(&xsides[index]);
.LINE 82

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;   83	
;   84			gfx_Print(&xangles[index]);
.LINE 84

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;   85			gfx_Print(&xsides[index]);
.LINE 85

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;   86	
;   87			dbg_sprintf(dbgout, "[%s, %s]\n", xangles[index].label, xsides[index].label);
.LINE 87

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,HL
	LD	DE,_xsides
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	PEA	IY+6
	LD	DE,_xangles
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	PEA	IY+6
	LD	BC,L__0
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   88		}
L_3:
.LINE 88

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_1
;   89	}
.LINE 89

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Redraw ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;index                                 IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Redraw",89,"_trig_Redraw"
	SEGMENT STRSECT
L__0:
	DB	"[%s, %s]"
	DB	10,0
	SEGMENT CODE
;   90	
;   91	static void dbg_printTriangle()
;   92	{
_dbg_printTriangle:
.DEFINE "_dbg_printTriangle"

.VALUE _dbg_printTriangle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "dbg_printTriangle",92,"_dbg_printTriangle"

.LINE 92

.DEFINE "buf"

.CLASS 65

.VALUE -38

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-38
	LD	SP,HL
;   93		char buf[20];
;   94		os_RealToStr(buf, &triangle.A, 0, 0, -1);
.LINE 94

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   95		dbg_sprintf(dbgout, "Angle A: %s | ", buf);
.LINE 95

	PEA	IX+-38
	LD	BC,L__3
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;   96		os_RealToStr(buf, &triangle.a, 0, 0, -1);
.LINE 96

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   97		dbg_sprintf(dbgout, "Side a: %s\n", buf);
.LINE 97

	PEA	IX+-38
	LD	BC,L__4
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;   98	
;   99		os_RealToStr(buf, &triangle.B, 0, 0, -1);
.LINE 99

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  100		dbg_sprintf(dbgout, "Angle B: %s | ", buf);
.LINE 100

	PEA	IX+-38
	LD	BC,L__5
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  101		os_RealToStr(buf, &triangle.b, 0, 0, -1);
.LINE 101

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  102		dbg_sprintf(dbgout, "Side b: %s\n", buf);
.LINE 102

	PEA	IX+-38
	LD	BC,L__6
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  103	
;  104		os_RealToStr(buf, &triangle.C, 0, 0, -1);
.LINE 104

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  105		dbg_sprintf(dbgout, "Angle C: %s | ", buf);
.LINE 105

	PEA	IX+-38
	LD	BC,L__7
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  106		os_RealToStr(buf, &triangle.c, 0, 0, -1);
.LINE 106

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  107		dbg_sprintf(dbgout, "Side c: %s\n", buf);
.LINE 107

	PEA	IX+-38
	LD	BC,L__8
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  108	
;  109		dbg_sprintf(dbgout, "Angle availability: [%s, %s, %s]\n", trigstatus.A ? "1" : "0", trigstatus.B ? "1" : "0",
.LINE 109

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_7
	LD	BC,L__10
	LD	(IX+-3),BC
	JR	L_8
L_7:
	LD	BC,L__11
	LD	(IX+-3),BC
L_8:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_11
	LD	BC,L__13
	LD	(IX+-6),BC
	JR	L_12
L_11:
	LD	BC,L__14
	LD	(IX+-6),BC
L_12:
;  110					trigstatus.C ? "1" : "0");
.LINE 110

	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_15
	LD	BC,L__16
	LD	(IX+-9),BC
	JR	L_16
L_15:
	LD	BC,L__17
	LD	(IX+-9),BC
L_16:
	LD	BC,(IX+-9)
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,L__18
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  111		dbg_sprintf(dbgout, "Side availability: [%s, %s, %s]\n", trigstatus.a ? "1" : "0", trigstatus.b ? "1" : "0",
.LINE 111

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_19
	LD	BC,L__20
	LD	(IX+-12),BC
	JR	L_20
L_19:
	LD	BC,L__21
	LD	(IX+-12),BC
L_20:
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_23
	LD	BC,L__23
	LD	(IX+-15),BC
	JR	L_24
L_23:
	LD	BC,L__24
	LD	(IX+-15),BC
L_24:
;  112					trigstatus.c ? "1" : "0");
.LINE 112

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_27
	LD	BC,L__26
	LD	(IX+-18),BC
	JR	L_28
L_27:
	LD	BC,L__27
	LD	(IX+-18),BC
L_28:
	LD	BC,(IX+-18)
	PUSH	BC
	LD	BC,(IX+-15)
	PUSH	BC
	LD	BC,(IX+-12)
	PUSH	BC
	LD	BC,L__28
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  113	
;  114		os_RealToStr(buf, &triangle.area, 0, 0, -1);
.LINE 114

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  115		dbg_sprintf(dbgout, "Area: %s\n", buf);
.LINE 115

	PEA	IX+-38
	LD	BC,L__29
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  116		os_RealToStr(buf, &triangle.perimeter, 0, 0, -1);
.LINE 116

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  117		dbg_sprintf(dbgout, "Perimeter: %s\n", buf);
.LINE 117

	PEA	IX+-38
	LD	BC,L__30
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  118	}
.LINE 118

	LD	SP,IX
	POP	IX
	RET	


;**************************** _dbg_printTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trigstatus                         STATIC      8   variable
;_sprintf                            IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealToStr                       IMPORT  -----   function
;buf                                  IX-38     20   variable
;temp25                               IX-18      3   variable
;temp21                               IX-15      3   variable
;temp17                               IX-12      3   variable
;temp13                                IX-9      3   variable
;temp9                                 IX-6      3   variable
;temp5                                 IX-3      3   variable


; Stack Frame Size: 44 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "dbg_printTriangle",118,"_dbg_printTriangle"
	SEGMENT STRSECT
L__3:
	DB	"Angle A: %s | "
	DB	0
L__4:
	DB	"Side a: %s"
	DB	10,0
L__5:
	DB	"Angle B: %s | "
	DB	0
L__6:
	DB	"Side b: %s"
	DB	10,0
L__7:
	DB	"Angle C: %s | "
	DB	0
L__8:
	DB	"Side c: %s"
	DB	10,0
L__10:
	DB	"1"
	DB	0
L__11:
	DB	"0"
	DB	0
L__13:
	DB	"1"
	DB	0
L__14:
	DB	"0"
	DB	0
L__16:
	DB	"1"
	DB	0
L__17:
	DB	"0"
	DB	0
L__18:
	DB	"Angle availability: [%s, %s, %s]"
	DB	10,0
L__20:
	DB	"1"
	DB	0
L__21:
	DB	"0"
	DB	0
L__23:
	DB	"1"
	DB	0
L__24:
	DB	"0"
	DB	0
L__26:
	DB	"1"
	DB	0
L__27:
	DB	"0"
	DB	0
L__28:
	DB	"Side availability: [%s, %s, %s]"
	DB	10,0
L__29:
	DB	"Area: %s"
	DB	10,0
L__30:
	DB	"Perimeter: %s"
	DB	10,0
	SEGMENT CODE
;  119	
;  120	static void trig_Sync()
;  121	{
_trig_Sync:
.DEFINE "_trig_Sync"

.VALUE _trig_Sync

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Sync",121,"_trig_Sync"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  122		dbg_sprintf(dbgout, "[Trig] Synchronizing...\n");
.LINE 122

	LD	BC,L__32
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  123		geo_RoundTriangle(&triangle, gRound);
.LINE 123

	LD	A,(_gRound)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	CALL	_geo_RoundTriangle
	POP	BC
	POP	BC
;  124		dbg_sprintf(dbgout, "[Trig] Rounded\n");
.LINE 124

	LD	BC,L__33
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  125	
;  126		if (trigstatus.A)
.LINE 126

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_32
;  127		{
;  128			os_RealToStr(angle_A.label, &triangle.A, 0, 0, 6);
.LINE 128

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	LD	BC,_xangles+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  129		}
L_32:
.LINE 129

;  130		if (trigstatus.B)
.LINE 130

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_34
;  131		{
;  132			os_RealToStr(angle_B.label, &triangle.B, 0, 0, 6);
.LINE 132

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  133		}
L_34:
.LINE 133

;  134		if (trigstatus.C)
.LINE 134

	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_36
;  135		{
;  136			os_RealToStr(angle_C.label, &triangle.C, 0, 0, 6);
.LINE 136

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  137		}
L_36:
.LINE 137

;  138		if (trigstatus.a)
.LINE 138

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_38
;  139		{
;  140			os_RealToStr(side_a.label, &triangle.a, 0, 0, 6);
.LINE 140

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	LD	BC,_xsides+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  141		}
L_38:
.LINE 141

;  142		if (trigstatus.b)
.LINE 142

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_40
;  143		{
;  144			os_RealToStr(side_b.label, &triangle.b, 0, 0, 6);
.LINE 144

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  145		}
L_40:
.LINE 145

;  146		if (trigstatus.c)
.LINE 146

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_41
;  147		{
;  148			os_RealToStr(side_c.label, &triangle.c, 0, 0, 6);
.LINE 148

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  149		}
L_41:
.LINE 149

;  150	
;  151		ui_DispData();
.LINE 151

	CALL	_ui_DispData
;  152		trig_TruncateLabels(gDigitThreshold);
.LINE 152

	LD	A,(_gDigitThreshold)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_trig_TruncateLabels
	POP	BC
;  153		dbg_sprintf(dbgout, "[Trig] Truncated labels\n");
.LINE 153

	LD	BC,L__40
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  154		trig_Redraw();
.LINE 154

	CALL	_trig_Redraw
;  155		dbg_printTriangle();
.LINE 155

	CALL	_dbg_printTriangle
;  156	}
.LINE 156

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Sync ***************************
;Name                         Addr/Register   Size   Type
;_dbg_printTriangle                  STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gDigitThreshold                    IMPORT      1   variable
;_trig_TruncateLabels                STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_os_RealToStr                       IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_gRound                             IMPORT      1   variable
;_geo_RoundTriangle                  IMPORT  -----   function
;_sprintf                            IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Sync",156,"_trig_Sync"
	SEGMENT STRSECT
L__32:
	DB	"[Trig] Synchronizing..."
	DB	10,0
L__33:
	DB	"[Trig] Rounded"
	DB	10,0
L__40:
	DB	"[Trig] Truncated labels"
	DB	10,0
	SEGMENT CODE
;  157	
;  158	real_t trig_AreaBySin(real_t a, real_t b, real_t C)
;  159	{
_trig_AreaBySin:
.DEFINE "_trig_AreaBySin"

.VALUE _trig_AreaBySin

.CLASS 2

.TAG "NONAME0"

.TYPE 72

.ENDEF

.BEGFUNC "trig_AreaBySin",159,"_trig_AreaBySin"

.LINE 159

.DEFINE "a"

.CLASS 65

.VALUE 9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "b"

.CLASS 65

.VALUE 18

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "C"

.CLASS 65

.VALUE 27

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "buf"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "onehalf"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-63
	LD	SP,HL
;  160		//Area =  1/2 ab sin C
;  161	
;  162		const real_t onehalf = os_FloatToReal(0.5f);
.LINE 162

	LD	C,63
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PEA	IX+-27
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  163		real_t       buf;
;  164		C   = os_RealSinDeg(C);
.LINE 164

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LEA	HL,IX+27
	LD	BC,9
	LDIR	
	PEA	IX+-36
	CALL	_os_RealSinDeg
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+27
	LD	BC,9
	LDIR	
;  165		buf = os_RealMul(&onehalf, &a);
.LINE 165

	PEA	IX+9
	PEA	IX+-18
	PEA	IX+-45
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  166		buf = os_RealMul(&buf, &b);
.LINE 166

	PEA	IX+18
	PEA	IX+-9
	PEA	IX+-54
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  167		return os_RealMul(&buf, &C);
.LINE 167

	PEA	IX+27
	PEA	IX+-9
	PEA	IX+-63
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)
;  168	}
.LINE 168

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_AreaBySin ***************************
;Name                         Addr/Register   Size   Type
;_os_RealMul                         IMPORT  -----   function
;_os_RealSinDeg                      IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;onehalf                              IX-18      9   variable
;buf                                   IX-9      9   variable
;C                                    IX+27      9   parameter
;b                                    IX+18      9   parameter
;a                                     IX+9      9   parameter


; Stack Frame Size: 99 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_AreaBySin",168,"_trig_AreaBySin"
;  169	
;  170	static void trig_HeronsFormula()
;  171	{
_trig_HeronsFormula:
.DEFINE "_trig_HeronsFormula"

.VALUE _trig_HeronsFormula

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_HeronsFormula",171,"_trig_HeronsFormula"

.LINE 171

.DEFINE "s"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "num"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "root"

.CLASS 65

.VALUE -27

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "sma"

.CLASS 65

.VALUE -36

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real2"

.CLASS 65

.VALUE -45

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "smc"

.CLASS 65

.VALUE -54

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "smb"

.CLASS 65

.VALUE -63

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-171
	ADD	HL,SP
	LD	SP,HL
;  172		real_t       num, s, root;
;  173		real_t       sma, smb, smc;
;  174		const real_t real2 = os_Int24ToReal(2);
.LINE 174

	LD	BC,2
	PUSH	BC
	PEA	IX+-72
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-45
	LD	BC,9
	LDIR	
;  175	
;  176		num = os_RealAdd(&triangle.a, &triangle.b);
.LINE 176

	LD	BC,_triangle+36
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-81
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  177		num = os_RealAdd(&num, &triangle.c);
.LINE 177

	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-18
	PEA	IX+-90
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  178	
;  179		// Half of perimeter
;  180		s = os_RealDiv(&num, &real2);
.LINE 180

	PEA	IX+-45
	PEA	IX+-18
	PEA	IX+-99
	CALL	_os_RealDiv
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  181	
;  182		triangle.perimeter = os_RealMul(&s, &real2);
.LINE 182

	PEA	IX+-45
	PEA	IX+-9
	PEA	IX+-108
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+63
	LD	BC,9
	LDIR	
;  183		dbg_sprintf(dbgout, "[Trig] Solved for perimeter\n");
.LINE 183

	LD	BC,L__43
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  184	
;  185		sma = os_RealSub(&s, &triangle.a);
.LINE 185

	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-117
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  186		smb = os_RealSub(&s, &triangle.b);
.LINE 186

	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-126
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-63
	LD	BC,9
	LDIR	
;  187		smc = os_RealSub(&s, &triangle.c);
.LINE 187

	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-135
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-54
	LD	BC,9
	LDIR	
;  188	
;  189		sma = os_RealMul(&s, &sma);
.LINE 189

	PEA	IX+-36
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-144
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  190	
;  191		root = os_RealMul(&sma, &smb);
.LINE 191

	PEA	IX+-63
	PEA	IX+-36
	LD	HL,IX
	LD	BC,-153
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;  192		root = os_RealMul(&root, &smc);
.LINE 192

	PEA	IX+-54
	PEA	IX+-27
	LD	HL,IX
	LD	BC,-162
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;  193	
;  194		triangle.area = os_RealSqrt(&root);
.LINE 194

	PEA	IX+-27
	LD	HL,IX
	LD	BC,-171
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSqrt
	POP	BC
	POP	BC
	LD	DE,_triangle+54
	LD	BC,9
	LDIR	
;  195		dbg_sprintf(dbgout, "[Trig] Solved for area\n");
.LINE 195

	LD	BC,L__44
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  196	}
.LINE 196

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_HeronsFormula ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSqrt                        IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_RealMul                         IMPORT  -----   function
;_os_RealDiv                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;smb                                  IX-63      9   variable
;smc                                  IX-54      9   variable
;real2                                IX-45      9   variable
;sma                                  IX-36      9   variable
;root                                 IX-27      9   variable
;num                                  IX-18      9   variable
;s                                     IX-9      9   variable


; Stack Frame Size: 177 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_HeronsFormula",196,"_trig_HeronsFormula"
	SEGMENT STRSECT
L__43:
	DB	"[Trig] Solved for perimeter"
	DB	10,0
L__44:
	DB	"[Trig] Solved for area"
	DB	10,0
	SEGMENT CODE
;  197	
;  198	static void trig_SolveSSS()
;  199	{
_trig_SolveSSS:
.DEFINE "_trig_SolveSSS"

.VALUE _trig_SolveSSS

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveSSS",199,"_trig_SolveSSS"

.LINE 199

.DEFINE "buf"

.CLASS 65

.VALUE -12

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -21

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-69
	LD	SP,HL
;  200		real_t       buf;
;  201		const real_t real180 = os_Int24ToReal(180);
.LINE 201

	LD	BC,180
	PUSH	BC
	PEA	IX+-30
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-21
	LD	BC,9
	LDIR	
;  202		dbg_sprintf(dbgout, "[Trig] Solving SSS triangle\n");
.LINE 202

	LD	DE,L__46
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	LD	(IX+-69),BC
	CALL	_sprintf
	LD	BC,(IX+-69)
	POP	DE
	POP	DE
;  203		triangle.A   = loc_Angle_x(triangle.b, triangle.c, triangle.a);
.LINE 203

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PEA	IX+-39
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  204		trigstatus.A = true;
.LINE 204

	LD	A,1
	LD	(_trigstatus+3),A
;  205		dbg_sprintf(dbgout, "[Trig] Solved for angle A\n");
.LINE 205

	LD	DE,L__47
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	LD	(IX+-69),BC
	CALL	_sprintf
	LD	BC,(IX+-69)
	POP	DE
	POP	DE
;  206	
;  207		triangle.B   = loc_Angle_x(triangle.c, triangle.a, triangle.b);
.LINE 207

	LD	DE,_triangle+9
	LD	(IX+-3),DE
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PEA	IX+-48
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,(IX+-3)
	LD	BC,9
	LDIR	
;  208		trigstatus.B = true;
.LINE 208

	LD	A,1
	LD	(_trigstatus+4),A
;  209		dbg_sprintf(dbgout, "[Trig] Solved for angle B\n");
.LINE 209

	LD	BC,L__48
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  210	
;  211		buf = os_RealAdd(&triangle.A, &triangle.B);
.LINE 211

	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-57
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  212		triangle.C   = os_RealSub(&real180, &buf);
.LINE 212

	PEA	IX+-12
	PEA	IX+-21
	PEA	IX+-66
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  213		trigstatus.C = true;
.LINE 213

	LD	A,1
	LD	(_trigstatus+5),A
;  214		dbg_sprintf(dbgout, "[Trig] Solved for angle C\n");
.LINE 214

	LD	BC,L__49
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  215	
;  216		trig_HeronsFormula();
.LINE 216

	CALL	_trig_HeronsFormula
;  217		trig_Sync();
.LINE 217

	CALL	_trig_Sync
;  218	}
.LINE 218

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveSSS ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_HeronsFormula                 STATIC  -----   function
;_os_RealSub                         IMPORT  -----   function
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_loc_Angle_x                        IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-21      9   variable
;buf                                  IX-12      9   variable
;G_0                                   IX-3      3   variable


; Stack Frame Size: 75 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveSSS",218,"_trig_SolveSSS"
	SEGMENT STRSECT
L__46:
	DB	"[Trig] Solving SSS triangle"
	DB	10,0
L__47:
	DB	"[Trig] Solved for angle A"
	DB	10,0
L__48:
	DB	"[Trig] Solved for angle B"
	DB	10,0
L__49:
	DB	"[Trig] Solved for angle C"
	DB	10,0
	SEGMENT CODE
;  219	
;  220	static void trig_SolveMissingAngle()
;  221	{
_trig_SolveMissingAngle:
.DEFINE "_trig_SolveMissingAngle"

.VALUE _trig_SolveMissingAngle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveMissingAngle",221,"_trig_SolveMissingAngle"

.LINE 221

.DEFINE "buf"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-81
	LD	SP,HL
;  222		const real_t real180 = os_Int24ToReal(180);
.LINE 222

	LD	BC,180
	PUSH	BC
	PEA	IX+-27
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  223		real_t       buf;
;  224	
;  225		if (trigstatus.A && trigstatus.B)
.LINE 225

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_53
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_53
;  226		{
;  227			buf = os_RealAdd(&triangle.A, &triangle.B);
.LINE 227

	LD	BC,_triangle+9
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-36
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  228			triangle.C   = os_RealSub(&real180, &buf);
.LINE 228

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-45
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  229			trigstatus.C = true;
.LINE 229

	LD	A,1
	LD	(_trigstatus+5),A
;  230		}
;  231		else if (trigstatus.A && trigstatus.C)
.LINE 231

	JR	L_54
L_53:
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_51
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_51
;  232		{
;  233			buf = os_RealAdd(&triangle.A, &triangle.C);
.LINE 233

	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-54
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  234			triangle.B   = os_RealSub(&real180, &buf);
.LINE 234

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-63
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  235			trigstatus.B = true;
.LINE 235

	LD	A,1
	LD	(_trigstatus+4),A
;  236		}
;  237		else if (trigstatus.B && trigstatus.C)
.LINE 237

	JR	L_54
L_51:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_54
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_54
;  238		{
;  239			buf = os_RealAdd(&triangle.B, &triangle.C);
.LINE 239

	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-72
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  240			triangle.A   = os_RealSub(&real180, &buf);
.LINE 240

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-81
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  241			trigstatus.A = true;
.LINE 241

	LD	A,1
	LD	(_trigstatus+3),A
;  242		}
;  243	}
L_54:
.LINE 243

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveMissingAngle ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSub                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-18      9   variable
;buf                                   IX-9      9   variable


; Stack Frame Size: 87 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveMissingAngle",243,"_trig_SolveMissingAngle"
;  244	
;  245	static void trig_TruncateLabels(int len)
;  246	{
_trig_TruncateLabels:
.DEFINE "_trig_TruncateLabels"

.VALUE _trig_TruncateLabels

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_TruncateLabels",246,"_trig_TruncateLabels"

.LINE 246

.DEFINE "len"

.CLASS 65

.VALUE 6

.TYPE 4

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  247		int i = 0;
.LINE 247

	LD	BC,0
	LD	(IX+-3),BC
;  248		for (; i < 3; i++)
.LINE 248

	JR	L_58
L_56:
;  249		{
;  250			lib_StrCut(xangles[i].label, len, 20 - len);
.LINE 250

	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
;  251			lib_StrCut(xsides[i].label, len, 20 - len);
.LINE 251

	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  252		}
L_58:
.LINE 252

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_56
;  253	}
.LINE 253

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_TruncateLabels ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_lib_StrCut                         IMPORT  -----   function
;i                                     IX-3      3   variable
;len                                   IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_TruncateLabels",253,"_trig_TruncateLabels"
;  254	
;  255	static void trig_CheckSolvability()
;  256	{
_trig_CheckSolvability:
.DEFINE "_trig_CheckSolvability"

.VALUE _trig_CheckSolvability

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_CheckSolvability",256,"_trig_CheckSolvability"

.LINE 256

.DEFINE "rbuf"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "cbuf"

.CLASS 65

.VALUE -38

.DIM 20

.TYPE 98

.ENDEF

.DEFINE "cbuf2"

.CLASS 65

.VALUE -58

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-313
	ADD	HL,SP
	LD	SP,HL
;  257		real_t       rbuf;
;  258		char         cbuf[20];
;  259		char         cbuf2[20];
;  260		const real_t real180 = os_Int24ToReal(180);
.LINE 260

	LD	BC,180
	PUSH	BC
	PEA	IX+-67
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  261	
;  262		dbg_sprintf(dbgout, "[Trig] Checking solvability...\n");
.LINE 262

	LD	DE,L__60
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  263		ui_DispData();
.LINE 263

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_ui_DispData
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  264	
;  265		// Automatically solve for the third angle when possible
;  266		trig_SolveMissingAngle();
.LINE 266

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  267		trig_Sync();
.LINE 267

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_Sync
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  268	
;  269	
;  270		if (trigstatus.complete)
.LINE 270

	LD	A,(_trigstatus+6)
	OR	A,A
	JR	NZ,L_113
;  271		{
;  272			return;
.LINE 272

;  273		}
.LINE 273

;  274	
;  275	
;  276		// SSS
;  277		if (trigstatus.a && trigstatus.b && trigstatus.c)
.LINE 277

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_76
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_76
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_76
;  278		{
;  279			dbg_sprintf(dbgout, "SSS detected [%s, %s, %s]\n", side_a.label, side_b.label, side_c.label);
.LINE 279

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	BC,_xsides+6
	PUSH	BC
	LD	BC,L__65
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  280			gfx_Clear(&ui_Type);
.LINE 280

	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  281			sp_SetLabel(&ui_Type, lbl_SSS);
.LINE 281

	LD	BC,_lbl_SSS
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  282			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 282

	LD	BC,3
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_PrintColor
	POP	BC
	POP	BC
;  283	
;  284			trig_SolveSSS();
.LINE 284

	CALL	_trig_SolveSSS
;  285			trigstatus.complete = true;
.LINE 285

	LD	A,1
	LD	(_trigstatus+6),A
;  286			return;
.LINE 286

	JR	L_113
;  287		}
L_76:
.LINE 287

;  288	
;  289		// AAS
;  290		// "AAS" is when we know two angles and one side (which is not between the angles).
;  291		if (trigstatus.A && trigstatus.C && trigstatus.c)
.LINE 291

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_75
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_75
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_75
;  292		{
;  293			dbg_sprintf(dbgout, "AAS_1 detected [%s, %s, %s]\n", angle_A.label, angle_C.label, side_c.label);
.LINE 293

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__69
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  294			gfx_Clear(&ui_Type);
.LINE 294

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  295			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 295

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  296			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 296

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  297	
;  298			trig_SolveMissingAngle();
.LINE 298

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  299			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 299

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-76
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  300			trigstatus.a = true;
.LINE 300

	LD	A,1
	LD	(_trigstatus),A
;  301			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
.LINE 301

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PEA	IX+-85
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  302			trigstatus.b = true;
.LINE 302

	LD	A,1
	LD	(_trigstatus+1),A
;  303	
;  304			trig_Sync();
.LINE 304

	CALL	_trig_Sync
;  305			trigstatus.complete = true;
.LINE 305

	LD	A,1
	LD	(_trigstatus+6),A
;  306			trig_HeronsFormula();
.LINE 306

	CALL	_trig_HeronsFormula
;  307			ui_DispData();
.LINE 307

	CALL	_ui_DispData
;  308			return;
.LINE 308

	JR	L_113
;  309		}
;  310		else if (trigstatus.B && trigstatus.C && trigstatus.b)
L_75:
.LINE 310

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_73
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_73
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_73
;  311		{
;  312			dbg_sprintf(dbgout, "AAS_2 detected [%s, %s, %s]\n", angle_B.label, angle_C.label, side_b.label);
.LINE 312

	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__73
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  313			gfx_Clear(&ui_Type);
.LINE 313

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  314			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 314

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  315			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 315

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  316	
;  317			trig_SolveMissingAngle();
.LINE 317

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  318	
;  319			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 319

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PEA	IX+-94
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  320			trigstatus.c = true;
.LINE 320

	LD	A,1
	LD	(_trigstatus+2),A
;  321			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 321

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-103
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  322			trigstatus.a = true;
.LINE 322

	LD	A,1
	LD	(_trigstatus),A
;  323	
;  324			//dbg_printTriangle();
;  325			trig_Sync();
.LINE 325

	CALL	_trig_Sync
;  326			trigstatus.complete = true;
.LINE 326

	LD	A,1
	LD	(_trigstatus+6),A
;  327			trig_HeronsFormula();
.LINE 327

	CALL	_trig_HeronsFormula
;  328			ui_DispData();
.LINE 328

	CALL	_ui_DispData
;  329			return;
.LINE 329

	JR	L_113
;  330		}
;  331		else if (trigstatus.A && trigstatus.B && trigstatus.b)
L_73:
.LINE 331

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_88
;  332		{
;  333			dbg_sprintf(dbgout, "AAS_3 detected [%s, %s, %s]\n", angle_A.label, angle_B.label, side_b.label);
.LINE 333

	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__77
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  334			gfx_Clear(&ui_Type);
.LINE 334

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  335			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 335

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  336			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 336

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  337	
;  338			trig_SolveMissingAngle();
.LINE 338

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  339			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 339

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PEA	IX+-112
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  340			trigstatus.c = true;
.LINE 340

	LD	A,1
	LD	(_trigstatus+2),A
;  341			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
.LINE 341

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-121
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  342			trigstatus.a = true;
.LINE 342

	LD	A,1
	LD	(_trigstatus),A
;  343	
;  344			trig_Sync();
.LINE 344

	CALL	_trig_Sync
;  345			trigstatus.complete = true;
.LINE 345

	LD	A,1
	LD	(_trigstatus+6),A
;  346			trig_HeronsFormula();
.LINE 346

	CALL	_trig_HeronsFormula
;  347			ui_DispData();
.LINE 347

	CALL	_ui_DispData
;  348			return;
.LINE 348

	JR	L_113
;  349		}
L_88:
.LINE 349

;  350	
;  351		// ASA
;  352		// "ASA" is when we know two angles and a side between the angles.
;  353		if (trigstatus.A && trigstatus.c && trigstatus.B)
.LINE 353

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_87
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_87
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_87
;  354		{
;  355			dbg_sprintf(dbgout, "ASA_1 detected [%s, %s, %s]\n", angle_A.label, side_c.label, angle_B.label);
.LINE 355

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__81
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  356			gfx_Clear(&ui_Type);
.LINE 356

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  357			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 357

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  358			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 358

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  359	
;  360			trig_SolveMissingAngle();
.LINE 360

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  361			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 361

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-130
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  362			trigstatus.a = true;
.LINE 362

	LD	A,1
	LD	(_trigstatus),A
;  363			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
.LINE 363

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-139
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  364			trigstatus.b = true;
.LINE 364

	LD	A,1
	LD	(_trigstatus+1),A
;  365	
;  366			trig_Sync();
.LINE 366

	CALL	_trig_Sync
;  367			trigstatus.complete = true;
.LINE 367

	LD	A,1
	LD	(_trigstatus+6),A
;  368			trig_HeronsFormula();
.LINE 368

	CALL	_trig_HeronsFormula
;  369			ui_DispData();
.LINE 369

	CALL	_ui_DispData
;  370			return;
.LINE 370

	JR	L_113
;  371		}
;  372		else if (trigstatus.A && trigstatus.b && trigstatus.C) //todo: verify
L_87:
.LINE 372

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_85
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_85
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_85
;  373		{
;  374			dbg_sprintf(dbgout, "ASA_2 detected [%s, %s, %s]\n", angle_A.label, side_b.label, angle_C.label);
.LINE 374

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__85
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  375			gfx_Clear(&ui_Type);
.LINE 375

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  376			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 376

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  377			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 377

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  378	
;  379			trig_SolveMissingAngle();
.LINE 379

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  380			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
.LINE 380

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-148
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  381			trigstatus.a = true;
.LINE 381

	LD	A,1
	LD	(_trigstatus),A
;  382			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 382

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-157
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  383			trigstatus.c = true;
.LINE 383

	LD	A,1
	LD	(_trigstatus+2),A
;  384	
;  385			trig_Sync();
.LINE 385

	CALL	_trig_Sync
;  386			trigstatus.complete = true;
.LINE 386

	LD	A,1
	LD	(_trigstatus+6),A
;  387			trig_HeronsFormula();
.LINE 387

	CALL	_trig_HeronsFormula
;  388			ui_DispData();
.LINE 388

	CALL	_ui_DispData
;  389			return;
.LINE 389

	JR	L_113
;  390		}
;  391		else if (trigstatus.B && trigstatus.a && trigstatus.C) //todo: verify
L_85:
.LINE 391

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_100
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_100
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_100
;  392		{
;  393			dbg_sprintf(dbgout, "ASA_3 detected [%s, %s, %s]\n", angle_B.label, side_a.label, angle_C.label);
.LINE 393

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__89
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  394			gfx_Clear(&ui_Type);
.LINE 394

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  395			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 395

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  396			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 396

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  397	
;  398			trig_SolveMissingAngle();
.LINE 398

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  399			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
.LINE 399

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-166
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  400			trigstatus.b = true;
.LINE 400

	LD	A,1
	LD	(_trigstatus+1),A
;  401			triangle.c   = los_Side_x(triangle.C, triangle.a, triangle.A);
.LINE 401

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-175
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  402			trigstatus.c = true;
.LINE 402

	LD	A,1
	LD	(_trigstatus+2),A
;  403	
;  404			trig_Sync();
.LINE 404

	CALL	_trig_Sync
;  405			trigstatus.complete = true;
.LINE 405

	LD	A,1
	LD	(_trigstatus+6),A
;  406			trig_HeronsFormula();
.LINE 406

	CALL	_trig_HeronsFormula
;  407			ui_DispData();
.LINE 407

	CALL	_ui_DispData
;  408			return;
.LINE 408

	JR	L_113
;  409		}
L_100:
.LINE 409

;  410	
;  411		// SAS
;  412		// "SAS" is when we know two sides and the angle between them.
;  413		if (trigstatus.b && trigstatus.A && trigstatus.c)
.LINE 413

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_99
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_99
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_99
;  414		{
;  415			dbg_sprintf(dbgout, "SAS_1 detected [%s, %s, %s]\n", side_b.label, angle_A.label, side_c.label);
.LINE 415

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__93
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  416			gfx_Clear(&ui_Type);
.LINE 416

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  417			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 417

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  418			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 418

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  419	
;  420			triangle.a   = loc_Side_x(triangle.b, triangle.c, triangle.A);
.LINE 420

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-184
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  421			trigstatus.a = true;
.LINE 421

	LD	A,1
	LD	(_trigstatus),A
;  422	
;  423			// todo: need to find the smaller of the two angles
;  424			triangle.B   = los_Angle_x(triangle.b, triangle.A, triangle.a);
.LINE 424

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-193
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  425			trigstatus.B = true;
.LINE 425

	LD	A,1
	LD	(_trigstatus+4),A
;  426	
;  427			trig_SolveMissingAngle();
.LINE 427

	CALL	_trig_SolveMissingAngle
;  428	
;  429			trigstatus.complete = true;
.LINE 429

	LD	A,1
	LD	(_trigstatus+6),A
;  430			trig_Sync();
.LINE 430

	CALL	_trig_Sync
;  431			trig_HeronsFormula();
.LINE 431

	CALL	_trig_HeronsFormula
;  432			ui_DispData();
.LINE 432

	CALL	_ui_DispData
;  433			return;
.LINE 433

	JR	L_113
;  434		}
;  435		else if (trigstatus.c && trigstatus.B && trigstatus.a) //todo: verify
L_99:
.LINE 435

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_97
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_97
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_97
;  436		{
;  437			dbg_sprintf(dbgout, "SAS_2 detected [%s, %s, %s]\n", side_c.label, angle_B.label, side_a.label);
.LINE 437

	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,L__97
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  438			gfx_Clear(&ui_Type);
.LINE 438

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  439			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 439

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  440			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 440

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  441	
;  442			triangle.b   = loc_Side_x(triangle.a, triangle.c, triangle.B);
.LINE 442

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-202
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  443			trigstatus.b = true;
.LINE 443

	LD	A,1
	LD	(_trigstatus+1),A
;  444	
;  445			// todo: need to find the smaller of the two angles
;  446			triangle.A   = los_Angle_x(triangle.a, triangle.B, triangle.b);
.LINE 446

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-211
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  447			trigstatus.A = true;
.LINE 447

	LD	A,1
	LD	(_trigstatus+3),A
;  448	
;  449			trig_SolveMissingAngle();
.LINE 449

	CALL	_trig_SolveMissingAngle
;  450			trig_Sync();
.LINE 450

	CALL	_trig_Sync
;  451			trigstatus.complete = true;
.LINE 451

	LD	A,1
	LD	(_trigstatus+6),A
;  452			trig_HeronsFormula();
.LINE 452

	CALL	_trig_HeronsFormula
;  453			ui_DispData();
.LINE 453

	CALL	_ui_DispData
;  454			return;
.LINE 454

	JR	L_113
;  455		}
;  456		else if (trigstatus.b && trigstatus.C && trigstatus.a)
L_97:
.LINE 456

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_112
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_112
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_112
;  457		{
;  458			dbg_sprintf(dbgout, "SAS_3 detected [%s, %s, %s]\n", side_b.label, angle_C.label, side_a.label);
.LINE 458

	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__101
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  459			gfx_Clear(&ui_Type);
.LINE 459

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  460			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 460

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  461			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 461

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  462	
;  463			triangle.c   = loc_Side_x(triangle.a, triangle.b, triangle.C);
.LINE 463

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-220
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  464			trigstatus.c = true;
.LINE 464

	LD	A,1
	LD	(_trigstatus+2),A
;  465	
;  466			// todo: need to find the smaller of the two angles
;  467			triangle.A   = los_Angle_x(triangle.a, triangle.C, triangle.c);
.LINE 467

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-229
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  468			trigstatus.A = true;
.LINE 468

	LD	A,1
	LD	(_trigstatus+3),A
;  469	
;  470			trig_SolveMissingAngle();
.LINE 470

	CALL	_trig_SolveMissingAngle
;  471			trig_Sync();
.LINE 471

	CALL	_trig_Sync
;  472			trigstatus.complete = true;
.LINE 472

	LD	A,1
	LD	(_trigstatus+6),A
;  473			trig_HeronsFormula();
.LINE 473

	CALL	_trig_HeronsFormula
;  474			ui_DispData();
.LINE 474

	CALL	_ui_DispData
;  475			return;
.LINE 475

	JR	L_113
;  476		}
L_112:
.LINE 476

;  477	
;  478		// SSA
;  479		// "SSA" is when we know two sides and an angle that is not the angle between the sides.
;  480		// todo: check if it has multiple answers
;  481		if (trigstatus.b && trigstatus.c && trigstatus.B)
.LINE 481

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_111
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_111
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_111
;  482		{
;  483			dbg_sprintf(dbgout, "SSA_1 detected [%s, %s, %s]\n", side_b.label, side_c.label, angle_B.label);
.LINE 483

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__105
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  484			gfx_Clear(&ui_Type);
.LINE 484

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  485			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 485

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  486			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 486

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  487			trigstatus.isSSA = true;
.LINE 487

	LD	A,1
	LD	(_trigstatus+7),A
;  488	
;  489			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
.LINE 489

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-238
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  490			trigstatus.C = true;
.LINE 490

	LD	A,1
	LD	(_trigstatus+5),A
;  491	
;  492			trig_SolveMissingAngle();
.LINE 492

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  493	
;  494			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 494

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-247
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  495			trigstatus.a = true;
.LINE 495

	LD	A,1
	LD	(_trigstatus),A
;  496	
;  497			// other possible answer for C
;  498			rbuf = os_RealSub(&real180, &triangle.C);
.LINE 498

	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-256
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  499			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 499

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  500	
;  501			sprintf(cbuf2, "*C = %s", cbuf);
.LINE 501

	PEA	IX+-38
	LD	BC,L__106
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  502			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 502

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  503			gfx_Clear(&data_X_ex);
.LINE 503

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  504			gfx_Print(&data_X_ex);
.LINE 504

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  505			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 505

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__107
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  506			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
.LINE 506

	PEA	IX+-38
	LD	BC,L__108
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  507	
;  508			trig_Sync();
.LINE 508

	CALL	_trig_Sync
;  509			trigstatus.complete = true;
.LINE 509

	LD	A,1
	LD	(_trigstatus+6),A
;  510			trig_HeronsFormula();
.LINE 510

	CALL	_trig_HeronsFormula
;  511			ui_DispData();
.LINE 511

	CALL	_ui_DispData
;  512			return;
.LINE 512

	JR	L_113
;  513		}
;  514		else if (trigstatus.b && trigstatus.a && trigstatus.B) //todo: verify
L_111:
.LINE 514

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_109
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_109
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_109
;  515		{
;  516			dbg_sprintf(dbgout, "SSA_2 detected [%s, %s, %s]\n", side_b.label, side_a.label, angle_B.label);
.LINE 516

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__112
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  517			gfx_Clear(&ui_Type);
.LINE 517

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  518			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 518

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  519			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 519

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  520			trigstatus.isSSA = true;
.LINE 520

	LD	A,1
	LD	(_trigstatus+7),A
;  521	
;  522			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
.LINE 522

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-265
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  523			trigstatus.C = true;
.LINE 523

	LD	A,1
	LD	(_trigstatus+5),A
;  524	
;  525			trig_SolveMissingAngle();
.LINE 525

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  526	
;  527			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 527

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-274
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  528			trigstatus.c = true;
.LINE 528

	LD	A,1
	LD	(_trigstatus+2),A
;  529	
;  530			// other possible answer for C
;  531			rbuf = os_RealSub(&real180, &triangle.C);
.LINE 531

	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-283
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  532			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 532

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  533	
;  534			sprintf(cbuf2, "*C = %s", cbuf);
.LINE 534

	PEA	IX+-38
	LD	BC,L__113
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  535			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 535

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  536			gfx_Clear(&data_X_ex);
.LINE 536

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  537			gfx_Print(&data_X_ex);
.LINE 537

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  538			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 538

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__114
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  539			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
.LINE 539

	PEA	IX+-38
	LD	BC,L__115
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  540	
;  541			trig_Sync();
.LINE 541

	CALL	_trig_Sync
;  542			trigstatus.complete = true;
.LINE 542

	LD	A,1
	LD	(_trigstatus+6),A
;  543			trig_HeronsFormula();
.LINE 543

	CALL	_trig_HeronsFormula
;  544			ui_DispData();
.LINE 544

	CALL	_ui_DispData
;  545			return;
.LINE 545

	JR	L_113
;  546		}
;  547		else if (trigstatus.a && trigstatus.c && trigstatus.C) //todo: verify
L_109:
.LINE 547

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_113
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_113
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_113
;  548		{
;  549			dbg_sprintf(dbgout, "SSA_3 detected [%s, %s, %s]\n", side_a.label, side_c.label, angle_C.label);
.LINE 549

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	DE,L__119
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  550			gfx_Clear(&ui_Type);
.LINE 550

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  551			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 551

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  552			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 552

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  553			trigstatus.isSSA = true;
.LINE 553

	LD	A,1
	LD	(_trigstatus+7),A
;  554	
;  555			triangle.B   = los_Angle_x(triangle.a, triangle.C, triangle.c);
.LINE 555

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-292
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  556			trigstatus.B = true;
.LINE 556

	LD	A,1
	LD	(_trigstatus+4),A
;  557	
;  558			trig_SolveMissingAngle();
.LINE 558

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  559	
;  560			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
.LINE 560

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-301
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  561			trigstatus.b = true;
.LINE 561

	LD	A,1
	LD	(_trigstatus+1),A
;  562	
;  563			// other possible answer for B
;  564			rbuf = os_RealSub(&real180, &triangle.B);
.LINE 564

	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-310
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  565			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 565

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  566	
;  567			sprintf(cbuf2, "*B = %s", cbuf);
.LINE 567

	PEA	IX+-38
	LD	BC,L__120
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  568			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 568

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  569			gfx_Clear(&data_X_ex);
.LINE 569

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  570			gfx_Print(&data_X_ex);
.LINE 570

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  571			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 571

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__121
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  572			dbg_sprintf(dbgout, "Other possible solution for B = %s\n", cbuf);
.LINE 572

	PEA	IX+-38
	LD	BC,L__122
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  573	
;  574			trig_Sync();
.LINE 574

	CALL	_trig_Sync
;  575			trigstatus.complete = true;
.LINE 575

	LD	A,1
	LD	(_trigstatus+6),A
;  576			trig_HeronsFormula();
.LINE 576

	CALL	_trig_HeronsFormula
;  577			ui_DispData();
.LINE 577

	CALL	_ui_DispData
;  578			return;
;  579		}
;  580	}
L_113:
.LINE 580

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_CheckSolvability ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Print                          IMPORT  -----   function
;_data_X_ex                          STATIC     26   variable
;_os_RealToStr                       IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_lbl_SSA                            STATIC      8   variable
;_los_Angle_x                        IMPORT  -----   function
;_loc_Side_x                         IMPORT  -----   function
;_lbl_SAS                            STATIC      4   variable
;_lbl_ASA                            STATIC      4   variable
;_trig_HeronsFormula                 STATIC  -----   function
;_triangle                           STATIC     72   variable
;_los_Side_x                         IMPORT  -----   function
;_lbl_AAS                            STATIC      4   variable
;_xangles                            STATIC     78   variable
;_trig_SolveSSS                      STATIC  -----   function
;_gfx_PrintColor                     IMPORT  -----   function
;_lbl_SSS                            STATIC      4   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Type                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_trigstatus                         STATIC      8   variable
;_trig_Sync                          STATIC  -----   function
;_trig_SolveMissingAngle             STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;cbuf2                                IX-58     20   variable
;cbuf                                 IX-38     20   variable
;real180                              IX-18      9   variable
;rbuf                                  IX-9      9   variable


; Stack Frame Size: 319 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_CheckSolvability",580,"_trig_CheckSolvability"
	SEGMENT STRSECT
L__60:
	DB	"[Trig] Checking solvability..."
	DB	10,0
L__65:
	DB	"SSS detected [%s, %s, %s]"
	DB	10,0
L__69:
	DB	"AAS_1 detected [%s, %s, %s]"
	DB	10,0
L__73:
	DB	"AAS_2 detected [%s, %s, %s]"
	DB	10,0
L__77:
	DB	"AAS_3 detected [%s, %s, %s]"
	DB	10,0
L__81:
	DB	"ASA_1 detected [%s, %s, %s]"
	DB	10,0
L__85:
	DB	"ASA_2 detected [%s, %s, %s]"
	DB	10,0
L__89:
	DB	"ASA_3 detected [%s, %s, %s]"
	DB	10,0
L__93:
	DB	"SAS_1 detected [%s, %s, %s]"
	DB	10,0
L__97:
	DB	"SAS_2 detected [%s, %s, %s]"
	DB	10,0
L__101:
	DB	"SAS_3 detected [%s, %s, %s]"
	DB	10,0
L__105:
	DB	"SSA_1 detected [%s, %s, %s]"
	DB	10,0
L__106:
	DB	"*C = %s"
	DB	0
L__107:
	DB	"data_X_ex = %s"
	DB	10,0
L__108:
	DB	"Other possible solution for C = %s"
	DB	10,0
L__112:
	DB	"SSA_2 detected [%s, %s, %s]"
	DB	10,0
L__113:
	DB	"*C = %s"
	DB	0
L__114:
	DB	"data_X_ex = %s"
	DB	10,0
L__115:
	DB	"Other possible solution for C = %s"
	DB	10,0
L__119:
	DB	"SSA_3 detected [%s, %s, %s]"
	DB	10,0
L__120:
	DB	"*B = %s"
	DB	0
L__121:
	DB	"data_X_ex = %s"
	DB	10,0
L__122:
	DB	"Other possible solution for B = %s"
	DB	10,0
	SEGMENT CODE
;  581	
;  582	static void ui_ClearMeasurements()
;  583	{
_ui_ClearMeasurements:
.DEFINE "_ui_ClearMeasurements"

.VALUE _ui_ClearMeasurements

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_ClearMeasurements",583,"_ui_ClearMeasurements"

.LINE 583

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  584		int i = 0;
.LINE 584

	LD	BC,0
	LD	(IX+-3),BC
;  585		for (; i < 2; i++)
.LINE 585

	JR	L_117
L_115:
;  586		{
;  587			gfx_Clear(&xmeasureData[i]);
.LINE 587

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  588		}
L_117:
.LINE 588

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_115
;  589		dbg_sprintf(dbgout, "[UI] Cleared measurements\n");
.LINE 589

	LD	BC,L__125
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  590	}
.LINE 590

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_gfx_Clear                          IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_ClearMeasurements",590,"_ui_ClearMeasurements"
	SEGMENT STRSECT
L__125:
	DB	"[UI] Cleared measurements"
	DB	10,0
	SEGMENT CODE
;  591	
;  592	static void ui_ClearAngleSideData()
;  593	{
_ui_ClearAngleSideData:
.DEFINE "_ui_ClearAngleSideData"

.VALUE _ui_ClearAngleSideData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_ClearAngleSideData",593,"_ui_ClearAngleSideData"

.LINE 593

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  594		int i = 0;
.LINE 594

	LD	BC,0
	LD	(IX+-3),BC
;  595		for (; i < 3; i++)
.LINE 595

	JR	L_123
L_121:
;  596		{
;  597			gfx_Clear(&xsidesData[i]);
.LINE 597

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  598			gfx_Clear(&xanglesData[i]);
.LINE 598

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  599		}
L_123:
.LINE 599

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_121
;  600		dbg_sprintf(dbgout, "[UI] Cleared angle and side data\n");
.LINE 600

	LD	BC,L__128
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  601	}
.LINE 601

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_ClearAngleSideData",601,"_ui_ClearAngleSideData"
	SEGMENT STRSECT
L__128:
	DB	"[UI] Cleared angle and side data"
	DB	10,0
	SEGMENT CODE
;  602	
;  603	static void trig_SelectSide()
;  604	{
_trig_SelectSide:
.DEFINE "_trig_SelectSide"

.VALUE _trig_SelectSide

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SelectSide",604,"_trig_SelectSide"

.LINE 604

.DEFINE "currentSelection"

.CLASS 65

.VALUE -3

.TAG "NONAME16"

.TYPE 40

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-52
	LD	SP,HL
;  605		uint8_t key;
;  606		superpoint_t* currentSelection = &side_b; // start at b
.LINE 606

	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  607		gfx_HighlightPoint(&side_b);
.LINE 607

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  608		RECURSE:
.LINE 608

;  609		while ((key = os_GetCSC()) != sk_Enter)
.LINE 609

	JR	L_156
L_157:
;  610		{
;  611			if (key == sk_Clear)
.LINE 611

	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_165
;  612			{
;  613				return;
.LINE 613

;  614			}
.LINE 614

;  615	
;  616			if (key == sk_Zoom)
.LINE 616

	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_134
;  617			{
;  618				if (ui_bDispMeasurements)
.LINE 618

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_129
;  619				{
;  620					ui_bDispMeasurements = false;
.LINE 620

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  621					ui_ClearMeasurements();
.LINE 621

	CALL	_ui_ClearMeasurements
;  622				}
;  623				else
.LINE 623

	JR	L_130
L_129:
;  624				{
;  625					ui_bDispMeasurements = true;
.LINE 625

	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  626					ui_ClearAngleSideData();
.LINE 626

	CALL	_ui_ClearAngleSideData
;  627				}
L_130:
.LINE 627

;  628				ui_DispData();
.LINE 628

	CALL	_ui_DispData
;  629			}
L_134:
.LINE 629

;  630	
;  631			if (key == sk_Trace)
.LINE 631

	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_136
;  632			{
;  633				trig_Reset();
.LINE 633

	CALL	_trig_Reset
;  634				currentSelection = &side_b;
.LINE 634

	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  635				gfx_HighlightPoint(&side_b);
.LINE 635

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  636			}
L_136:
.LINE 636

;  637	
;  638			if (key == sk_Graph)
.LINE 638

	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_139
;  639			{
;  640				gfx_Clear(&ui_Mode);
.LINE 640

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  641				sp_SetLabel(&ui_Mode, lbl_AngleMode);
.LINE 641

	LD	BC,_lbl_AngleMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  642				gfx_Print(&ui_Mode);
.LINE 642

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  643				gfx_ClearHighlight(currentSelection);
.LINE 643

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  644				trig_SelectAngle();
.LINE 644

	CALL	_trig_SelectAngle
;  645				return;
.LINE 645

	JR	L_165
;  646			}
L_139:
.LINE 646

;  647	
;  648			/* bbb -> aaa */
;  649			if (key == sk_Right && PointEq(*currentSelection, side_b))
.LINE 649

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_142
	LD	BC,_xsides+26
	LD	(IX+-16),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_142
;  650			{
;  651				gfx_SetFocus(&currentSelection, &side_b, &side_a);
.LINE 651

	LD	BC,_xsides
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  652			}
L_142:
.LINE 652

;  653	
;  654			/* bbb -> ccc */
;  655			if (key == sk_Down && PointEq(*currentSelection, side_b))
.LINE 655

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_146
	LD	BC,_xsides+26
	LD	(IX+-19),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_146
;  656			{
;  657				gfx_SetFocus(&currentSelection, &side_b, &side_c);
.LINE 657

	LD	BC,_xsides+52
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  658			}
L_146:
.LINE 658

;  659	
;  660			/* ccc -> bbb */
;  661			if ((key == sk_Up || key == sk_Left) && PointEq(*currentSelection, side_c))
.LINE 661

	LD	A,(IX+-4)
	CP	A,4
	JR	Z,L_144
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_149
L_144:
	LD	BC,_xsides+52
	LD	(IX+-22),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_149
;  662			{
;  663				gfx_SetFocus(&currentSelection, &side_c, &side_b);
.LINE 663

	LD	BC,_xsides+26
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  664			}
L_149:
.LINE 664

;  665	
;  666			/* ccc -> aaa */
;  667			if (key == sk_Right && PointEq(*currentSelection, side_c))
.LINE 667

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_152
	LD	BC,_xsides+52
	LD	(IX+-13),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_152
;  668			{
;  669				gfx_SetFocus(&currentSelection, &side_c, &side_a);
.LINE 669

	LD	BC,_xsides
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  670			}
L_152:
.LINE 670

;  671	
;  672			/* aaa -> bbb */
;  673			if (key == sk_Left && PointEq(*currentSelection, side_a))
.LINE 673

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_155
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_155
;  674			{
;  675				gfx_SetFocus(&currentSelection, &side_a, &side_b);
.LINE 675

	LD	BC,_xsides+26
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  676			}
L_155:
.LINE 676

;  677	
;  678			/* aaa -> ccc */
;  679			if (key == sk_Down && PointEq(*currentSelection, side_a))
.LINE 679

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_156
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_156
;  680			{
;  681				gfx_SetFocus(&currentSelection, &side_a, &side_c);
.LINE 681

	LD	BC,_xsides+52
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  682			}
;  683		}
L_156:
.LINE 683

	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_157
;  684	
;  685		if (PointEq(*currentSelection, side_a))
.LINE 685

	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_161
;  686		{
;  687			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", side_a.label);
.LINE 687

	LD	BC,_xsides
	LD	(IX+-25),BC
	LD	BC,_xsides+6
	PUSH	BC
	LD	BC,L__150
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  688			triangle.a   = io_gfx_ReadReal(&side_a);
.LINE 688

	LD	BC,(IX+-25)
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  689			trigstatus.a = true;
.LINE 689

	LD	A,1
	LD	(_trigstatus),A
;  690		}
L_161:
.LINE 690

;  691	
;  692		if (PointEq(*currentSelection, side_b))
.LINE 692

	LD	BC,_xsides+26
	LD	(IX+-10),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_163
;  693		{
;  694			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", side_b.label);
.LINE 694

	LD	IY,(IX+-10)
	PEA	IY+6
	LD	BC,L__152
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  695			triangle.b   = io_gfx_ReadReal(&side_b);
.LINE 695

	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  696			trigstatus.b = true;
.LINE 696

	LD	A,1
	LD	(_trigstatus+1),A
;  697		}
L_163:
.LINE 697

;  698	
;  699		if (PointEq(*currentSelection, side_c))
.LINE 699

	LD	BC,_xsides+52
	LD	(IX+-7),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_164
;  700		{
;  701			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", side_c.label);
.LINE 701

	LD	IY,(IX+-7)
	PEA	IY+6
	LD	BC,L__154
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  702			triangle.c   = io_gfx_ReadReal(&side_c);
.LINE 702

	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-52
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  703			trigstatus.c = true;
.LINE 703

	LD	A,1
	LD	(_trigstatus+2),A
;  704		}
L_164:
.LINE 704

;  705	
;  706		trig_CheckSolvability();
.LINE 706

	CALL	_trig_CheckSolvability
;  707		gfx_HighlightPoint(currentSelection);
.LINE 707

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  708		goto RECURSE;
.LINE 708

	JR	L_156
;  709	
;  710	}
L_165:
.LINE 710

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectSide ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_gfx_SetFocus                       IMPORT  -----   function
;_PointEq                            IMPORT  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_gfx_ClearHighlight                 IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_lbl_AngleMode                      STATIC     11   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_gfx_HighlightPoint                 IMPORT  -----   function
;_xsides                             STATIC     78   variable
;G_5                                  IX-25      3   variable
;G_3                                  IX-22      3   variable
;G_2                                  IX-19      3   variable
;G_1                                  IX-16      3   variable
;G_4                                  IX-13      3   variable
;G_6                                  IX-10      3   variable
;G_8                                   IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 58 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SelectSide",710,"_trig_SelectSide"
	SEGMENT STRSECT
L__150:
	DB	"[Trig] User selected side %s"
	DB	10,0
L__152:
	DB	"[Trig] User selected side %s"
	DB	10,0
L__154:
	DB	"[Trig] User selected side %s"
	DB	10,0
	SEGMENT CODE
;  711	
;  712	static void trig_Quit()
;  713	{
_trig_Quit:
.DEFINE "_trig_Quit"

.VALUE _trig_Quit

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Quit",713,"_trig_Quit"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  714		gfx_ZeroScreen();
.LINE 714

	CALL	_gfx_ZeroScreen
;  715		gfx_End();
.LINE 715

	CALL	_gfx_End
;  716		dbg_sprintf(dbgout, "[Trig] Zeroed screen and ended GFX\n");
.LINE 716

	LD	BC,L__156
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  717	}
.LINE 717

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Quit ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_gfx_End                            IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Quit",717,"_trig_Quit"
	SEGMENT STRSECT
L__156:
	DB	"[Trig] Zeroed screen and ended GFX"
	DB	10,0
	SEGMENT CODE
;  718	
;  719	static void trig_Reset()
;  720	{
_trig_Reset:
.DEFINE "_trig_Reset"

.VALUE _trig_Reset

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Reset",720,"_trig_Reset"

.LINE 720

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-12
	LD	SP,HL
;  721		int i = 0;
.LINE 721

	LD	BC,0
	LD	(IX+-3),BC
;  722		bool  * bptr = (bool*) &trigstatus;
;  723		real_t* rptr = (real_t*) &triangle;
;  724		for (; i < sizeof(trigstatus) / sizeof(bool); i++)
.LINE 724

	JR	L_170
L_168:
;  725		{
;  726			bptr[i] = false;
.LINE 726

	LD	BC,_trigstatus
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  727		}
L_170:
.LINE 727

	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_168
;  728		for (i = 0; i < sizeof(triangle) / sizeof(real_t); i++)
.LINE 728

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_174
L_172:
;  729		{
;  730			rptr[i] = os_Int24ToReal(0);
.LINE 730

	LD	BC,0
	PUSH	BC
	PEA	IX+-12
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	A,9
	CALL	__imul_b
	LD	DE,_triangle
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,9
	LDIR	
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  731		}
L_174:
.LINE 731

	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_172
;  732		for (i = 0; i < 3; i++)
.LINE 732

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_179
L_177:
;  733		{
;  734			gfx_Clear(&xanglesData[i]);
.LINE 734

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  735			lib_MemZero(xanglesData[i].label + kLabelOffset, 16);
.LINE 735

	LD	BC,16
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  736	
;  737			gfx_Clear(&xsidesData[i]);
.LINE 737

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  738			lib_MemZero(xsidesData[i].label + kLabelOffset, 16);
.LINE 738

	LD	BC,16
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  739		}
L_179:
.LINE 739

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_177
;  740		gfx_Clear(&ui_Type);
.LINE 740

	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  741		gfx_Clear(&data_X_ex);
.LINE 741

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  742		lib_MemZero(data_X_ex.label + kLabelOffset, 16);
.LINE 742

	LD	BC,16
	PUSH	BC
	LD	BC,_data_X_ex+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  743	
;  744		gfx_Clear(&xmeasureData[0]);
.LINE 744

	LD	BC,_xmeasureData
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  745		gfx_Clear(&xmeasureData[1]);
.LINE 745

	LD	BC,_xmeasureData+26
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  746		lib_MemZero(xmeasureData[0].label + kLabelOffset, 20 - kLabelOffset);
.LINE 746

	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  747		lib_MemZero(xmeasureData[1].label + kLabelOffset, 20 - kLabelOffset);
.LINE 747

	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  748	
;  749		sp_SetLabel(&angle_A, "A");
.LINE 749

	LD	BC,L__161
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  750		sp_SetLabel(&angle_B, "B");
.LINE 750

	LD	BC,L__162
	PUSH	BC
	LD	BC,_xangles+26
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  751		sp_SetLabel(&angle_C, "C");
.LINE 751

	LD	BC,L__163
	PUSH	BC
	LD	BC,_xangles+52
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  752		sp_SetLabel(&side_a, "a");
.LINE 752

	LD	BC,L__164
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  753		sp_SetLabel(&side_b, "b");
.LINE 753

	LD	BC,L__165
	PUSH	BC
	LD	BC,_xsides+26
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  754		sp_SetLabel(&side_c, "c");
.LINE 754

	LD	BC,L__166
	PUSH	BC
	LD	BC,_xsides+52
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  755		trig_Redraw();
.LINE 755

	CALL	_trig_Redraw
;  756		trig_DrawTriangleSides();
.LINE 756

	CALL	_trig_DrawTriangleSides
;  757		trig_Sync();
.LINE 757

	CALL	_trig_Sync
;  758	}
.LINE 758

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Reset ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_DrawTriangleSides             STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_sp_SetLabel                        IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_data_X_ex                          STATIC     26   variable
;_ui_Type                            STATIC     26   variable
;_xsidesData                         STATIC     78   variable
;_lib_MemZero                        IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_Int24ToReal                     IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 18 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Reset",758,"_trig_Reset"
	SEGMENT STRSECT
L__161:
	DB	"A"
	DB	0
L__162:
	DB	"B"
	DB	0
L__163:
	DB	"C"
	DB	0
L__164:
	DB	"a"
	DB	0
L__165:
	DB	"b"
	DB	0
L__166:
	DB	"c"
	DB	0
	SEGMENT CODE
;  759	
;  760	static void trig_DrawTriangleSides()
;  761	{
_trig_DrawTriangleSides:
.DEFINE "_trig_DrawTriangleSides"

.VALUE _trig_DrawTriangleSides

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_DrawTriangleSides",761,"_trig_DrawTriangleSides"

.LINE 761

.DEFINE "index"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "verts"

.CLASS 65

.VALUE -36

.DIM 6

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-36
	LD	SP,HL
;  762		int index = 0;
;  763	
;  764		/* Triangle coordinates */
;  765		const int verts[6] = {
;  766				140, 10,   /* (x0, y0) */
;  767				10, 119,  /* (x1, y1) */
;  768				209, 119, /* (x2, y2) */
;  769		};
.LINE 769

	LEA	DE,IX+-36
	LD	HL,_0temp183
	LD	BC,18
	LDIR	
;  770	
;  771		/* Leg a */
;  772		gfx_Line(verts[0], verts[1], verts[2], verts[3]);
.LINE 772

	LEA	IY,IX+-36
	LEA	BC,IY+9
	LD	(IX+-9),BC
	LEA	BC,IY+6
	LD	(IX+-6),BC
	LEA	IY,IX+-33
	LD	(IX+-18),IY
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  773	
;  774		/* Leg b */
;  775		gfx_Line(verts[2], verts[3], verts[4], verts[5]);
.LINE 775

	LEA	BC,IX+-21
	LD	(IX+-15),BC
	LEA	IY,IX+-24
	LD	(IX+-12),IY
	LD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  776	
;  777		/* Hypotenuse */
;  778		gfx_Line(verts[4], verts[5], verts[0], verts[1]);
.LINE 778

	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	LD	HL,(IX+-15)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  779	
;  780	
;  781		// Angles A, B, C
;  782		trig_Redraw();
.LINE 782

	CALL	_trig_Redraw
;  783	
;  784		// Leg a, b, c
;  785		for (index = 0; index < 3; index++)
.LINE 785

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_187
L_185:
;  786		{
;  787			gfx_Print(&xsides[index]);
.LINE 787

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  788		}
L_187:
.LINE 788

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_185
;  789	}
.LINE 789

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_DrawTriangleSides ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_gfx_Print                          IMPORT  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gfx_Line                           IMPORT  -----   function
;_0temp183                           STATIC     18   variable
;verts                                IX-36     18   variable
;G_14                                 IX-18      3   variable
;G_12                                 IX-15      3   variable
;G_13                                 IX-12      3   variable
;G_10                                  IX-9      3   variable
;G_11                                  IX-6      3   variable
;index                                 IX-3      3   variable


; Stack Frame Size: 42 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_DrawTriangleSides",789,"_trig_DrawTriangleSides"
	SEGMENT TEXT
_0temp183:
	DW	140
	DB	0
	DW	10
	DB	0
	DW	10
	DB	0
	DW	119
	DB	0
	DW	209
	DB	0
	DW	119
	DB	0
	SEGMENT CODE
;  790	
;  791	static void ui_DispData()
;  792	{
_ui_DispData:
.DEFINE "_ui_DispData"

.VALUE _ui_DispData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispData",792,"_ui_DispData"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  793		if (ui_bDispMeasurements)
.LINE 793

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_191
;  794		{
;  795			ui_DispMeasurements();
.LINE 795

	CALL	_ui_DispMeasurements
;  796		}
;  797		else if (!ui_bDispMeasurements)
.LINE 797

	JR	L_192
L_191:
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	NZ,L_192
;  798		{
;  799			ui_DispAngleSideData();
.LINE 799

	CALL	_ui_DispAngleSideData
;  800		}
;  801	}
L_192:
.LINE 801

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispData ***************************
;Name                         Addr/Register   Size   Type
;_ui_DispAngleSideData               STATIC  -----   function
;_ui_DispMeasurements                STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispData",801,"_ui_DispData"
;  802	
;  803	static void trig_SelectAngle()
;  804	{
_trig_SelectAngle:
.DEFINE "_trig_SelectAngle"

.VALUE _trig_SelectAngle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SelectAngle",804,"_trig_SelectAngle"

.LINE 804

.DEFINE "currentSelection"

.CLASS 65

.VALUE -3

.TAG "NONAME16"

.TYPE 40

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-52
	LD	SP,HL
;  805		uint8_t key;
;  806		superpoint_t* currentSelection = &angle_A;
.LINE 806

	LD	BC,_xangles
	LD	(IX+-3),BC
;  807		gfx_HighlightPoint(&angle_A);
.LINE 807

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  808		RECURSE:
.LINE 808

;  809		while ((key = os_GetCSC()) != sk_Enter)
.LINE 809

	JR	L_222
L_223:
;  810		{
;  811			if (key == sk_Clear)
.LINE 811

	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_231
;  812			{
;  813				return;
.LINE 813

;  814			}
.LINE 814

;  815	
;  816			if (key == sk_Zoom)
.LINE 816

	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_201
;  817			{
;  818				if (ui_bDispMeasurements)
.LINE 818

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_196
;  819				{
;  820					ui_bDispMeasurements = false;
.LINE 820

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  821					ui_ClearMeasurements();
.LINE 821

	CALL	_ui_ClearMeasurements
;  822				}
;  823				else
.LINE 823

	JR	L_197
L_196:
;  824				{
;  825					ui_bDispMeasurements = true;
.LINE 825

	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  826					ui_ClearAngleSideData();
.LINE 826

	CALL	_ui_ClearAngleSideData
;  827				}
L_197:
.LINE 827

;  828				ui_DispData();
.LINE 828

	CALL	_ui_DispData
;  829			}
L_201:
.LINE 829

;  830	
;  831			if (key == sk_Trace)
.LINE 831

	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_203
;  832			{
;  833				trig_Reset();
.LINE 833

	CALL	_trig_Reset
;  834				currentSelection = &angle_A;
.LINE 834

	LD	BC,_xangles
	LD	(IX+-3),BC
;  835				gfx_HighlightPoint(&angle_A);
.LINE 835

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  836			}
L_203:
.LINE 836

;  837	
;  838			if (key == sk_Graph)
.LINE 838

	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_206
;  839			{
;  840				gfx_Clear(&ui_Mode);
.LINE 840

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  841				sp_SetLabel(&ui_Mode, lbl_SideMode);
.LINE 841

	LD	BC,_lbl_SideMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  842				gfx_Print(&ui_Mode);
.LINE 842

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  843				gfx_ClearHighlight(currentSelection);
.LINE 843

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  844				trig_SelectSide();
.LINE 844

	CALL	_trig_SelectSide
;  845				return;
.LINE 845

	JR	L_231
;  846			}
L_206:
.LINE 846

;  847	
;  848			/* AAA -> BBB */
;  849			if (key == sk_Right && PointEq(*currentSelection, angle_A))
.LINE 849

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_209
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_209
;  850			{
;  851				gfx_SetFocus(&currentSelection, &angle_A, &angle_B);
.LINE 851

	LD	BC,_xangles+26
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  852			}
L_209:
.LINE 852

;  853	
;  854			/* AAA -> CCC */
;  855			if (key == sk_Up && PointEq(*currentSelection, angle_A))
.LINE 855

	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_212
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_212
;  856			{
;  857				gfx_SetFocus(&currentSelection, &angle_A, &angle_C);
.LINE 857

	LD	BC,_xangles+52
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  858			}
L_212:
.LINE 858

;  859	
;  860			/* BBB -> AAA */
;  861			if (key == sk_Left && PointEq(*currentSelection, angle_B))
.LINE 861

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_215
	LD	BC,_xangles+26
	LD	(IX+-16),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_215
;  862			{
;  863				gfx_SetFocus(&currentSelection, &angle_B, &angle_A);
.LINE 863

	LD	BC,_xangles
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  864			}
L_215:
.LINE 864

;  865	
;  866			/* BBB -> CCC */
;  867			if (key == sk_Up && PointEq(*currentSelection, angle_B))
.LINE 867

	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_218
	LD	BC,_xangles+26
	LD	(IX+-19),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_218
;  868			{
;  869				gfx_SetFocus(&currentSelection, &angle_B, &angle_C);
.LINE 869

	LD	BC,_xangles+52
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  870			}
L_218:
.LINE 870

;  871	
;  872			/* CCC -> AAA */
;  873			if (key == sk_Left && PointEq(*currentSelection, angle_C))
.LINE 873

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_221
	LD	BC,_xangles+52
	LD	(IX+-22),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_221
;  874			{
;  875				gfx_SetFocus(&currentSelection, &angle_C, &angle_A);
.LINE 875

	LD	BC,_xangles
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  876			}
L_221:
.LINE 876

;  877	
;  878			/* CCC -> BBB */
;  879			if (key == sk_Down && PointEq(*currentSelection, angle_C))
.LINE 879

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_222
	LD	BC,_xangles+52
	LD	(IX+-13),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_222
;  880			{
;  881				gfx_SetFocus(&currentSelection, &angle_C, &angle_B);
.LINE 881

	LD	BC,_xangles+26
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  882			}
;  883		}
L_222:
.LINE 883

	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_223
;  884	
;  885		if (PointEq(*currentSelection, angle_A))
.LINE 885

	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_227
;  886		{
;  887			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", angle_A.label);
.LINE 887

	LD	BC,_xangles
	LD	(IX+-25),BC
	LD	BC,_xangles+6
	PUSH	BC
	LD	BC,L__192
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  888			triangle.A   = io_gfx_ReadReal(&angle_A);
.LINE 888

	LD	BC,(IX+-25)
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  889			trigstatus.A = true;
.LINE 889

	LD	A,1
	LD	(_trigstatus+3),A
;  890		}
L_227:
.LINE 890

;  891	
;  892		if (PointEq(*currentSelection, angle_B))
.LINE 892

	LD	BC,_xangles+26
	LD	(IX+-10),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_229
;  893		{
;  894			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", angle_B.label);
.LINE 894

	LD	IY,(IX+-10)
	PEA	IY+6
	LD	BC,L__194
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  895			triangle.B   = io_gfx_ReadReal(&angle_B);
.LINE 895

	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  896			trigstatus.B = true;
.LINE 896

	LD	A,1
	LD	(_trigstatus+4),A
;  897		}
L_229:
.LINE 897

;  898	
;  899		if (PointEq(*currentSelection, angle_C))
.LINE 899

	LD	BC,_xangles+52
	LD	(IX+-7),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_230
;  900		{
;  901			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", angle_C.label);
.LINE 901

	LD	IY,(IX+-7)
	PEA	IY+6
	LD	BC,L__196
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  902			triangle.C   = io_gfx_ReadReal(&angle_C);
.LINE 902

	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-52
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  903			trigstatus.C = true;
.LINE 903

	LD	A,1
	LD	(_trigstatus+5),A
;  904		}
L_230:
.LINE 904

;  905	
;  906		trig_CheckSolvability();
.LINE 906

	CALL	_trig_CheckSolvability
;  907		gfx_HighlightPoint(currentSelection);
.LINE 907

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  908		goto RECURSE;
.LINE 908

	JR	L_222
;  909	}
L_231:
.LINE 909

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectAngle ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_gfx_SetFocus                       IMPORT  -----   function
;_PointEq                            IMPORT  -----   function
;_trig_SelectSide                    STATIC  -----   function
;_gfx_ClearHighlight                 IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_lbl_SideMode                       STATIC     10   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_gfx_HighlightPoint                 IMPORT  -----   function
;_xangles                            STATIC     78   variable
;G_19                                 IX-25      3   variable
;G_17                                 IX-22      3   variable
;G_16                                 IX-19      3   variable
;G_15                                 IX-16      3   variable
;G_18                                 IX-13      3   variable
;G_20                                 IX-10      3   variable
;G_22                                  IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 58 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SelectAngle",909,"_trig_SelectAngle"
	SEGMENT STRSECT
L__192:
	DB	"[Trig] User selected angle %s"
	DB	10,0
L__194:
	DB	"[Trig] User selected angle %s"
	DB	10,0
L__196:
	DB	"[Trig] User selected angle %s"
	DB	10,0
	SEGMENT CODE
;  910	
;  911	static void ui_DispMeasurements()
;  912	{
_ui_DispMeasurements:
.DEFINE "_ui_DispMeasurements"

.VALUE _ui_DispMeasurements

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispMeasurements",912,"_ui_DispMeasurements"

.LINE 912

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "real0"

.CLASS 65

.VALUE -12

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "buffer"

.CLASS 65

.VALUE -32

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-41
	LD	SP,HL
;  913		char         buffer[20];
;  914		const real_t real0 = os_Int24ToReal(0);
.LINE 914

	LD	BC,0
	PUSH	BC
	PEA	IX+-41
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  915		int          i     = 0;
.LINE 915

	LD	BC,0
	LD	(IX+-3),BC
;  916	
;  917		for (; i < 2; i++)
.LINE 917

	JR	L_235
L_233:
;  918		{
;  919			gfx_Clear(&xmeasureData[i]);
.LINE 919

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  920		}
L_235:
.LINE 920

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_233
;  921	
;  922		if (os_RealCompare(&triangle.area, &real0) == 0)
.LINE 922

	PEA	IX+-12
	LD	BC,_triangle+54
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_237
;  923		{
;  924			strcpy(xmeasureData[0].label + kLabelOffset, lbl_Unknown);
.LINE 924

	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  925		}
;  926		else
.LINE 926

	JR	L_241
L_237:
;  927		{
;  928			os_RealToStr(buffer, &triangle.area, 0, 0, 6);
.LINE 928

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  929			strncpy(xmeasureData[0].label + kLabelOffset, buffer, 20 - kLabelOffset);
.LINE 929

	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  930		}
L_241:
.LINE 930

;  931	
;  932		if (os_RealCompare(&triangle.perimeter, &real0) == 0)
.LINE 932

	PEA	IX+-12
	LD	BC,_triangle+63
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_240
;  933		{
;  934			strcpy(xmeasureData[1].label + kLabelOffset, lbl_Unknown);
.LINE 934

	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  935		}
;  936		else
.LINE 936

	JR	L_246
L_240:
;  937		{
;  938			os_RealToStr(buffer, &triangle.perimeter, 0, 0, 6);
.LINE 938

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  939			strncpy(xmeasureData[1].label + kLabelOffset, buffer, 20 - kLabelOffset);
.LINE 939

	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  940		}
L_246:
.LINE 940

;  941	
;  942	
;  943		for (i = 0; i < 2; i++)
.LINE 943

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_245
L_243:
;  944		{
;  945			gfx_Clear(&xmeasureData[i]);
.LINE 945

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  946			gfx_Print(&xmeasureData[i]);
.LINE 946

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  947		}
L_245:
.LINE 947

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_243
;  948	}
.LINE 948

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Print                          IMPORT  -----   function
;_strncpy                            IMPORT  -----   function
;_os_RealToStr                       IMPORT  -----   function
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealCompare                     IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_gfx_Clear                          IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buffer                               IX-32     20   variable
;real0                                IX-12      9   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 47 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispMeasurements",948,"_ui_DispMeasurements"
;  949	
;  950	static void ui_DispAngleSideData()
;  951	{
_ui_DispAngleSideData:
.DEFINE "_ui_DispAngleSideData"

.VALUE _ui_DispAngleSideData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispAngleSideData",951,"_ui_DispAngleSideData"

.LINE 951

.DEFINE "i"

.CLASS 65

.VALUE -12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-24
	LD	SP,HL
;  952		int i = 0;
.LINE 952

	LD	BC,0
	LD	(IX+-12),BC
;  953		for (; i < 3; i++)
.LINE 953

	JR	L_261
L_259:
;  954		{
;  955			gfx_Clear(&xsidesData[i]);
.LINE 955

	LD	HL,(IX+-12)
	LD	A,26
	CALL	__imul_b
	LD	(IX+-3),HL
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  956			gfx_Clear(&xanglesData[i]);
.LINE 956

	LD	BC,_xanglesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  957	
;  958			if (*xsides[i].label == 'a' || *xsides[i].label == 'b' || *xsides[i].label == 'c')
.LINE 958

	LD	BC,_xsides
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-15),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,97
	OR	A,A
	SBC	HL,BC
	JR	Z,L_251
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,98
	OR	A,A
	SBC	HL,BC
	JR	Z,L_251
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,99
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_252
L_251:
;  959				strcpy(xsidesData[i].label + kLabelOffset, lbl_Unknown);
.LINE 959

	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  960			else strcpy(xsidesData[i].label + kLabelOffset, xsides[i].label);
.LINE 960

	JR	L_257
L_252:
	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_xsides
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_257:
;  961	
;  962			if (*xangles[i].label == 'A' || *xangles[i].label == 'B' || *xangles[i].label == 'C')
.LINE 962

	LD	BC,(IX+-21)
	LD	(IX+-6),BC
	LD	BC,_xangles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-18),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,65
	OR	A,A
	SBC	HL,BC
	JR	Z,L_255
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,66
	OR	A,A
	SBC	HL,BC
	JR	Z,L_255
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,67
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_256
L_255:
;  963				strcpy(xanglesData[i].label + kLabelOffset, lbl_Unknown);
.LINE 963

	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xanglesData
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  964			else strcpy(xanglesData[i].label + kLabelOffset, xangles[i].label);
.LINE 964

	JR	L_258
L_256:
	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_xangles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	BC,_xanglesData
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_258:
;  965	
;  966			gfx_Clear(&xanglesData[i]);
.LINE 966

	LD	BC,(IX+-24)
	LD	(IX+-9),BC
	LD	BC,_xanglesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  967			gfx_Print(&xanglesData[i]);
.LINE 967

	LD	BC,_xanglesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;  968	
;  969			gfx_Clear(&xsidesData[i]);
.LINE 969

	LD	BC,_xsidesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  970			gfx_Print(&xsidesData[i]);
.LINE 970

	LD	BC,_xsidesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-12)
	INC	BC
	LD	(IX+-12),BC
;  971		}
L_261:
.LINE 971

	LD	BC,3
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_259
;  972		if (trigstatus.isSSA)
.LINE 972

	LD	A,(_trigstatus+7)
	OR	A,A
	JR	Z,L_264
;  973		{
;  974			gfx_Clear(&data_X_ex);
.LINE 974

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  975			gfx_Print(&data_X_ex);
.LINE 975

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  976		}
;  977		else if (!trigstatus.isSSA)
.LINE 977

	JR	L_266
L_264:
	LD	A,(_trigstatus+7)
	OR	A,A
	JR	NZ,L_266
;  978		{
;  979			gfx_Clear(&data_X_ex);
.LINE 979

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  980		}
;  981	}
L_266:
.LINE 981

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_data_X_ex                          STATIC     26   variable
;_trigstatus                         STATIC      8   variable
;_gfx_Print                          IMPORT  -----   function
;_xangles                            STATIC     78   variable
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;G_35                                 IX-24      3   variable
;G_30                                 IX-21      3   variable
;G_31                                 IX-18      3   variable
;G_26                                 IX-15      3   variable
;i                                    IX-12      3   variable
;G_36                                  IX-9      3   variable
;G_33                                  IX-6      3   variable
;G_24                                  IX-3      3   variable


; Stack Frame Size: 30 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispAngleSideData",981,"_ui_DispAngleSideData"
;  982	
;  983	void trig_SolveTriangle()
;  984	{
_trig_SolveTriangle:
.DEFINE "_trig_SolveTriangle"

.VALUE _trig_SolveTriangle

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveTriangle",984,"_trig_SolveTriangle"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  985		os_ClrHome();
.LINE 985

	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
;  986	
;  987		ui_bDispMeasurements = false;
.LINE 987

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  988	
;  989		gfx_Begin();
.LINE 989

	CALL	_gfx_Begin
;  990		gfx_SetColor(gfx_blue);
.LINE 990

	LD	BC,16
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  991		gfx_SetTextFGColor(gfx_black);
.LINE 991

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  992	
;  993		gfx_Print(&ui_Mode);
.LINE 993

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  994		gfx_Print(&ui_btn_Mode);
.LINE 994

	LD	BC,_ui_btn_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  995		gfx_Print(&ui_btn_Clear);
.LINE 995

	LD	BC,_ui_btn_Clear
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  996		gfx_Print(&ui_btn_Data);
.LINE 996

	LD	BC,_ui_btn_Data
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  997	
;  998		trig_Reset();
.LINE 998

	CALL	_trig_Reset
;  999	
; 1000		trig_SelectAngle();
.LINE 1000

	CALL	_trig_SelectAngle
; 1001	
; 1002		trig_Quit();
.LINE 1002

	CALL	_trig_Quit
; 1003	}
.LINE 1003

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trig_Quit                          STATIC  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_btn_Data                        STATIC     26   variable
;_ui_btn_Clear                       STATIC     26   variable
;_ui_btn_Mode                        STATIC     26   variable
;_ui_Mode                            STATIC     26   variable
;_gfx_Print                          IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_HomeUp                         IMPORT  -----   function
;_asm_ClrLCD                         IMPORT  -----   function
;__OS                                IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveTriangle",1003,"_trig_SolveTriangle"
	XREF _strncpy:ROM
	XREF _strcpy:ROM
	XREF _loc_Angle_x:ROM
	XREF _loc_Side_x:ROM
	XREF _los_Angle_x:ROM
	XREF _los_Side_x:ROM
	XREF _os_RealSinDeg:ROM
	XREF _sprintf:ROM
	XREF _geo_RoundTriangle:ROM
	XREF _gfx_SetFocus:ROM
	XREF _gfx_PrintColor:ROM
	XREF _gfx_HighlightPoint:ROM
	XREF _gfx_ClearHighlight:ROM
	XREF _sp_SetLabel:ROM
	XREF _PointEq:ROM
	XREF _io_gfx_ReadReal:ROM
	XREF _gfx_Clear:ROM
	XREF _gfx_Print:ROM
	XREF _gDigitThreshold:ROM
	XREF _gRound:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_Line:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _lib_StrCut:ROM
	XREF _lib_MemZero:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCD:ROM
	XREF _asm_HomeUp:ROM
	XREF __OS:ROM
	XREF _os_GetCSC:ROM
	XREF _os_RealToStr:ROM
	XREF _os_FloatToReal:ROM
	XREF _os_Int24ToReal:ROM
	XREF _os_RealCompare:ROM
	XREF _os_RealSub:ROM
	XREF _os_RealMul:ROM
	XREF _os_RealDiv:ROM
	XREF _os_RealAdd:ROM
	XREF _os_RealSqrt:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _trig_SolveTriangle
	XDEF _trig_AreaBySin
	END
