; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\TRIANGLE.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME1"
.TYPE 104
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME0"
.TYPE 104
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME7"
.BEGREC "NONAME8",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME9"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME10"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME10",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME10"
.BEGREC "NONAME11",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME11"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME15"
.BEGREC "NONAME16",26
.DEFINE "point"
.VALUE 0
.CLASS 8
.TAG "NONAME13"
.TYPE 8
.ENDEF
.DEFINE "label"
.VALUE 6
.CLASS 8
.DIM 20
.TYPE 98
.ENDEF
.ENDREC "NONAME16"
.BEGREC "NONAME17",72
.DEFINE "A"
.VALUE 0
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "B"
.VALUE 9
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "C"
.VALUE 18
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "a"
.VALUE 27
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "b"
.VALUE 36
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "c"
.VALUE 45
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "area"
.VALUE 54
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.DEFINE "perimeter"
.VALUE 63
.CLASS 8
.TAG "NONAME0"
.TYPE 8
.ENDEF
.ENDREC "NONAME17"
.BEGREC "NONAME18",8
.DEFINE "a"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "b"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "c"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "A"
.VALUE 3
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "B"
.VALUE 4
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "C"
.VALUE 5
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "complete"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "isSSA"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "NONAME18"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
	SEGMENT DATA
_xangles:
	DW	30
	DB	0
	DW	109
	DB	0
	DB	65
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	165
	DB	0
	DW	109
	DB	0
	DB	66
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	135
	DB	0
	DW	27
	DB	0
	DB	67
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xangles"
.ALIAS "_xangles"
.CLASS 69
.VALUE _xangles
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xsides:
	DW	190
	DB	0
	DW	60
	DB	0
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	60
	DB	0
	DW	55
	DB	0
	DB	98
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	95
	DB	0
	DW	130
	DB	0
	DB	99
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xsides"
.ALIAS "_xsides"
.CLASS 69
.VALUE _xsides
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
	SEGMENT TEXT
_lbl_AngleMode:
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
.DEFINE "lbl_AngleMode"
.ALIAS "_lbl_AngleMode"
.CLASS 84
.VALUE _lbl_AngleMode
.DIM 11
.TYPE 98
.ENDEF
_lbl_SideMode:
	DB	83
	DB	73
	DB	68
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
.DEFINE "lbl_SideMode"
.ALIAS "_lbl_SideMode"
.CLASS 84
.VALUE _lbl_SideMode
.DIM 10
.TYPE 98
.ENDEF
_lbl_SSS:
	DB	83
	DB	83
	DB	83
	DB	0
.DEFINE "lbl_SSS"
.ALIAS "_lbl_SSS"
.CLASS 84
.VALUE _lbl_SSS
.DIM 4
.TYPE 98
.ENDEF
_lbl_SSA:
	DB	83
	DB	83
	DB	65
	DB	32
	DB	40
	DB	33
	DB	41
	DB	0
.DEFINE "lbl_SSA"
.ALIAS "_lbl_SSA"
.CLASS 84
.VALUE _lbl_SSA
.DIM 8
.TYPE 98
.ENDEF
_lbl_SAS:
	DB	83
	DB	65
	DB	83
	DB	0
.DEFINE "lbl_SAS"
.ALIAS "_lbl_SAS"
.CLASS 84
.VALUE _lbl_SAS
.DIM 4
.TYPE 98
.ENDEF
_lbl_AAS:
	DB	65
	DB	65
	DB	83
	DB	0
.DEFINE "lbl_AAS"
.ALIAS "_lbl_AAS"
.CLASS 84
.VALUE _lbl_AAS
.DIM 4
.TYPE 98
.ENDEF
_lbl_ASA:
	DB	65
	DB	83
	DB	65
	DB	0
.DEFINE "lbl_ASA"
.ALIAS "_lbl_ASA"
.CLASS 84
.VALUE _lbl_ASA
.DIM 4
.TYPE 98
.ENDEF
_lbl_Unknown:
	DB	63
	DB	0
.DEFINE "lbl_Unknown"
.ALIAS "_lbl_Unknown"
.CLASS 84
.VALUE _lbl_Unknown
.DIM 2
.TYPE 98
.ENDEF
	SEGMENT BSS
_triangle:
	DS	72
.DEFINE "triangle"
.ALIAS "_triangle"
.CLASS 83
.VALUE _triangle
.TAG "NONAME17"
.TYPE 8
.ENDEF
_trigstatus:
	DS	8
.DEFINE "trigstatus"
.ALIAS "_trigstatus"
.CLASS 83
.VALUE _trigstatus
.TAG "NONAME18"
.TYPE 8
.ENDEF
_ui_bDispMeasurements:
	DS	1
.DEFINE "ui_bDispMeasurements"
.ALIAS "_ui_bDispMeasurements"
.CLASS 83
.VALUE _ui_bDispMeasurements
.TYPE 12
.ENDEF
	SEGMENT DATA
_ui_Mode:
	DW	230
	DB	0
	DW	10
	DB	0
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_Mode"
.ALIAS "_ui_Mode"
.CLASS 69
.VALUE _ui_Mode
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_Type:
	DW	230
	DB	0
	DW	20
	DB	0
	DB	46
	DB	46
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_Type"
.ALIAS "_ui_Type"
.CLASS 69
.VALUE _ui_Type
.TAG "NONAME16"
.TYPE 8
.ENDEF
	SEGMENT TEXT
_ui_btn_Mode:
	DW	280
	DB	0
	DW	230
	DB	0
	DB	77
	DB	111
	DB	100
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Mode"
.ALIAS "_ui_btn_Mode"
.CLASS 84
.VALUE _ui_btn_Mode
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Clear:
	DW	215
	DB	0
	DW	230
	DB	0
	DB	67
	DB	108
	DB	101
	DB	97
	DB	114
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Clear"
.ALIAS "_ui_btn_Clear"
.CLASS 84
.VALUE _ui_btn_Clear
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Data:
	DW	145
	DB	0
	DW	230
	DB	0
	DB	68
	DB	97
	DB	116
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Data"
.ALIAS "_ui_btn_Data"
.CLASS 84
.VALUE _ui_btn_Data
.TAG "NONAME16"
.TYPE 8
.ENDEF
_ui_btn_Pref:
	DW	70
	DB	0
	DW	230
	DB	0
	DB	80
	DB	114
	DB	101
	DB	102
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "ui_btn_Pref"
.ALIAS "_ui_btn_Pref"
.CLASS 84
.VALUE _ui_btn_Pref
.TAG "NONAME16"
.TYPE 8
.ENDEF
	SEGMENT DATA
_xmeasureData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	80
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xmeasureData"
.ALIAS "_xmeasureData"
.CLASS 69
.VALUE _xmeasureData
.DIM 2
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xanglesData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	66
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	195
	DB	0
	DB	67
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xanglesData"
.ALIAS "_xanglesData"
.CLASS 69
.VALUE _xanglesData
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_xsidesData:
	DW	130
	DB	0
	DW	155
	DB	0
	DB	97
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	175
	DB	0
	DB	98
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	195
	DB	0
	DB	99
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "xsidesData"
.ALIAS "_xsidesData"
.CLASS 69
.VALUE _xsidesData
.DIM 3
.TAG "NONAME16"
.TYPE 104
.ENDEF
_data_X_ex:
	DW	10
	DB	0
	DW	215
	DB	0
	DB	42
	DB	88
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
.DEFINE "data_X_ex"
.ALIAS "_data_X_ex"
.CLASS 69
.VALUE _data_X_ex
.TAG "NONAME16"
.TYPE 8
.ENDEF
;    1	//
;    2	// Created by Decimation on 4/27/2018.
;    3	//
;    4	
;    5	#include "Triangle.h"
;    6	#include "debug.h"
;    7	#include "Trigonometry.h"
;    8	#include <string.h>
;    9	
;   10	static superpoint_t xangles[3] = {
;   11			{{30,       119 - 10}, "A"},   // AAA
;   12			{{10 + 155, 119 - 10}, "B"},   // BBB
;   13			{{135,      27},       "C"}   // CCC
;   14	};
;   15	
;   16	static superpoint_t xsides[3] = {
;   17			{{10 + 180, 60},  "a"},  // aaa
;   18			{{60,       55},  "b"},  // bbb
;   19			{{140 - 45, 130}, "c"}   // ccc
;   20	};
;   21	
;   22	
;   23	#define angle_A xangles[0]
;   24	#define angle_B xangles[1]
;   25	#define angle_C xangles[2]
;   26	
;   27	#define side_a xsides[0]
;   28	#define side_b xsides[1]
;   29	#define side_c xsides[2]
;   30	
;   31	static const char lbl_AngleMode[] = "ANGLE MODE";
;   32	static const char lbl_SideMode[]  = "SIDE MODE";
;   33	static const char lbl_SSS[]       = "SSS";
;   34	static const char lbl_SSA[]       = "SSA (!)";
;   35	static const char lbl_SAS[]       = "SAS";
;   36	static const char lbl_AAS[]       = "AAS";
;   37	static const char lbl_ASA[]       = "ASA";
;   38	static const char lbl_Unknown[]   = "?";
;   39	
;   40	static triangle_t   triangle;
;   41	static trigstatus_t trigstatus;
;   42	
;   43	/**
;   44	 * When true : display area and perimeter
;   45	 * When false: display a, b, c, A, B, C
;   46	 */
;   47	static bool ui_bDispMeasurements;
;   48	
;   49	static superpoint_t       ui_Mode      = {{230, 10}, "ANGLE MODE"};
;   50	static superpoint_t       ui_Type      = {{230, 20}, "..."};
;   51	static const superpoint_t ui_btn_Mode  = {280, 230, "Mode"};
;   52	static const superpoint_t ui_btn_Clear = {215, 230, "Clear"};
;   53	static const superpoint_t ui_btn_Data  = {145, 230, "Data"};
;   54	static const superpoint_t ui_btn_Pref  = {70, 230, "Pref"};
;   55	
;   56	static superpoint_t xmeasureData[2] = {
;   57			{10, 155, "A = "},
;   58			{10, 175, "P = "},
;   59	};
;   60	
;   61	static superpoint_t xanglesData[3] = {
;   62			{10, 155, "A = "},
;   63			{10, 175, "B = "},
;   64			{10, 195, "C = "}
;   65	};
;   66	
;   67	static superpoint_t xsidesData[3] = {
;   68			{130, 155, "a = "},
;   69			{130, 175, "b = "},
;   70			{130, 195, "c = "}
;   71	};
;   72	
;   73	static superpoint_t data_X_ex = {10, 215, "*X = "};
	SEGMENT CODE
;   74	
;   75	static void trig_Redraw()
;   76	{
_trig_Redraw:
.DEFINE "_trig_Redraw"

.VALUE _trig_Redraw

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Redraw",76,"_trig_Redraw"

.LINE 76

.DEFINE "index"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   77		int index = 0;
;   78		for (index = 0; index < 3; index++)
.LINE 78

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_3
L_1:
;   79		{
;   80			gfx_Clear(&xangles[index]);
.LINE 80

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;   81			gfx_Clear(&xsides[index]);
.LINE 81

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;   82	
;   83			gfx_Print(&xangles[index]);
.LINE 83

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;   84			gfx_Print(&xsides[index]);
.LINE 84

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;   85	
;   86			dbg_sprintf(dbgout, "[%s, %s]\n", xangles[index].label, xsides[index].label);
.LINE 86

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,HL
	LD	DE,_xsides
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	PEA	IY+6
	LD	DE,_xangles
	LD	HL,BC
	ADD	HL,DE
	LD	IY,HL
	PEA	IY+6
	LD	BC,L__0
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   87		}
L_3:
.LINE 87

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_1
;   88	}
.LINE 88

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Redraw ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;index                                 IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Redraw",88,"_trig_Redraw"
	SEGMENT STRSECT
L__0:
	DB	"[%s, %s]"
	DB	10,0
	SEGMENT CODE
;   89	
;   90	static void dbg_printTriangle()
;   91	{
_dbg_printTriangle:
.DEFINE "_dbg_printTriangle"

.VALUE _dbg_printTriangle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "dbg_printTriangle",91,"_dbg_printTriangle"

.LINE 91

.DEFINE "buf"

.CLASS 65

.VALUE -38

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-38
	LD	SP,HL
;   92		char buf[20];
;   93		os_RealToStr(buf, &triangle.A, 0, 0, -1);
.LINE 93

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   94		dbg_sprintf(dbgout, "Angle A: %s | ", buf);
.LINE 94

	PEA	IX+-38
	LD	BC,L__3
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;   95		os_RealToStr(buf, &triangle.a, 0, 0, -1);
.LINE 95

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   96		dbg_sprintf(dbgout, "Side a: %s\n", buf);
.LINE 96

	PEA	IX+-38
	LD	BC,L__4
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;   97	
;   98		os_RealToStr(buf, &triangle.B, 0, 0, -1);
.LINE 98

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   99		dbg_sprintf(dbgout, "Angle B: %s | ", buf);
.LINE 99

	PEA	IX+-38
	LD	BC,L__5
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  100		os_RealToStr(buf, &triangle.b, 0, 0, -1);
.LINE 100

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  101		dbg_sprintf(dbgout, "Side b: %s\n", buf);
.LINE 101

	PEA	IX+-38
	LD	BC,L__6
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  102	
;  103		os_RealToStr(buf, &triangle.C, 0, 0, -1);
.LINE 103

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  104		dbg_sprintf(dbgout, "Angle C: %s | ", buf);
.LINE 104

	PEA	IX+-38
	LD	BC,L__7
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  105		os_RealToStr(buf, &triangle.c, 0, 0, -1);
.LINE 105

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  106		dbg_sprintf(dbgout, "Side c: %s\n", buf);
.LINE 106

	PEA	IX+-38
	LD	BC,L__8
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  107	
;  108		dbg_sprintf(dbgout, "Angle availability: [%s, %s, %s]\n", trigstatus.A ? "1" : "0", trigstatus.B ? "1" : "0",
.LINE 108

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_7
	LD	BC,L__10
	LD	(IX+-3),BC
	JR	L_8
L_7:
	LD	BC,L__11
	LD	(IX+-3),BC
L_8:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_11
	LD	BC,L__13
	LD	(IX+-6),BC
	JR	L_12
L_11:
	LD	BC,L__14
	LD	(IX+-6),BC
L_12:
;  109					trigstatus.C ? "1" : "0");
.LINE 109

	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_15
	LD	BC,L__16
	LD	(IX+-9),BC
	JR	L_16
L_15:
	LD	BC,L__17
	LD	(IX+-9),BC
L_16:
	LD	BC,(IX+-9)
	PUSH	BC
	LD	BC,(IX+-6)
	PUSH	BC
	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,L__18
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  110		dbg_sprintf(dbgout, "Side availability: [%s, %s, %s]\n", trigstatus.a ? "1" : "0", trigstatus.b ? "1" : "0",
.LINE 110

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_19
	LD	BC,L__20
	LD	(IX+-12),BC
	JR	L_20
L_19:
	LD	BC,L__21
	LD	(IX+-12),BC
L_20:
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_23
	LD	BC,L__23
	LD	(IX+-15),BC
	JR	L_24
L_23:
	LD	BC,L__24
	LD	(IX+-15),BC
L_24:
;  111					trigstatus.c ? "1" : "0");
.LINE 111

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_27
	LD	BC,L__26
	LD	(IX+-18),BC
	JR	L_28
L_27:
	LD	BC,L__27
	LD	(IX+-18),BC
L_28:
	LD	BC,(IX+-18)
	PUSH	BC
	LD	BC,(IX+-15)
	PUSH	BC
	LD	BC,(IX+-12)
	PUSH	BC
	LD	BC,L__28
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  112	
;  113		os_RealToStr(buf, &triangle.area, 0, 0, -1);
.LINE 113

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  114		dbg_sprintf(dbgout, "Area: %s\n", buf);
.LINE 114

	PEA	IX+-38
	LD	BC,L__29
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  115		os_RealToStr(buf, &triangle.perimeter, 0, 0, -1);
.LINE 115

	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  116		dbg_sprintf(dbgout, "Perimeter: %s\n", buf);
.LINE 116

	PEA	IX+-38
	LD	BC,L__30
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  117	}
.LINE 117

	LD	SP,IX
	POP	IX
	RET	


;**************************** _dbg_printTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trigstatus                         STATIC      8   variable
;_sprintf                            IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealToStr                       IMPORT  -----   function
;buf                                  IX-38     20   variable
;temp25                               IX-18      3   variable
;temp21                               IX-15      3   variable
;temp17                               IX-12      3   variable
;temp13                                IX-9      3   variable
;temp9                                 IX-6      3   variable
;temp5                                 IX-3      3   variable


; Stack Frame Size: 44 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "dbg_printTriangle",117,"_dbg_printTriangle"
	SEGMENT STRSECT
L__3:
	DB	"Angle A: %s | "
	DB	0
L__4:
	DB	"Side a: %s"
	DB	10,0
L__5:
	DB	"Angle B: %s | "
	DB	0
L__6:
	DB	"Side b: %s"
	DB	10,0
L__7:
	DB	"Angle C: %s | "
	DB	0
L__8:
	DB	"Side c: %s"
	DB	10,0
L__10:
	DB	"1"
	DB	0
L__11:
	DB	"0"
	DB	0
L__13:
	DB	"1"
	DB	0
L__14:
	DB	"0"
	DB	0
L__16:
	DB	"1"
	DB	0
L__17:
	DB	"0"
	DB	0
L__18:
	DB	"Angle availability: [%s, %s, %s]"
	DB	10,0
L__20:
	DB	"1"
	DB	0
L__21:
	DB	"0"
	DB	0
L__23:
	DB	"1"
	DB	0
L__24:
	DB	"0"
	DB	0
L__26:
	DB	"1"
	DB	0
L__27:
	DB	"0"
	DB	0
L__28:
	DB	"Side availability: [%s, %s, %s]"
	DB	10,0
L__29:
	DB	"Area: %s"
	DB	10,0
L__30:
	DB	"Perimeter: %s"
	DB	10,0
	SEGMENT CODE
;  118	
;  119	static void trig_Sync()
;  120	{
_trig_Sync:
.DEFINE "_trig_Sync"

.VALUE _trig_Sync

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Sync",120,"_trig_Sync"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  121		dbg_sprintf(dbgout, "[Trig] Synchronizing...\n");
.LINE 121

	LD	BC,L__32
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  122		geo_RoundTriangle(&triangle, gRound);
.LINE 122

	LD	A,(_gRound)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	CALL	_geo_RoundTriangle
	POP	BC
	POP	BC
;  123		dbg_sprintf(dbgout, "[Trig] Rounded\n");
.LINE 123

	LD	BC,L__33
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  124	
;  125		if (trigstatus.A)
.LINE 125

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_32
;  126		{
;  127			os_RealToStr(angle_A.label, &triangle.A, 0, 0, 6);
.LINE 127

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	LD	BC,_xangles+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  128		}
L_32:
.LINE 128

;  129		if (trigstatus.B)
.LINE 129

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_34
;  130		{
;  131			os_RealToStr(angle_B.label, &triangle.B, 0, 0, 6);
.LINE 131

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  132		}
L_34:
.LINE 132

;  133		if (trigstatus.C)
.LINE 133

	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_36
;  134		{
;  135			os_RealToStr(angle_C.label, &triangle.C, 0, 0, 6);
.LINE 135

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  136		}
L_36:
.LINE 136

;  137		if (trigstatus.a)
.LINE 137

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_38
;  138		{
;  139			os_RealToStr(side_a.label, &triangle.a, 0, 0, 6);
.LINE 139

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	LD	BC,_xsides+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  140		}
L_38:
.LINE 140

;  141		if (trigstatus.b)
.LINE 141

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_40
;  142		{
;  143			os_RealToStr(side_b.label, &triangle.b, 0, 0, 6);
.LINE 143

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  144		}
L_40:
.LINE 144

;  145		if (trigstatus.c)
.LINE 145

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_41
;  146		{
;  147			os_RealToStr(side_c.label, &triangle.c, 0, 0, 6);
.LINE 147

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  148		}
L_41:
.LINE 148

;  149	
;  150		ui_DispData();
.LINE 150

	CALL	_ui_DispData
;  151		trig_TruncateLabels(gDigitThreshold);
.LINE 151

	LD	A,(_gDigitThreshold)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_trig_TruncateLabels
	POP	BC
;  152		dbg_sprintf(dbgout, "[Trig] Truncated labels\n");
.LINE 152

	LD	BC,L__40
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  153		trig_Redraw();
.LINE 153

	CALL	_trig_Redraw
;  154		dbg_printTriangle();
.LINE 154

	CALL	_dbg_printTriangle
;  155	}
.LINE 155

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Sync ***************************
;Name                         Addr/Register   Size   Type
;_dbg_printTriangle                  STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gDigitThreshold                    IMPORT      1   variable
;_trig_TruncateLabels                STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_os_RealToStr                       IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_gRound                             IMPORT      1   variable
;_geo_RoundTriangle                  IMPORT  -----   function
;_sprintf                            IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Sync",155,"_trig_Sync"
	SEGMENT STRSECT
L__32:
	DB	"[Trig] Synchronizing..."
	DB	10,0
L__33:
	DB	"[Trig] Rounded"
	DB	10,0
L__40:
	DB	"[Trig] Truncated labels"
	DB	10,0
	SEGMENT CODE
;  156	
;  157	real_t trig_AreaBySin(real_t a, real_t b, real_t C)
;  158	{
_trig_AreaBySin:
.DEFINE "_trig_AreaBySin"

.VALUE _trig_AreaBySin

.CLASS 2

.TAG "NONAME0"

.TYPE 72

.ENDEF

.BEGFUNC "trig_AreaBySin",158,"_trig_AreaBySin"

.LINE 158

.DEFINE "a"

.CLASS 65

.VALUE 9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "b"

.CLASS 65

.VALUE 18

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "C"

.CLASS 65

.VALUE 27

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "buf"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "onehalf"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-63
	LD	SP,HL
;  159		//Area =  1/2 ab sin C
;  160	
;  161		const real_t onehalf = os_FloatToReal(0.5f);
.LINE 161

	LD	C,63
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PEA	IX+-27
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  162		real_t       buf;
;  163		C   = os_RealSinDeg(C);
.LINE 163

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LEA	HL,IX+27
	LD	BC,9
	LDIR	
	PEA	IX+-36
	CALL	_os_RealSinDeg
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+27
	LD	BC,9
	LDIR	
;  164		buf = os_RealMul(&onehalf, &a);
.LINE 164

	PEA	IX+9
	PEA	IX+-18
	PEA	IX+-45
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  165		buf = os_RealMul(&buf, &b);
.LINE 165

	PEA	IX+18
	PEA	IX+-9
	PEA	IX+-54
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  166		return os_RealMul(&buf, &C);
.LINE 166

	PEA	IX+27
	PEA	IX+-9
	PEA	IX+-63
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)
;  167	}
.LINE 167

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_AreaBySin ***************************
;Name                         Addr/Register   Size   Type
;_os_RealMul                         IMPORT  -----   function
;_os_RealSinDeg                      IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;onehalf                              IX-18      9   variable
;buf                                   IX-9      9   variable
;C                                    IX+27      9   parameter
;b                                    IX+18      9   parameter
;a                                     IX+9      9   parameter


; Stack Frame Size: 99 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_AreaBySin",167,"_trig_AreaBySin"
;  168	
;  169	static void trig_HeronsFormula()
;  170	{
_trig_HeronsFormula:
.DEFINE "_trig_HeronsFormula"

.VALUE _trig_HeronsFormula

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_HeronsFormula",170,"_trig_HeronsFormula"

.LINE 170

.DEFINE "s"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "num"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "root"

.CLASS 65

.VALUE -27

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "sma"

.CLASS 65

.VALUE -36

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real2"

.CLASS 65

.VALUE -45

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "smc"

.CLASS 65

.VALUE -54

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "smb"

.CLASS 65

.VALUE -63

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-171
	ADD	HL,SP
	LD	SP,HL
;  171		real_t       num, s, root;
;  172		real_t       sma, smb, smc;
;  173		const real_t real2 = os_Int24ToReal(2);
.LINE 173

	LD	BC,2
	PUSH	BC
	PEA	IX+-72
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-45
	LD	BC,9
	LDIR	
;  174	
;  175		num = os_RealAdd(&triangle.a, &triangle.b);
.LINE 175

	LD	BC,_triangle+36
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-81
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  176		num = os_RealAdd(&num, &triangle.c);
.LINE 176

	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-18
	PEA	IX+-90
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  177	
;  178		// Half of perimeter
;  179		s = os_RealDiv(&num, &real2);
.LINE 179

	PEA	IX+-45
	PEA	IX+-18
	PEA	IX+-99
	CALL	_os_RealDiv
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  180	
;  181		triangle.perimeter = os_RealMul(&s, &real2);
.LINE 181

	PEA	IX+-45
	PEA	IX+-9
	PEA	IX+-108
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+63
	LD	BC,9
	LDIR	
;  182		dbg_sprintf(dbgout, "[Trig] Solved for perimeter\n");
.LINE 182

	LD	BC,L__43
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  183	
;  184		sma = os_RealSub(&s, &triangle.a);
.LINE 184

	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-117
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  185		smb = os_RealSub(&s, &triangle.b);
.LINE 185

	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-126
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-63
	LD	BC,9
	LDIR	
;  186		smc = os_RealSub(&s, &triangle.c);
.LINE 186

	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-135
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-54
	LD	BC,9
	LDIR	
;  187	
;  188		sma = os_RealMul(&s, &sma);
.LINE 188

	PEA	IX+-36
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-144
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  189	
;  190		root = os_RealMul(&sma, &smb);
.LINE 190

	PEA	IX+-63
	PEA	IX+-36
	LD	HL,IX
	LD	BC,-153
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;  191		root = os_RealMul(&root, &smc);
.LINE 191

	PEA	IX+-54
	PEA	IX+-27
	LD	HL,IX
	LD	BC,-162
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;  192	
;  193		triangle.area = os_RealSqrt(&root);
.LINE 193

	PEA	IX+-27
	LD	HL,IX
	LD	BC,-171
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSqrt
	POP	BC
	POP	BC
	LD	DE,_triangle+54
	LD	BC,9
	LDIR	
;  194		dbg_sprintf(dbgout, "[Trig] Solved for area\n");
.LINE 194

	LD	BC,L__44
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  195	}
.LINE 195

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_HeronsFormula ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSqrt                        IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_RealMul                         IMPORT  -----   function
;_os_RealDiv                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;smb                                  IX-63      9   variable
;smc                                  IX-54      9   variable
;real2                                IX-45      9   variable
;sma                                  IX-36      9   variable
;root                                 IX-27      9   variable
;num                                  IX-18      9   variable
;s                                     IX-9      9   variable


; Stack Frame Size: 177 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_HeronsFormula",195,"_trig_HeronsFormula"
	SEGMENT STRSECT
L__43:
	DB	"[Trig] Solved for perimeter"
	DB	10,0
L__44:
	DB	"[Trig] Solved for area"
	DB	10,0
	SEGMENT CODE
;  196	
;  197	static void trig_SolveSSS()
;  198	{
_trig_SolveSSS:
.DEFINE "_trig_SolveSSS"

.VALUE _trig_SolveSSS

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveSSS",198,"_trig_SolveSSS"

.LINE 198

.DEFINE "buf"

.CLASS 65

.VALUE -12

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -21

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-69
	LD	SP,HL
;  199		real_t       buf;
;  200		const real_t real180 = os_Int24ToReal(180);
.LINE 200

	LD	BC,180
	PUSH	BC
	PEA	IX+-30
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-21
	LD	BC,9
	LDIR	
;  201		dbg_sprintf(dbgout, "[Trig] Solving SSS triangle\n");
.LINE 201

	LD	DE,L__46
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	LD	(IX+-69),BC
	CALL	_sprintf
	LD	BC,(IX+-69)
	POP	DE
	POP	DE
;  202		triangle.A   = loc_Angle_x(triangle.b, triangle.c, triangle.a);
.LINE 202

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PEA	IX+-39
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  203		trigstatus.A = true;
.LINE 203

	LD	A,1
	LD	(_trigstatus+3),A
;  204		dbg_sprintf(dbgout, "[Trig] Solved for angle A\n");
.LINE 204

	LD	DE,L__47
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	LD	(IX+-69),BC
	CALL	_sprintf
	LD	BC,(IX+-69)
	POP	DE
	POP	DE
;  205	
;  206		triangle.B   = loc_Angle_x(triangle.c, triangle.a, triangle.b);
.LINE 206

	LD	DE,_triangle+9
	LD	(IX+-3),DE
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PEA	IX+-48
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,(IX+-3)
	LD	BC,9
	LDIR	
;  207		trigstatus.B = true;
.LINE 207

	LD	A,1
	LD	(_trigstatus+4),A
;  208		dbg_sprintf(dbgout, "[Trig] Solved for angle B\n");
.LINE 208

	LD	BC,L__48
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  209	
;  210		buf = os_RealAdd(&triangle.A, &triangle.B);
.LINE 210

	LD	BC,(IX+-3)
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-57
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  211		triangle.C   = os_RealSub(&real180, &buf);
.LINE 211

	PEA	IX+-12
	PEA	IX+-21
	PEA	IX+-66
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  212		trigstatus.C = true;
.LINE 212

	LD	A,1
	LD	(_trigstatus+5),A
;  213		dbg_sprintf(dbgout, "[Trig] Solved for angle C\n");
.LINE 213

	LD	BC,L__49
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  214	
;  215		trig_HeronsFormula();
.LINE 215

	CALL	_trig_HeronsFormula
;  216		trig_Sync();
.LINE 216

	CALL	_trig_Sync
;  217	}
.LINE 217

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveSSS ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_HeronsFormula                 STATIC  -----   function
;_os_RealSub                         IMPORT  -----   function
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_loc_Angle_x                        IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-21      9   variable
;buf                                  IX-12      9   variable
;G_0                                   IX-3      3   variable


; Stack Frame Size: 75 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveSSS",217,"_trig_SolveSSS"
	SEGMENT STRSECT
L__46:
	DB	"[Trig] Solving SSS triangle"
	DB	10,0
L__47:
	DB	"[Trig] Solved for angle A"
	DB	10,0
L__48:
	DB	"[Trig] Solved for angle B"
	DB	10,0
L__49:
	DB	"[Trig] Solved for angle C"
	DB	10,0
	SEGMENT CODE
;  218	
;  219	static void trig_SolveMissingAngle()
;  220	{
_trig_SolveMissingAngle:
.DEFINE "_trig_SolveMissingAngle"

.VALUE _trig_SolveMissingAngle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveMissingAngle",220,"_trig_SolveMissingAngle"

.LINE 220

.DEFINE "buf"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-81
	LD	SP,HL
;  221		const real_t real180 = os_Int24ToReal(180);
.LINE 221

	LD	BC,180
	PUSH	BC
	PEA	IX+-27
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  222		real_t       buf;
;  223	
;  224		if (trigstatus.A && trigstatus.B)
.LINE 224

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_53
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_53
;  225		{
;  226			buf = os_RealAdd(&triangle.A, &triangle.B);
.LINE 226

	LD	BC,_triangle+9
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-36
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  227			triangle.C   = os_RealSub(&real180, &buf);
.LINE 227

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-45
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  228			trigstatus.C = true;
.LINE 228

	LD	A,1
	LD	(_trigstatus+5),A
;  229		}
;  230		else if (trigstatus.A && trigstatus.C)
.LINE 230

	JR	L_54
L_53:
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_51
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_51
;  231		{
;  232			buf = os_RealAdd(&triangle.A, &triangle.C);
.LINE 232

	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-54
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  233			triangle.B   = os_RealSub(&real180, &buf);
.LINE 233

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-63
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  234			trigstatus.B = true;
.LINE 234

	LD	A,1
	LD	(_trigstatus+4),A
;  235		}
;  236		else if (trigstatus.B && trigstatus.C)
.LINE 236

	JR	L_54
L_51:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_54
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_54
;  237		{
;  238			buf = os_RealAdd(&triangle.B, &triangle.C);
.LINE 238

	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-72
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  239			triangle.A   = os_RealSub(&real180, &buf);
.LINE 239

	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-81
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  240			trigstatus.A = true;
.LINE 240

	LD	A,1
	LD	(_trigstatus+3),A
;  241		}
;  242	}
L_54:
.LINE 242

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveMissingAngle ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSub                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-18      9   variable
;buf                                   IX-9      9   variable


; Stack Frame Size: 87 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveMissingAngle",242,"_trig_SolveMissingAngle"
;  243	
;  244	static void trig_TruncateLabels(int len)
;  245	{
_trig_TruncateLabels:
.DEFINE "_trig_TruncateLabels"

.VALUE _trig_TruncateLabels

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_TruncateLabels",245,"_trig_TruncateLabels"

.LINE 245

.DEFINE "len"

.CLASS 65

.VALUE 6

.TYPE 4

.ENDEF

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  246		int i = 0;
.LINE 246

	LD	BC,0
	LD	(IX+-3),BC
;  247		for (; i < 3; i++)
.LINE 247

	JR	L_58
L_56:
;  248		{
;  249			lib_StrCut(xangles[i].label, len, 20 - len);
.LINE 249

	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
;  250			lib_StrCut(xsides[i].label, len, 20 - len);
.LINE 250

	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  251		}
L_58:
.LINE 251

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_56
;  252	}
.LINE 252

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_TruncateLabels ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_lib_StrCut                         IMPORT  -----   function
;i                                     IX-3      3   variable
;len                                   IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_TruncateLabels",252,"_trig_TruncateLabels"
;  253	
;  254	static void trig_CheckSolvability()
;  255	{
_trig_CheckSolvability:
.DEFINE "_trig_CheckSolvability"

.VALUE _trig_CheckSolvability

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_CheckSolvability",255,"_trig_CheckSolvability"

.LINE 255

.DEFINE "rbuf"

.CLASS 65

.VALUE -9

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "real180"

.CLASS 65

.VALUE -18

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "cbuf"

.CLASS 65

.VALUE -38

.DIM 20

.TYPE 98

.ENDEF

.DEFINE "cbuf2"

.CLASS 65

.VALUE -58

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LD	HL,-313
	ADD	HL,SP
	LD	SP,HL
;  256		real_t       rbuf;
;  257		char         cbuf[20];
;  258		char         cbuf2[20];
;  259		const real_t real180 = os_Int24ToReal(180);
.LINE 259

	LD	BC,180
	PUSH	BC
	PEA	IX+-67
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  260	
;  261		dbg_sprintf(dbgout, "[Trig] Checking solvability...\n");
.LINE 261

	LD	DE,L__60
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  262		ui_DispData();
.LINE 262

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_ui_DispData
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  263	
;  264		// Automatically solve for the third angle when possible
;  265		trig_SolveMissingAngle();
.LINE 265

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  266		trig_Sync();
.LINE 266

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_Sync
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  267	
;  268	
;  269		if (trigstatus.complete)
.LINE 269

	LD	A,(_trigstatus+6)
	OR	A,A
	JR	NZ,L_113
;  270		{
;  271			return;
.LINE 271

;  272		}
.LINE 272

;  273	
;  274	
;  275		// SSS
;  276		if (trigstatus.a && trigstatus.b && trigstatus.c)
.LINE 276

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_76
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_76
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_76
;  277		{
;  278			dbg_sprintf(dbgout, "SSS detected [%s, %s, %s]\n", side_a.label, side_b.label, side_c.label);
.LINE 278

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	BC,_xsides+6
	PUSH	BC
	LD	BC,L__65
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  279			gfx_Clear(&ui_Type);
.LINE 279

	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  280			sp_SetLabel(&ui_Type, lbl_SSS);
.LINE 280

	LD	BC,_lbl_SSS
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  281			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 281

	LD	BC,3
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_PrintColor
	POP	BC
	POP	BC
;  282	
;  283			trig_SolveSSS();
.LINE 283

	CALL	_trig_SolveSSS
;  284			trigstatus.complete = true;
.LINE 284

	LD	A,1
	LD	(_trigstatus+6),A
;  285			return;
.LINE 285

	JR	L_113
;  286		}
L_76:
.LINE 286

;  287	
;  288		// AAS
;  289		// "AAS" is when we know two angles and one side (which is not between the angles).
;  290		if (trigstatus.A && trigstatus.C && trigstatus.c)
.LINE 290

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_75
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_75
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_75
;  291		{
;  292			dbg_sprintf(dbgout, "AAS_1 detected [%s, %s, %s]\n", angle_A.label, angle_C.label, side_c.label);
.LINE 292

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__69
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  293			gfx_Clear(&ui_Type);
.LINE 293

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  294			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 294

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  295			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 295

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  296	
;  297			trig_SolveMissingAngle();
.LINE 297

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  298			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 298

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-76
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  299			trigstatus.a = true;
.LINE 299

	LD	A,1
	LD	(_trigstatus),A
;  300			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
.LINE 300

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PEA	IX+-85
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  301			trigstatus.b = true;
.LINE 301

	LD	A,1
	LD	(_trigstatus+1),A
;  302	
;  303			trig_Sync();
.LINE 303

	CALL	_trig_Sync
;  304			trigstatus.complete = true;
.LINE 304

	LD	A,1
	LD	(_trigstatus+6),A
;  305			trig_HeronsFormula();
.LINE 305

	CALL	_trig_HeronsFormula
;  306			ui_DispData();
.LINE 306

	CALL	_ui_DispData
;  307			return;
.LINE 307

	JR	L_113
;  308		}
;  309		else if (trigstatus.B && trigstatus.C && trigstatus.b)
L_75:
.LINE 309

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_73
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_73
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_73
;  310		{
;  311			dbg_sprintf(dbgout, "AAS_2 detected [%s, %s, %s]\n", angle_B.label, angle_C.label, side_b.label);
.LINE 311

	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__73
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  312			gfx_Clear(&ui_Type);
.LINE 312

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  313			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 313

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  314			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 314

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  315	
;  316			trig_SolveMissingAngle();
.LINE 316

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  317	
;  318			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 318

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PEA	IX+-94
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  319			trigstatus.c = true;
.LINE 319

	LD	A,1
	LD	(_trigstatus+2),A
;  320			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 320

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-103
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  321			trigstatus.a = true;
.LINE 321

	LD	A,1
	LD	(_trigstatus),A
;  322	
;  323			//dbg_printTriangle();
;  324			trig_Sync();
.LINE 324

	CALL	_trig_Sync
;  325			trigstatus.complete = true;
.LINE 325

	LD	A,1
	LD	(_trigstatus+6),A
;  326			trig_HeronsFormula();
.LINE 326

	CALL	_trig_HeronsFormula
;  327			ui_DispData();
.LINE 327

	CALL	_ui_DispData
;  328			return;
.LINE 328

	JR	L_113
;  329		}
;  330		else if (trigstatus.A && trigstatus.B && trigstatus.b)
L_73:
.LINE 330

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_88
;  331		{
;  332			dbg_sprintf(dbgout, "AAS_3 detected [%s, %s, %s]\n", angle_A.label, angle_B.label, side_b.label);
.LINE 332

	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__77
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  333			gfx_Clear(&ui_Type);
.LINE 333

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  334			sp_SetLabel(&ui_Type, lbl_AAS);
.LINE 334

	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  335			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 335

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  336	
;  337			trig_SolveMissingAngle();
.LINE 337

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  338			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 338

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PEA	IX+-112
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  339			trigstatus.c = true;
.LINE 339

	LD	A,1
	LD	(_trigstatus+2),A
;  340			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
.LINE 340

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PEA	IX+-121
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  341			trigstatus.a = true;
.LINE 341

	LD	A,1
	LD	(_trigstatus),A
;  342	
;  343			trig_Sync();
.LINE 343

	CALL	_trig_Sync
;  344			trigstatus.complete = true;
.LINE 344

	LD	A,1
	LD	(_trigstatus+6),A
;  345			trig_HeronsFormula();
.LINE 345

	CALL	_trig_HeronsFormula
;  346			ui_DispData();
.LINE 346

	CALL	_ui_DispData
;  347			return;
.LINE 347

	JR	L_113
;  348		}
L_88:
.LINE 348

;  349	
;  350		// ASA
;  351		// "ASA" is when we know two angles and a side between the angles.
;  352		if (trigstatus.A && trigstatus.c && trigstatus.B)
.LINE 352

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_87
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_87
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_87
;  353		{
;  354			dbg_sprintf(dbgout, "ASA_1 detected [%s, %s, %s]\n", angle_A.label, side_c.label, angle_B.label);
.LINE 354

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__81
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  355			gfx_Clear(&ui_Type);
.LINE 355

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  356			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 356

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  357			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 357

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  358	
;  359			trig_SolveMissingAngle();
.LINE 359

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  360			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 360

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-130
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  361			trigstatus.a = true;
.LINE 361

	LD	A,1
	LD	(_trigstatus),A
;  362			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
.LINE 362

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-139
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  363			trigstatus.b = true;
.LINE 363

	LD	A,1
	LD	(_trigstatus+1),A
;  364	
;  365			trig_Sync();
.LINE 365

	CALL	_trig_Sync
;  366			trigstatus.complete = true;
.LINE 366

	LD	A,1
	LD	(_trigstatus+6),A
;  367			trig_HeronsFormula();
.LINE 367

	CALL	_trig_HeronsFormula
;  368			ui_DispData();
.LINE 368

	CALL	_ui_DispData
;  369			return;
.LINE 369

	JR	L_113
;  370		}
;  371		else if (trigstatus.A && trigstatus.b && trigstatus.C) //todo: verify
L_87:
.LINE 371

	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_85
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_85
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_85
;  372		{
;  373			dbg_sprintf(dbgout, "ASA_2 detected [%s, %s, %s]\n", angle_A.label, side_b.label, angle_C.label);
.LINE 373

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	DE,L__85
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  374			gfx_Clear(&ui_Type);
.LINE 374

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  375			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 375

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  376			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 376

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  377	
;  378			trig_SolveMissingAngle();
.LINE 378

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  379			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
.LINE 379

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-148
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  380			trigstatus.a = true;
.LINE 380

	LD	A,1
	LD	(_trigstatus),A
;  381			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 381

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-157
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  382			trigstatus.c = true;
.LINE 382

	LD	A,1
	LD	(_trigstatus+2),A
;  383	
;  384			trig_Sync();
.LINE 384

	CALL	_trig_Sync
;  385			trigstatus.complete = true;
.LINE 385

	LD	A,1
	LD	(_trigstatus+6),A
;  386			trig_HeronsFormula();
.LINE 386

	CALL	_trig_HeronsFormula
;  387			ui_DispData();
.LINE 387

	CALL	_ui_DispData
;  388			return;
.LINE 388

	JR	L_113
;  389		}
;  390		else if (trigstatus.B && trigstatus.a && trigstatus.C) //todo: verify
L_85:
.LINE 390

	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_100
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_100
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_100
;  391		{
;  392			dbg_sprintf(dbgout, "ASA_3 detected [%s, %s, %s]\n", angle_B.label, side_a.label, angle_C.label);
.LINE 392

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__89
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  393			gfx_Clear(&ui_Type);
.LINE 393

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  394			sp_SetLabel(&ui_Type, lbl_ASA);
.LINE 394

	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  395			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 395

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  396	
;  397			trig_SolveMissingAngle();
.LINE 397

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  398			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
.LINE 398

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-166
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  399			trigstatus.b = true;
.LINE 399

	LD	A,1
	LD	(_trigstatus+1),A
;  400			triangle.c   = los_Side_x(triangle.C, triangle.a, triangle.A);
.LINE 400

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-175
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  401			trigstatus.c = true;
.LINE 401

	LD	A,1
	LD	(_trigstatus+2),A
;  402	
;  403			trig_Sync();
.LINE 403

	CALL	_trig_Sync
;  404			trigstatus.complete = true;
.LINE 404

	LD	A,1
	LD	(_trigstatus+6),A
;  405			trig_HeronsFormula();
.LINE 405

	CALL	_trig_HeronsFormula
;  406			ui_DispData();
.LINE 406

	CALL	_ui_DispData
;  407			return;
.LINE 407

	JR	L_113
;  408		}
L_100:
.LINE 408

;  409	
;  410		// SAS
;  411		// "SAS" is when we know two sides and the angle between them.
;  412		if (trigstatus.b && trigstatus.A && trigstatus.c)
.LINE 412

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_99
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_99
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_99
;  413		{
;  414			dbg_sprintf(dbgout, "SAS_1 detected [%s, %s, %s]\n", side_b.label, angle_A.label, side_c.label);
.LINE 414

	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xangles+6
	PUSH	DE
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__93
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  415			gfx_Clear(&ui_Type);
.LINE 415

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  416			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 416

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  417			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 417

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  418	
;  419			triangle.a   = loc_Side_x(triangle.b, triangle.c, triangle.A);
.LINE 419

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-184
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  420			trigstatus.a = true;
.LINE 420

	LD	A,1
	LD	(_trigstatus),A
;  421	
;  422			// todo: need to find the smaller of the two angles
;  423			triangle.B   = los_Angle_x(triangle.b, triangle.A, triangle.a);
.LINE 423

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-193
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  424			trigstatus.B = true;
.LINE 424

	LD	A,1
	LD	(_trigstatus+4),A
;  425	
;  426			trig_SolveMissingAngle();
.LINE 426

	CALL	_trig_SolveMissingAngle
;  427	
;  428			trigstatus.complete = true;
.LINE 428

	LD	A,1
	LD	(_trigstatus+6),A
;  429			trig_Sync();
.LINE 429

	CALL	_trig_Sync
;  430			trig_HeronsFormula();
.LINE 430

	CALL	_trig_HeronsFormula
;  431			ui_DispData();
.LINE 431

	CALL	_ui_DispData
;  432			return;
.LINE 432

	JR	L_113
;  433		}
;  434		else if (trigstatus.c && trigstatus.B && trigstatus.a) //todo: verify
L_99:
.LINE 434

	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_97
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_97
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_97
;  435		{
;  436			dbg_sprintf(dbgout, "SAS_2 detected [%s, %s, %s]\n", side_c.label, angle_B.label, side_a.label);
.LINE 436

	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,L__97
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  437			gfx_Clear(&ui_Type);
.LINE 437

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  438			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 438

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  439			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 439

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  440	
;  441			triangle.b   = loc_Side_x(triangle.a, triangle.c, triangle.B);
.LINE 441

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-202
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  442			trigstatus.b = true;
.LINE 442

	LD	A,1
	LD	(_trigstatus+1),A
;  443	
;  444			// todo: need to find the smaller of the two angles
;  445			triangle.A   = los_Angle_x(triangle.a, triangle.B, triangle.b);
.LINE 445

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-211
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  446			trigstatus.A = true;
.LINE 446

	LD	A,1
	LD	(_trigstatus+3),A
;  447	
;  448			trig_SolveMissingAngle();
.LINE 448

	CALL	_trig_SolveMissingAngle
;  449			trig_Sync();
.LINE 449

	CALL	_trig_Sync
;  450			trigstatus.complete = true;
.LINE 450

	LD	A,1
	LD	(_trigstatus+6),A
;  451			trig_HeronsFormula();
.LINE 451

	CALL	_trig_HeronsFormula
;  452			ui_DispData();
.LINE 452

	CALL	_ui_DispData
;  453			return;
.LINE 453

	JR	L_113
;  454		}
;  455		else if (trigstatus.b && trigstatus.C && trigstatus.a)
L_97:
.LINE 455

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_112
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_112
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_112
;  456		{
;  457			dbg_sprintf(dbgout, "SAS_3 detected [%s, %s, %s]\n", side_b.label, angle_C.label, side_a.label);
.LINE 457

	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__101
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  458			gfx_Clear(&ui_Type);
.LINE 458

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  459			sp_SetLabel(&ui_Type, lbl_SAS);
.LINE 459

	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  460			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 460

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  461	
;  462			triangle.c   = loc_Side_x(triangle.a, triangle.b, triangle.C);
.LINE 462

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-220
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  463			trigstatus.c = true;
.LINE 463

	LD	A,1
	LD	(_trigstatus+2),A
;  464	
;  465			// todo: need to find the smaller of the two angles
;  466			triangle.A   = los_Angle_x(triangle.a, triangle.C, triangle.c);
.LINE 466

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-229
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  467			trigstatus.A = true;
.LINE 467

	LD	A,1
	LD	(_trigstatus+3),A
;  468	
;  469			trig_SolveMissingAngle();
.LINE 469

	CALL	_trig_SolveMissingAngle
;  470			trig_Sync();
.LINE 470

	CALL	_trig_Sync
;  471			trigstatus.complete = true;
.LINE 471

	LD	A,1
	LD	(_trigstatus+6),A
;  472			trig_HeronsFormula();
.LINE 472

	CALL	_trig_HeronsFormula
;  473			ui_DispData();
.LINE 473

	CALL	_ui_DispData
;  474			return;
.LINE 474

	JR	L_113
;  475		}
L_112:
.LINE 475

;  476	
;  477		// SSA
;  478		// "SSA" is when we know two sides and an angle that is not the angle between the sides.
;  479		// todo: check if it has multiple answers
;  480		if (trigstatus.b && trigstatus.c && trigstatus.B)
.LINE 480

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_111
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_111
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_111
;  481		{
;  482			dbg_sprintf(dbgout, "SSA_1 detected [%s, %s, %s]\n", side_b.label, side_c.label, angle_B.label);
.LINE 482

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__105
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  483			gfx_Clear(&ui_Type);
.LINE 483

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  484			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 484

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  485			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 485

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  486			trigstatus.isSSA = true;
.LINE 486

	LD	A,1
	LD	(_trigstatus+7),A
;  487	
;  488			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
.LINE 488

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-238
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  489			trigstatus.C = true;
.LINE 489

	LD	A,1
	LD	(_trigstatus+5),A
;  490	
;  491			trig_SolveMissingAngle();
.LINE 491

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  492	
;  493			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
.LINE 493

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-247
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  494			trigstatus.a = true;
.LINE 494

	LD	A,1
	LD	(_trigstatus),A
;  495	
;  496			// other possible answer for C
;  497			rbuf = os_RealSub(&real180, &triangle.C);
.LINE 497

	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-256
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  498			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 498

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  499	
;  500			sprintf(cbuf2, "*C = %s", cbuf);
.LINE 500

	PEA	IX+-38
	LD	BC,L__106
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  501			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 501

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  502			gfx_Clear(&data_X_ex);
.LINE 502

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  503			gfx_Print(&data_X_ex);
.LINE 503

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  504			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 504

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__107
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  505			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
.LINE 505

	PEA	IX+-38
	LD	BC,L__108
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  506	
;  507			trig_Sync();
.LINE 507

	CALL	_trig_Sync
;  508			trigstatus.complete = true;
.LINE 508

	LD	A,1
	LD	(_trigstatus+6),A
;  509			trig_HeronsFormula();
.LINE 509

	CALL	_trig_HeronsFormula
;  510			ui_DispData();
.LINE 510

	CALL	_ui_DispData
;  511			return;
.LINE 511

	JR	L_113
;  512		}
;  513		else if (trigstatus.b && trigstatus.a && trigstatus.B) //todo: verify
L_111:
.LINE 513

	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_109
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_109
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_109
;  514		{
;  515			dbg_sprintf(dbgout, "SSA_2 detected [%s, %s, %s]\n", side_b.label, side_a.label, angle_B.label);
.LINE 515

	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	LD	DE,L__112
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  516			gfx_Clear(&ui_Type);
.LINE 516

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  517			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 517

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  518			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 518

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  519			trigstatus.isSSA = true;
.LINE 519

	LD	A,1
	LD	(_trigstatus+7),A
;  520	
;  521			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
.LINE 521

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-265
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  522			trigstatus.C = true;
.LINE 522

	LD	A,1
	LD	(_trigstatus+5),A
;  523	
;  524			trig_SolveMissingAngle();
.LINE 524

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  525	
;  526			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
.LINE 526

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-274
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  527			trigstatus.c = true;
.LINE 527

	LD	A,1
	LD	(_trigstatus+2),A
;  528	
;  529			// other possible answer for C
;  530			rbuf = os_RealSub(&real180, &triangle.C);
.LINE 530

	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-283
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  531			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 531

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  532	
;  533			sprintf(cbuf2, "*C = %s", cbuf);
.LINE 533

	PEA	IX+-38
	LD	BC,L__113
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  534			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 534

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  535			gfx_Clear(&data_X_ex);
.LINE 535

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  536			gfx_Print(&data_X_ex);
.LINE 536

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  537			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 537

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__114
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  538			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
.LINE 538

	PEA	IX+-38
	LD	BC,L__115
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  539	
;  540			trig_Sync();
.LINE 540

	CALL	_trig_Sync
;  541			trigstatus.complete = true;
.LINE 541

	LD	A,1
	LD	(_trigstatus+6),A
;  542			trig_HeronsFormula();
.LINE 542

	CALL	_trig_HeronsFormula
;  543			ui_DispData();
.LINE 543

	CALL	_ui_DispData
;  544			return;
.LINE 544

	JR	L_113
;  545		}
;  546		else if (trigstatus.a && trigstatus.c && trigstatus.C) //todo: verify
L_109:
.LINE 546

	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_113
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_113
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_113
;  547		{
;  548			dbg_sprintf(dbgout, "SSA_3 detected [%s, %s, %s]\n", side_a.label, side_c.label, angle_C.label);
.LINE 548

	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	LD	DE,_xsides+6
	PUSH	DE
	LD	DE,L__119
	PUSH	DE
	LD	DE,16449536
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sprintf
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;  549			gfx_Clear(&ui_Type);
.LINE 549

	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_Clear
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  550			sp_SetLabel(&ui_Type, lbl_SSA);
.LINE 550

	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_sp_SetLabel
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  551			gfx_PrintColor(&ui_Type, gfx_green);
.LINE 551

	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_gfx_PrintColor
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  552			trigstatus.isSSA = true;
.LINE 552

	LD	A,1
	LD	(_trigstatus+7),A
;  553	
;  554			triangle.B   = los_Angle_x(triangle.a, triangle.C, triangle.c);
.LINE 554

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-292
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  555			trigstatus.B = true;
.LINE 555

	LD	A,1
	LD	(_trigstatus+4),A
;  556	
;  557			trig_SolveMissingAngle();
.LINE 557

	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-313
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_trig_SolveMissingAngle
	LD	BC,-313
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  558	
;  559			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
.LINE 559

	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-301
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  560			trigstatus.b = true;
.LINE 560

	LD	A,1
	LD	(_trigstatus+1),A
;  561	
;  562			// other possible answer for B
;  563			rbuf = os_RealSub(&real180, &triangle.B);
.LINE 563

	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-18
	LD	HL,IX
	LD	BC,-310
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  564			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
.LINE 564

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-38
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  565	
;  566			sprintf(cbuf2, "*B = %s", cbuf);
.LINE 566

	PEA	IX+-38
	LD	BC,L__120
	PUSH	BC
	PEA	IX+-58
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  567			sp_SetLabel(&data_X_ex, cbuf2);
.LINE 567

	PEA	IX+-58
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  568			gfx_Clear(&data_X_ex);
.LINE 568

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  569			gfx_Print(&data_X_ex);
.LINE 569

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  570			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
.LINE 570

	LD	BC,_data_X_ex+6
	PUSH	BC
	LD	BC,L__121
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  571			dbg_sprintf(dbgout, "Other possible solution for B = %s\n", cbuf);
.LINE 571

	PEA	IX+-38
	LD	BC,L__122
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  572	
;  573			trig_Sync();
.LINE 573

	CALL	_trig_Sync
;  574			trigstatus.complete = true;
.LINE 574

	LD	A,1
	LD	(_trigstatus+6),A
;  575			trig_HeronsFormula();
.LINE 575

	CALL	_trig_HeronsFormula
;  576			ui_DispData();
.LINE 576

	CALL	_ui_DispData
;  577			return;
;  578		}
;  579	}
L_113:
.LINE 579

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_CheckSolvability ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Print                          IMPORT  -----   function
;_data_X_ex                          STATIC     26   variable
;_os_RealToStr                       IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_lbl_SSA                            STATIC      8   variable
;_los_Angle_x                        IMPORT  -----   function
;_loc_Side_x                         IMPORT  -----   function
;_lbl_SAS                            STATIC      4   variable
;_lbl_ASA                            STATIC      4   variable
;_trig_HeronsFormula                 STATIC  -----   function
;_triangle                           STATIC     72   variable
;_los_Side_x                         IMPORT  -----   function
;_lbl_AAS                            STATIC      4   variable
;_xangles                            STATIC     78   variable
;_trig_SolveSSS                      STATIC  -----   function
;_gfx_PrintColor                     IMPORT  -----   function
;_lbl_SSS                            STATIC      4   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Type                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_trigstatus                         STATIC      8   variable
;_trig_Sync                          STATIC  -----   function
;_trig_SolveMissingAngle             STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;cbuf2                                IX-58     20   variable
;cbuf                                 IX-38     20   variable
;real180                              IX-18      9   variable
;rbuf                                  IX-9      9   variable


; Stack Frame Size: 319 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_CheckSolvability",579,"_trig_CheckSolvability"
	SEGMENT STRSECT
L__60:
	DB	"[Trig] Checking solvability..."
	DB	10,0
L__65:
	DB	"SSS detected [%s, %s, %s]"
	DB	10,0
L__69:
	DB	"AAS_1 detected [%s, %s, %s]"
	DB	10,0
L__73:
	DB	"AAS_2 detected [%s, %s, %s]"
	DB	10,0
L__77:
	DB	"AAS_3 detected [%s, %s, %s]"
	DB	10,0
L__81:
	DB	"ASA_1 detected [%s, %s, %s]"
	DB	10,0
L__85:
	DB	"ASA_2 detected [%s, %s, %s]"
	DB	10,0
L__89:
	DB	"ASA_3 detected [%s, %s, %s]"
	DB	10,0
L__93:
	DB	"SAS_1 detected [%s, %s, %s]"
	DB	10,0
L__97:
	DB	"SAS_2 detected [%s, %s, %s]"
	DB	10,0
L__101:
	DB	"SAS_3 detected [%s, %s, %s]"
	DB	10,0
L__105:
	DB	"SSA_1 detected [%s, %s, %s]"
	DB	10,0
L__106:
	DB	"*C = %s"
	DB	0
L__107:
	DB	"data_X_ex = %s"
	DB	10,0
L__108:
	DB	"Other possible solution for C = %s"
	DB	10,0
L__112:
	DB	"SSA_2 detected [%s, %s, %s]"
	DB	10,0
L__113:
	DB	"*C = %s"
	DB	0
L__114:
	DB	"data_X_ex = %s"
	DB	10,0
L__115:
	DB	"Other possible solution for C = %s"
	DB	10,0
L__119:
	DB	"SSA_3 detected [%s, %s, %s]"
	DB	10,0
L__120:
	DB	"*B = %s"
	DB	0
L__121:
	DB	"data_X_ex = %s"
	DB	10,0
L__122:
	DB	"Other possible solution for B = %s"
	DB	10,0
	SEGMENT CODE
;  580	
;  581	static void ui_ClearMeasurements()
;  582	{
_ui_ClearMeasurements:
.DEFINE "_ui_ClearMeasurements"

.VALUE _ui_ClearMeasurements

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_ClearMeasurements",582,"_ui_ClearMeasurements"

.LINE 582

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  583		int i = 0;
.LINE 583

	LD	BC,0
	LD	(IX+-3),BC
;  584		for (; i < 2; i++)
.LINE 584

	JR	L_117
L_115:
;  585		{
;  586			gfx_Clear(&xmeasureData[i]);
.LINE 586

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  587		}
L_117:
.LINE 587

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_115
;  588		dbg_sprintf(dbgout, "[UI] Cleared measurements\n");
.LINE 588

	LD	BC,L__125
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  589	}
.LINE 589

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_gfx_Clear                          IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_ClearMeasurements",589,"_ui_ClearMeasurements"
	SEGMENT STRSECT
L__125:
	DB	"[UI] Cleared measurements"
	DB	10,0
	SEGMENT CODE
;  590	
;  591	static void ui_ClearAngleSideData()
;  592	{
_ui_ClearAngleSideData:
.DEFINE "_ui_ClearAngleSideData"

.VALUE _ui_ClearAngleSideData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_ClearAngleSideData",592,"_ui_ClearAngleSideData"

.LINE 592

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;  593		int i = 0;
.LINE 593

	LD	BC,0
	LD	(IX+-3),BC
;  594		for (; i < 3; i++)
.LINE 594

	JR	L_123
L_121:
;  595		{
;  596			gfx_Clear(&xsidesData[i]);
.LINE 596

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  597			gfx_Clear(&xanglesData[i]);
.LINE 597

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  598		}
L_123:
.LINE 598

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_121
;  599		dbg_sprintf(dbgout, "[UI] Cleared angle and side data\n");
.LINE 599

	LD	BC,L__128
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  600	}
.LINE 600

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_ClearAngleSideData",600,"_ui_ClearAngleSideData"
	SEGMENT STRSECT
L__128:
	DB	"[UI] Cleared angle and side data"
	DB	10,0
	SEGMENT CODE
;  601	
;  602	static void trig_SelectSide()
;  603	{
_trig_SelectSide:
.DEFINE "_trig_SelectSide"

.VALUE _trig_SelectSide

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SelectSide",603,"_trig_SelectSide"

.LINE 603

.DEFINE "currentSelection"

.CLASS 65

.VALUE -3

.TAG "NONAME16"

.TYPE 40

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-52
	LD	SP,HL
;  604		uint8_t key;
;  605		superpoint_t* currentSelection = &side_b; // start at b
.LINE 605

	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  606		gfx_HighlightPoint(&side_b);
.LINE 606

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  607		RECURSE:
.LINE 607

;  608		while ((key = os_GetCSC()) != sk_Enter)
.LINE 608

	JR	L_156
L_157:
;  609		{
;  610			if (key == sk_Clear)
.LINE 610

	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_165
;  611			{
;  612				return;
.LINE 612

;  613			}
.LINE 613

;  614	
;  615			if (key == sk_Zoom)
.LINE 615

	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_134
;  616			{
;  617				if (ui_bDispMeasurements)
.LINE 617

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_129
;  618				{
;  619					ui_bDispMeasurements = false;
.LINE 619

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  620					ui_ClearMeasurements();
.LINE 620

	CALL	_ui_ClearMeasurements
;  621				}
;  622				else
.LINE 622

	JR	L_130
L_129:
;  623				{
;  624					ui_bDispMeasurements = true;
.LINE 624

	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  625					ui_ClearAngleSideData();
.LINE 625

	CALL	_ui_ClearAngleSideData
;  626				}
L_130:
.LINE 626

;  627				ui_DispData();
.LINE 627

	CALL	_ui_DispData
;  628			}
L_134:
.LINE 628

;  629	
;  630			if (key == sk_Trace)
.LINE 630

	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_136
;  631			{
;  632				trig_Reset();
.LINE 632

	CALL	_trig_Reset
;  633				currentSelection = &side_b;
.LINE 633

	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  634				gfx_HighlightPoint(&side_b);
.LINE 634

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  635			}
L_136:
.LINE 635

;  636	
;  637			if (key == sk_Graph)
.LINE 637

	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_139
;  638			{
;  639				gfx_Clear(&ui_Mode);
.LINE 639

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  640				sp_SetLabel(&ui_Mode, lbl_AngleMode);
.LINE 640

	LD	BC,_lbl_AngleMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  641				gfx_Print(&ui_Mode);
.LINE 641

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  642				gfx_ClearHighlight(currentSelection);
.LINE 642

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  643				trig_SelectAngle();
.LINE 643

	CALL	_trig_SelectAngle
;  644				return;
.LINE 644

	JR	L_165
;  645			}
L_139:
.LINE 645

;  646	
;  647			/* bbb -> aaa */
;  648			if (key == sk_Right && PointEq(*currentSelection, side_b))
.LINE 648

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_142
	LD	BC,_xsides+26
	LD	(IX+-16),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_142
;  649			{
;  650				gfx_SetFocus(&currentSelection, &side_b, &side_a);
.LINE 650

	LD	BC,_xsides
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  651			}
L_142:
.LINE 651

;  652	
;  653			/* bbb -> ccc */
;  654			if (key == sk_Down && PointEq(*currentSelection, side_b))
.LINE 654

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_146
	LD	BC,_xsides+26
	LD	(IX+-19),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_146
;  655			{
;  656				gfx_SetFocus(&currentSelection, &side_b, &side_c);
.LINE 656

	LD	BC,_xsides+52
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  657			}
L_146:
.LINE 657

;  658	
;  659			/* ccc -> bbb */
;  660			if ((key == sk_Up || key == sk_Left) && PointEq(*currentSelection, side_c))
.LINE 660

	LD	A,(IX+-4)
	CP	A,4
	JR	Z,L_144
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_149
L_144:
	LD	BC,_xsides+52
	LD	(IX+-22),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_149
;  661			{
;  662				gfx_SetFocus(&currentSelection, &side_c, &side_b);
.LINE 662

	LD	BC,_xsides+26
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  663			}
L_149:
.LINE 663

;  664	
;  665			/* ccc -> aaa */
;  666			if (key == sk_Right && PointEq(*currentSelection, side_c))
.LINE 666

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_152
	LD	BC,_xsides+52
	LD	(IX+-13),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_152
;  667			{
;  668				gfx_SetFocus(&currentSelection, &side_c, &side_a);
.LINE 668

	LD	BC,_xsides
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  669			}
L_152:
.LINE 669

;  670	
;  671			/* aaa -> bbb */
;  672			if (key == sk_Left && PointEq(*currentSelection, side_a))
.LINE 672

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_155
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_155
;  673			{
;  674				gfx_SetFocus(&currentSelection, &side_a, &side_b);
.LINE 674

	LD	BC,_xsides+26
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  675			}
L_155:
.LINE 675

;  676	
;  677			/* aaa -> ccc */
;  678			if (key == sk_Down && PointEq(*currentSelection, side_a))
.LINE 678

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_156
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_156
;  679			{
;  680				gfx_SetFocus(&currentSelection, &side_a, &side_c);
.LINE 680

	LD	BC,_xsides+52
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  681			}
;  682		}
L_156:
.LINE 682

	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_157
;  683	
;  684		if (PointEq(*currentSelection, side_a))
.LINE 684

	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_161
;  685		{
;  686			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", side_a.label);
.LINE 686

	LD	BC,_xsides
	LD	(IX+-25),BC
	LD	BC,_xsides+6
	PUSH	BC
	LD	BC,L__150
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  687			triangle.a   = io_gfx_ReadReal(&side_a);
.LINE 687

	LD	BC,(IX+-25)
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  688			trigstatus.a = true;
.LINE 688

	LD	A,1
	LD	(_trigstatus),A
;  689		}
L_161:
.LINE 689

;  690	
;  691		if (PointEq(*currentSelection, side_b))
.LINE 691

	LD	BC,_xsides+26
	LD	(IX+-10),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_163
;  692		{
;  693			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", side_b.label);
.LINE 693

	LD	IY,(IX+-10)
	PEA	IY+6
	LD	BC,L__152
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  694			triangle.b   = io_gfx_ReadReal(&side_b);
.LINE 694

	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  695			trigstatus.b = true;
.LINE 695

	LD	A,1
	LD	(_trigstatus+1),A
;  696		}
L_163:
.LINE 696

;  697	
;  698		if (PointEq(*currentSelection, side_c))
.LINE 698

	LD	BC,_xsides+52
	LD	(IX+-7),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_164
;  699		{
;  700			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", side_c.label);
.LINE 700

	LD	IY,(IX+-7)
	PEA	IY+6
	LD	BC,L__154
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  701			triangle.c   = io_gfx_ReadReal(&side_c);
.LINE 701

	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-52
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  702			trigstatus.c = true;
.LINE 702

	LD	A,1
	LD	(_trigstatus+2),A
;  703		}
L_164:
.LINE 703

;  704	
;  705		trig_CheckSolvability();
.LINE 705

	CALL	_trig_CheckSolvability
;  706		gfx_HighlightPoint(currentSelection);
.LINE 706

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  707		goto RECURSE;
.LINE 707

	JR	L_156
;  708	
;  709	}
L_165:
.LINE 709

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectSide ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_gfx_SetFocus                       IMPORT  -----   function
;_PointEq                            IMPORT  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_gfx_ClearHighlight                 IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_lbl_AngleMode                      STATIC     11   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_gfx_HighlightPoint                 IMPORT  -----   function
;_xsides                             STATIC     78   variable
;G_5                                  IX-25      3   variable
;G_3                                  IX-22      3   variable
;G_2                                  IX-19      3   variable
;G_1                                  IX-16      3   variable
;G_4                                  IX-13      3   variable
;G_6                                  IX-10      3   variable
;G_8                                   IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 58 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SelectSide",709,"_trig_SelectSide"
	SEGMENT STRSECT
L__150:
	DB	"[Trig] User selected side %s"
	DB	10,0
L__152:
	DB	"[Trig] User selected side %s"
	DB	10,0
L__154:
	DB	"[Trig] User selected side %s"
	DB	10,0
	SEGMENT CODE
;  710	
;  711	static void trig_Quit()
;  712	{
_trig_Quit:
.DEFINE "_trig_Quit"

.VALUE _trig_Quit

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Quit",712,"_trig_Quit"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  713		gfx_ZeroScreen();
.LINE 713

	CALL	_gfx_ZeroScreen
;  714		gfx_End();
.LINE 714

	CALL	_gfx_End
;  715		dbg_sprintf(dbgout, "[Trig] Zeroed screen and ended GFX\n");
.LINE 715

	LD	BC,L__156
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;  716	}
.LINE 716

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Quit ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;_gfx_End                            IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Quit",716,"_trig_Quit"
	SEGMENT STRSECT
L__156:
	DB	"[Trig] Zeroed screen and ended GFX"
	DB	10,0
	SEGMENT CODE
;  717	
;  718	static void trig_Reset()
;  719	{
_trig_Reset:
.DEFINE "_trig_Reset"

.VALUE _trig_Reset

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_Reset",719,"_trig_Reset"

.LINE 719

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-12
	LD	SP,HL
;  720		int i = 0;
.LINE 720

	LD	BC,0
	LD	(IX+-3),BC
;  721		bool  * bptr = (bool*) &trigstatus;
;  722		real_t* rptr = (real_t*) &triangle;
;  723		for (; i < sizeof(trigstatus) / sizeof(bool); i++)
.LINE 723

	JR	L_170
L_168:
;  724		{
;  725			bptr[i] = false;
.LINE 725

	LD	BC,_trigstatus
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  726		}
L_170:
.LINE 726

	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_168
;  727		for (i = 0; i < sizeof(triangle) / sizeof(real_t); i++)
.LINE 727

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_174
L_172:
;  728		{
;  729			rptr[i] = os_Int24ToReal(0);
.LINE 729

	LD	BC,0
	PUSH	BC
	PEA	IX+-12
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	A,9
	CALL	__imul_b
	LD	DE,_triangle
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,9
	LDIR	
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  730		}
L_174:
.LINE 730

	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_172
;  731		for (i = 0; i < 3; i++)
.LINE 731

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_179
L_177:
;  732		{
;  733			gfx_Clear(&xanglesData[i]);
.LINE 733

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  734			lib_MemZero(xanglesData[i].label + kLabelOffset, 16);
.LINE 734

	LD	BC,16
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  735	
;  736			gfx_Clear(&xsidesData[i]);
.LINE 736

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  737			lib_MemZero(xsidesData[i].label + kLabelOffset, 16);
.LINE 737

	LD	BC,16
	PUSH	BC
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  738		}
L_179:
.LINE 738

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_177
;  739		gfx_Clear(&ui_Type);
.LINE 739

	LD	BC,_ui_Type
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  740		gfx_Clear(&data_X_ex);
.LINE 740

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  741		lib_MemZero(data_X_ex.label + kLabelOffset, 16);
.LINE 741

	LD	BC,16
	PUSH	BC
	LD	BC,_data_X_ex+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  742	
;  743		gfx_Clear(&xmeasureData[0]);
.LINE 743

	LD	BC,_xmeasureData
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  744		gfx_Clear(&xmeasureData[1]);
.LINE 744

	LD	BC,_xmeasureData+26
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  745		lib_MemZero(xmeasureData[0].label + kLabelOffset, 20 - kLabelOffset);
.LINE 745

	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  746		lib_MemZero(xmeasureData[1].label + kLabelOffset, 20 - kLabelOffset);
.LINE 746

	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  747	
;  748		sp_SetLabel(&angle_A, "A");
.LINE 748

	LD	BC,L__161
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  749		sp_SetLabel(&angle_B, "B");
.LINE 749

	LD	BC,L__162
	PUSH	BC
	LD	BC,_xangles+26
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  750		sp_SetLabel(&angle_C, "C");
.LINE 750

	LD	BC,L__163
	PUSH	BC
	LD	BC,_xangles+52
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  751		sp_SetLabel(&side_a, "a");
.LINE 751

	LD	BC,L__164
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  752		sp_SetLabel(&side_b, "b");
.LINE 752

	LD	BC,L__165
	PUSH	BC
	LD	BC,_xsides+26
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  753		sp_SetLabel(&side_c, "c");
.LINE 753

	LD	BC,L__166
	PUSH	BC
	LD	BC,_xsides+52
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  754		trig_Redraw();
.LINE 754

	CALL	_trig_Redraw
;  755		trig_DrawTriangleSides();
.LINE 755

	CALL	_trig_DrawTriangleSides
;  756		trig_Sync();
.LINE 756

	CALL	_trig_Sync
;  757	}
.LINE 757

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Reset ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_DrawTriangleSides             STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_sp_SetLabel                        IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_data_X_ex                          STATIC     26   variable
;_ui_Type                            STATIC     26   variable
;_xsidesData                         STATIC     78   variable
;_lib_MemZero                        IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_Int24ToReal                     IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 18 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_Reset",757,"_trig_Reset"
	SEGMENT STRSECT
L__161:
	DB	"A"
	DB	0
L__162:
	DB	"B"
	DB	0
L__163:
	DB	"C"
	DB	0
L__164:
	DB	"a"
	DB	0
L__165:
	DB	"b"
	DB	0
L__166:
	DB	"c"
	DB	0
	SEGMENT CODE
;  758	
;  759	static void trig_DrawTriangleSides()
;  760	{
_trig_DrawTriangleSides:
.DEFINE "_trig_DrawTriangleSides"

.VALUE _trig_DrawTriangleSides

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_DrawTriangleSides",760,"_trig_DrawTriangleSides"

.LINE 760

.DEFINE "index"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "verts"

.CLASS 65

.VALUE -36

.DIM 6

.TYPE 100

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-36
	LD	SP,HL
;  761		int index = 0;
;  762	
;  763		/* Triangle coordinates */
;  764		const int verts[6] = {
;  765				140, 10,   /* (x0, y0) */
;  766				10, 119,  /* (x1, y1) */
;  767				209, 119, /* (x2, y2) */
;  768		};
.LINE 768

	LEA	DE,IX+-36
	LD	HL,_0temp183
	LD	BC,18
	LDIR	
;  769	
;  770		/* Leg a */
;  771		gfx_Line(verts[0], verts[1], verts[2], verts[3]);
.LINE 771

	LEA	IY,IX+-36
	LEA	BC,IY+9
	LD	(IX+-9),BC
	LEA	BC,IY+6
	LD	(IX+-6),BC
	LEA	IY,IX+-33
	LD	(IX+-18),IY
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  772	
;  773		/* Leg b */
;  774		gfx_Line(verts[2], verts[3], verts[4], verts[5]);
.LINE 774

	LEA	BC,IX+-21
	LD	(IX+-15),BC
	LEA	IY,IX+-24
	LD	(IX+-12),IY
	LD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  775	
;  776		/* Hypotenuse */
;  777		gfx_Line(verts[4], verts[5], verts[0], verts[1]);
.LINE 777

	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	LD	HL,(IX+-15)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  778	
;  779	
;  780		// Angles A, B, C
;  781		trig_Redraw();
.LINE 781

	CALL	_trig_Redraw
;  782	
;  783		// Leg a, b, c
;  784		for (index = 0; index < 3; index++)
.LINE 784

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_187
L_185:
;  785		{
;  786			gfx_Print(&xsides[index]);
.LINE 786

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  787		}
L_187:
.LINE 787

	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_185
;  788	}
.LINE 788

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_DrawTriangleSides ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_gfx_Print                          IMPORT  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gfx_Line                           IMPORT  -----   function
;_0temp183                           STATIC     18   variable
;verts                                IX-36     18   variable
;G_14                                 IX-18      3   variable
;G_12                                 IX-15      3   variable
;G_13                                 IX-12      3   variable
;G_10                                  IX-9      3   variable
;G_11                                  IX-6      3   variable
;index                                 IX-3      3   variable


; Stack Frame Size: 42 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_DrawTriangleSides",788,"_trig_DrawTriangleSides"
	SEGMENT TEXT
_0temp183:
	DW	140
	DB	0
	DW	10
	DB	0
	DW	10
	DB	0
	DW	119
	DB	0
	DW	209
	DB	0
	DW	119
	DB	0
	SEGMENT CODE
;  789	
;  790	static void ui_DispData()
;  791	{
_ui_DispData:
.DEFINE "_ui_DispData"

.VALUE _ui_DispData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispData",791,"_ui_DispData"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  792		if (ui_bDispMeasurements)
.LINE 792

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_191
;  793		{
;  794			ui_DispMeasurements();
.LINE 794

	CALL	_ui_DispMeasurements
;  795		}
;  796		else if (!ui_bDispMeasurements)
.LINE 796

	JR	L_192
L_191:
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	NZ,L_192
;  797		{
;  798			ui_DispAngleSideData();
.LINE 798

	CALL	_ui_DispAngleSideData
;  799		}
;  800	}
L_192:
.LINE 800

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispData ***************************
;Name                         Addr/Register   Size   Type
;_ui_DispAngleSideData               STATIC  -----   function
;_ui_DispMeasurements                STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispData",800,"_ui_DispData"
;  801	
;  802	static void trig_SelectAngle()
;  803	{
_trig_SelectAngle:
.DEFINE "_trig_SelectAngle"

.VALUE _trig_SelectAngle

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "trig_SelectAngle",803,"_trig_SelectAngle"

.LINE 803

.DEFINE "currentSelection"

.CLASS 65

.VALUE -3

.TAG "NONAME16"

.TYPE 40

.ENDEF

.DEFINE "key"

.CLASS 65

.VALUE -4

.TYPE 12

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-52
	LD	SP,HL
;  804		uint8_t key;
;  805		superpoint_t* currentSelection = &angle_A;
.LINE 805

	LD	BC,_xangles
	LD	(IX+-3),BC
;  806		gfx_HighlightPoint(&angle_A);
.LINE 806

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  807		RECURSE:
.LINE 807

;  808		while ((key = os_GetCSC()) != sk_Enter)
.LINE 808

	JR	L_222
L_223:
;  809		{
;  810			if (key == sk_Clear)
.LINE 810

	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_231
;  811			{
;  812				return;
.LINE 812

;  813			}
.LINE 813

;  814	
;  815			if (key == sk_Zoom)
.LINE 815

	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_201
;  816			{
;  817				if (ui_bDispMeasurements)
.LINE 817

	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_196
;  818				{
;  819					ui_bDispMeasurements = false;
.LINE 819

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  820					ui_ClearMeasurements();
.LINE 820

	CALL	_ui_ClearMeasurements
;  821				}
;  822				else
.LINE 822

	JR	L_197
L_196:
;  823				{
;  824					ui_bDispMeasurements = true;
.LINE 824

	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  825					ui_ClearAngleSideData();
.LINE 825

	CALL	_ui_ClearAngleSideData
;  826				}
L_197:
.LINE 826

;  827				ui_DispData();
.LINE 827

	CALL	_ui_DispData
;  828			}
L_201:
.LINE 828

;  829	
;  830			if (key == sk_Trace)
.LINE 830

	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_203
;  831			{
;  832				trig_Reset();
.LINE 832

	CALL	_trig_Reset
;  833				currentSelection = &angle_A;
.LINE 833

	LD	BC,_xangles
	LD	(IX+-3),BC
;  834				gfx_HighlightPoint(&angle_A);
.LINE 834

	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  835			}
L_203:
.LINE 835

;  836	
;  837			if (key == sk_Graph)
.LINE 837

	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_206
;  838			{
;  839				gfx_Clear(&ui_Mode);
.LINE 839

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  840				sp_SetLabel(&ui_Mode, lbl_SideMode);
.LINE 840

	LD	BC,_lbl_SideMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_sp_SetLabel
	POP	BC
	POP	BC
;  841				gfx_Print(&ui_Mode);
.LINE 841

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  842				gfx_ClearHighlight(currentSelection);
.LINE 842

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_ClearHighlight
	POP	BC
;  843				trig_SelectSide();
.LINE 843

	CALL	_trig_SelectSide
;  844				return;
.LINE 844

	JR	L_231
;  845			}
L_206:
.LINE 845

;  846	
;  847			/* AAA -> BBB */
;  848			if (key == sk_Right && PointEq(*currentSelection, angle_A))
.LINE 848

	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_209
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_209
;  849			{
;  850				gfx_SetFocus(&currentSelection, &angle_A, &angle_B);
.LINE 850

	LD	BC,_xangles+26
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  851			}
L_209:
.LINE 851

;  852	
;  853			/* AAA -> CCC */
;  854			if (key == sk_Up && PointEq(*currentSelection, angle_A))
.LINE 854

	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_212
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_212
;  855			{
;  856				gfx_SetFocus(&currentSelection, &angle_A, &angle_C);
.LINE 856

	LD	BC,_xangles+52
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  857			}
L_212:
.LINE 857

;  858	
;  859			/* BBB -> AAA */
;  860			if (key == sk_Left && PointEq(*currentSelection, angle_B))
.LINE 860

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_215
	LD	BC,_xangles+26
	LD	(IX+-16),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_215
;  861			{
;  862				gfx_SetFocus(&currentSelection, &angle_B, &angle_A);
.LINE 862

	LD	BC,_xangles
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  863			}
L_215:
.LINE 863

;  864	
;  865			/* BBB -> CCC */
;  866			if (key == sk_Up && PointEq(*currentSelection, angle_B))
.LINE 866

	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_218
	LD	BC,_xangles+26
	LD	(IX+-19),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_218
;  867			{
;  868				gfx_SetFocus(&currentSelection, &angle_B, &angle_C);
.LINE 868

	LD	BC,_xangles+52
	PUSH	BC
	LD	BC,(IX+-19)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  869			}
L_218:
.LINE 869

;  870	
;  871			/* CCC -> AAA */
;  872			if (key == sk_Left && PointEq(*currentSelection, angle_C))
.LINE 872

	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_221
	LD	BC,_xangles+52
	LD	(IX+-22),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_221
;  873			{
;  874				gfx_SetFocus(&currentSelection, &angle_C, &angle_A);
.LINE 874

	LD	BC,_xangles
	PUSH	BC
	LD	BC,(IX+-22)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  875			}
L_221:
.LINE 875

;  876	
;  877			/* CCC -> BBB */
;  878			if (key == sk_Down && PointEq(*currentSelection, angle_C))
.LINE 878

	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_222
	LD	BC,_xangles+52
	LD	(IX+-13),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_222
;  879			{
;  880				gfx_SetFocus(&currentSelection, &angle_C, &angle_B);
.LINE 880

	LD	BC,_xangles+26
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PEA	IX+-3
	CALL	_gfx_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  881			}
;  882		}
L_222:
.LINE 882

	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_223
;  883	
;  884		if (PointEq(*currentSelection, angle_A))
.LINE 884

	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_227
;  885		{
;  886			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", angle_A.label);
.LINE 886

	LD	BC,_xangles
	LD	(IX+-25),BC
	LD	BC,_xangles+6
	PUSH	BC
	LD	BC,L__192
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  887			triangle.A   = io_gfx_ReadReal(&angle_A);
.LINE 887

	LD	BC,(IX+-25)
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  888			trigstatus.A = true;
.LINE 888

	LD	A,1
	LD	(_trigstatus+3),A
;  889		}
L_227:
.LINE 889

;  890	
;  891		if (PointEq(*currentSelection, angle_B))
.LINE 891

	LD	BC,_xangles+26
	LD	(IX+-10),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_229
;  892		{
;  893			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", angle_B.label);
.LINE 893

	LD	IY,(IX+-10)
	PEA	IY+6
	LD	BC,L__194
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  894			triangle.B   = io_gfx_ReadReal(&angle_B);
.LINE 894

	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  895			trigstatus.B = true;
.LINE 895

	LD	A,1
	LD	(_trigstatus+4),A
;  896		}
L_229:
.LINE 896

;  897	
;  898		if (PointEq(*currentSelection, angle_C))
.LINE 898

	LD	BC,_xangles+52
	LD	(IX+-7),BC
	LD	HL,BC
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	HL,(IX+-3)
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_PointEq
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_230
;  899		{
;  900			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", angle_C.label);
.LINE 900

	LD	IY,(IX+-7)
	PEA	IY+6
	LD	BC,L__196
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  901			triangle.C   = io_gfx_ReadReal(&angle_C);
.LINE 901

	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-52
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  902			trigstatus.C = true;
.LINE 902

	LD	A,1
	LD	(_trigstatus+5),A
;  903		}
L_230:
.LINE 903

;  904	
;  905		trig_CheckSolvability();
.LINE 905

	CALL	_trig_CheckSolvability
;  906		gfx_HighlightPoint(currentSelection);
.LINE 906

	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_gfx_HighlightPoint
	POP	BC
;  907		goto RECURSE;
.LINE 907

	JR	L_222
;  908	}
L_231:
.LINE 908

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectAngle ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_gfx_SetFocus                       IMPORT  -----   function
;_PointEq                            IMPORT  -----   function
;_trig_SelectSide                    STATIC  -----   function
;_gfx_ClearHighlight                 IMPORT  -----   function
;_gfx_Print                          IMPORT  -----   function
;_lbl_SideMode                       STATIC     10   variable
;_sp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_gfx_Clear                          IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_gfx_HighlightPoint                 IMPORT  -----   function
;_xangles                            STATIC     78   variable
;G_19                                 IX-25      3   variable
;G_17                                 IX-22      3   variable
;G_16                                 IX-19      3   variable
;G_15                                 IX-16      3   variable
;G_18                                 IX-13      3   variable
;G_20                                 IX-10      3   variable
;G_22                                  IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 58 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SelectAngle",908,"_trig_SelectAngle"
	SEGMENT STRSECT
L__192:
	DB	"[Trig] User selected angle %s"
	DB	10,0
L__194:
	DB	"[Trig] User selected angle %s"
	DB	10,0
L__196:
	DB	"[Trig] User selected angle %s"
	DB	10,0
	SEGMENT CODE
;  909	
;  910	static void ui_DispMeasurements()
;  911	{
_ui_DispMeasurements:
.DEFINE "_ui_DispMeasurements"

.VALUE _ui_DispMeasurements

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispMeasurements",911,"_ui_DispMeasurements"

.LINE 911

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "real0"

.CLASS 65

.VALUE -12

.TAG "NONAME0"

.TYPE 8

.ENDEF

.DEFINE "buffer"

.CLASS 65

.VALUE -32

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-41
	LD	SP,HL
;  912		char         buffer[20];
;  913		const real_t real0 = os_Int24ToReal(0);
.LINE 913

	LD	BC,0
	PUSH	BC
	PEA	IX+-41
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  914		int          i     = 0;
.LINE 914

	LD	BC,0
	LD	(IX+-3),BC
;  915	
;  916		for (; i < 2; i++)
.LINE 916

	JR	L_235
L_233:
;  917		{
;  918			gfx_Clear(&xmeasureData[i]);
.LINE 918

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  919		}
L_235:
.LINE 919

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_233
;  920	
;  921		if (os_RealCompare(&triangle.area, &real0) == 0)
.LINE 921

	PEA	IX+-12
	LD	BC,_triangle+54
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_237
;  922		{
;  923			strcpy(xmeasureData[0].label + kLabelOffset, lbl_Unknown);
.LINE 923

	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  924		}
;  925		else
.LINE 925

	JR	L_241
L_237:
;  926		{
;  927			os_RealToStr(buffer, &triangle.area, 0, 0, 6);
.LINE 927

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  928			strncpy(xmeasureData[0].label + kLabelOffset, buffer, 20 - kLabelOffset);
.LINE 928

	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  929		}
L_241:
.LINE 929

;  930	
;  931		if (os_RealCompare(&triangle.perimeter, &real0) == 0)
.LINE 931

	PEA	IX+-12
	LD	BC,_triangle+63
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_240
;  932		{
;  933			strcpy(xmeasureData[1].label + kLabelOffset, lbl_Unknown);
.LINE 933

	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  934		}
;  935		else
.LINE 935

	JR	L_246
L_240:
;  936		{
;  937			os_RealToStr(buffer, &triangle.perimeter, 0, 0, 6);
.LINE 937

	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  938			strncpy(xmeasureData[1].label + kLabelOffset, buffer, 20 - kLabelOffset);
.LINE 938

	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  939		}
L_246:
.LINE 939

;  940	
;  941	
;  942		for (i = 0; i < 2; i++)
.LINE 942

	LD	BC,0
	LD	(IX+-3),BC
	JR	L_245
L_243:
;  943		{
;  944			gfx_Clear(&xmeasureData[i]);
.LINE 944

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  945			gfx_Print(&xmeasureData[i]);
.LINE 945

	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  946		}
L_245:
.LINE 946

	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_243
;  947	}
.LINE 947

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_gfx_Print                          IMPORT  -----   function
;_strncpy                            IMPORT  -----   function
;_os_RealToStr                       IMPORT  -----   function
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealCompare                     IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_gfx_Clear                          IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buffer                               IX-32     20   variable
;real0                                IX-12      9   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 47 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispMeasurements",947,"_ui_DispMeasurements"
;  948	
;  949	static void ui_DispAngleSideData()
;  950	{
_ui_DispAngleSideData:
.DEFINE "_ui_DispAngleSideData"

.VALUE _ui_DispAngleSideData

.CLASS 3

.TYPE 65

.ENDEF

.BEGFUNC "ui_DispAngleSideData",950,"_ui_DispAngleSideData"

.LINE 950

.DEFINE "i"

.CLASS 65

.VALUE -12

.TYPE 4

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-24
	LD	SP,HL
;  951		int i = 0;
.LINE 951

	LD	BC,0
	LD	(IX+-12),BC
;  952		for (; i < 3; i++)
.LINE 952

	JR	L_261
L_259:
;  953		{
;  954			gfx_Clear(&xsidesData[i]);
.LINE 954

	LD	HL,(IX+-12)
	LD	A,26
	CALL	__imul_b
	LD	(IX+-3),HL
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  955			gfx_Clear(&xanglesData[i]);
.LINE 955

	LD	BC,_xanglesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  956	
;  957			if (*xsides[i].label == 'a' || *xsides[i].label == 'b' || *xsides[i].label == 'c')
.LINE 957

	LD	BC,_xsides
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-15),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,97
	OR	A,A
	SBC	HL,BC
	JR	Z,L_251
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,98
	OR	A,A
	SBC	HL,BC
	JR	Z,L_251
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,99
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_252
L_251:
;  958				strcpy(xsidesData[i].label + kLabelOffset, lbl_Unknown);
.LINE 958

	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  959			else strcpy(xsidesData[i].label + kLabelOffset, xsides[i].label);
.LINE 959

	JR	L_257
L_252:
	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_xsides
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	BC,_xsidesData
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_257:
;  960	
;  961			if (*xangles[i].label == 'A' || *xangles[i].label == 'B' || *xangles[i].label == 'C')
.LINE 961

	LD	BC,(IX+-21)
	LD	(IX+-6),BC
	LD	BC,_xangles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-18),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,65
	OR	A,A
	SBC	HL,BC
	JR	Z,L_255
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,66
	OR	A,A
	SBC	HL,BC
	JR	Z,L_255
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	LD	BC,67
	OR	A,A
	SBC	HL,BC
	JR	NZ,L_256
L_255:
;  962				strcpy(xanglesData[i].label + kLabelOffset, lbl_Unknown);
.LINE 962

	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xanglesData
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  963			else strcpy(xanglesData[i].label + kLabelOffset, xangles[i].label);
.LINE 963

	JR	L_258
L_256:
	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_xangles
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	BC,_xanglesData
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_258:
;  964	
;  965			gfx_Clear(&xanglesData[i]);
.LINE 965

	LD	BC,(IX+-24)
	LD	(IX+-9),BC
	LD	BC,_xanglesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  966			gfx_Print(&xanglesData[i]);
.LINE 966

	LD	BC,_xanglesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
;  967	
;  968			gfx_Clear(&xsidesData[i]);
.LINE 968

	LD	BC,_xsidesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Clear
	POP	BC
;  969			gfx_Print(&xsidesData[i]);
.LINE 969

	LD	BC,_xsidesData
	LD	HL,(IX+-9)
	ADD	HL,BC
	PUSH	HL
	CALL	_gfx_Print
	POP	BC
	LD	BC,(IX+-12)
	INC	BC
	LD	(IX+-12),BC
;  970		}
L_261:
.LINE 970

	LD	BC,3
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_259
;  971		if (trigstatus.isSSA)
.LINE 971

	LD	A,(_trigstatus+7)
	OR	A,A
	JR	Z,L_264
;  972		{
;  973			gfx_Clear(&data_X_ex);
.LINE 973

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  974			gfx_Print(&data_X_ex);
.LINE 974

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  975		}
;  976		else if (!trigstatus.isSSA)
.LINE 976

	JR	L_266
L_264:
	LD	A,(_trigstatus+7)
	OR	A,A
	JR	NZ,L_266
;  977		{
;  978			gfx_Clear(&data_X_ex);
.LINE 978

	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_gfx_Clear
	POP	BC
;  979		}
;  980	}
L_266:
.LINE 980

	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_data_X_ex                          STATIC     26   variable
;_trigstatus                         STATIC      8   variable
;_gfx_Print                          IMPORT  -----   function
;_xangles                            STATIC     78   variable
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_gfx_Clear                          IMPORT  -----   function
;G_35                                 IX-24      3   variable
;G_30                                 IX-21      3   variable
;G_31                                 IX-18      3   variable
;G_26                                 IX-15      3   variable
;i                                    IX-12      3   variable
;G_36                                  IX-9      3   variable
;G_33                                  IX-6      3   variable
;G_24                                  IX-3      3   variable


; Stack Frame Size: 30 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "ui_DispAngleSideData",980,"_ui_DispAngleSideData"
;  981	
;  982	void trig_SolveTriangle()
;  983	{
_trig_SolveTriangle:
.DEFINE "_trig_SolveTriangle"

.VALUE _trig_SolveTriangle

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "trig_SolveTriangle",983,"_trig_SolveTriangle"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;  984		os_ClrHome();
.LINE 984

	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
;  985	
;  986		ui_bDispMeasurements = false;
.LINE 986

	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  987	
;  988		gfx_Begin();
.LINE 988

	CALL	_gfx_Begin
;  989		gfx_SetColor(gfx_blue);
.LINE 989

	LD	BC,16
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  990		gfx_SetTextFGColor(gfx_black);
.LINE 990

	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  991	
;  992		gfx_Print(&ui_Mode);
.LINE 992

	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  993		gfx_Print(&ui_btn_Mode);
.LINE 993

	LD	BC,_ui_btn_Mode
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  994		gfx_Print(&ui_btn_Clear);
.LINE 994

	LD	BC,_ui_btn_Clear
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  995		gfx_Print(&ui_btn_Data);
.LINE 995

	LD	BC,_ui_btn_Data
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;  996	
;  997		trig_Reset();
.LINE 997

	CALL	_trig_Reset
;  998	
;  999		trig_SelectAngle();
.LINE 999

	CALL	_trig_SelectAngle
; 1000	
; 1001		trig_Quit();
.LINE 1001

	CALL	_trig_Quit
; 1002	}
.LINE 1002

	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trig_Quit                          STATIC  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_btn_Data                        STATIC     26   variable
;_ui_btn_Clear                       STATIC     26   variable
;_ui_btn_Mode                        STATIC     26   variable
;_ui_Mode                            STATIC     26   variable
;_gfx_Print                          IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_HomeUp                         IMPORT  -----   function
;_asm_ClrLCD                         IMPORT  -----   function
;__OS                                IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "trig_SolveTriangle",1002,"_trig_SolveTriangle"
	XREF _strncpy:ROM
	XREF _strcpy:ROM
	XREF _loc_Angle_x:ROM
	XREF _loc_Side_x:ROM
	XREF _los_Angle_x:ROM
	XREF _los_Side_x:ROM
	XREF _os_RealSinDeg:ROM
	XREF _sprintf:ROM
	XREF _geo_RoundTriangle:ROM
	XREF _gfx_SetFocus:ROM
	XREF _gfx_PrintColor:ROM
	XREF _gfx_HighlightPoint:ROM
	XREF _gfx_ClearHighlight:ROM
	XREF _sp_SetLabel:ROM
	XREF _PointEq:ROM
	XREF _io_gfx_ReadReal:ROM
	XREF _gfx_Clear:ROM
	XREF _gfx_Print:ROM
	XREF _gDigitThreshold:ROM
	XREF _gRound:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_Line:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _lib_StrCut:ROM
	XREF _lib_MemZero:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCD:ROM
	XREF _asm_HomeUp:ROM
	XREF __OS:ROM
	XREF _os_GetCSC:ROM
	XREF _os_RealToStr:ROM
	XREF _os_FloatToReal:ROM
	XREF _os_Int24ToReal:ROM
	XREF _os_RealCompare:ROM
	XREF _os_RealSub:ROM
	XREF _os_RealMul:ROM
	XREF _os_RealDiv:ROM
	XREF _os_RealAdd:ROM
	XREF _os_RealSqrt:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _trig_SolveTriangle
	XDEF _trig_AreaBySin
	END
