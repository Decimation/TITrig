; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\TRIANGLE.C"
	.assume ADL=1
	SEGMENT DATA
_xangles:
	DW	30
	DB	0
	DW	109
	DB	0
	DB	65
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	165
	DB	0
	DW	109
	DB	0
	DB	66
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	135
	DB	0
	DW	27
	DB	0
	DB	67
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_xsides:
	DW	190
	DB	0
	DW	60
	DB	0
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	60
	DB	0
	DW	55
	DB	0
	DB	98
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	95
	DB	0
	DW	130
	DB	0
	DB	99
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT TEXT
_lbl_AngleMode:
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
_lbl_SideMode:
	DB	83
	DB	73
	DB	68
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
_lbl_SSS:
	DB	83
	DB	83
	DB	83
	DB	0
_lbl_SSA:
	DB	83
	DB	83
	DB	65
	DB	32
	DB	40
	DB	33
	DB	41
	DB	0
_lbl_SAS:
	DB	83
	DB	65
	DB	83
	DB	0
_lbl_AAS:
	DB	65
	DB	65
	DB	83
	DB	0
_lbl_ASA:
	DB	65
	DB	83
	DB	65
	DB	0
_lbl_Unknown:
	DB	63
	DB	0
	SEGMENT BSS
_triangle:
	DS	72
_trigstatus:
	DS	8
_ui_bDispMeasurements:
	DS	1
	SEGMENT DATA
_ui_Mode:
	DW	230
	DB	0
	DW	10
	DB	0
	DB	65
	DB	78
	DB	71
	DB	76
	DB	69
	DB	32
	DB	77
	DB	79
	DB	68
	DB	69
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_ui_Type:
	DW	230
	DB	0
	DW	20
	DB	0
	DB	46
	DB	46
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT TEXT
_ui_btn_Mode:
	DW	280
	DB	0
	DW	230
	DB	0
	DB	77
	DB	111
	DB	100
	DB	101
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_ui_btn_Clear:
	DW	215
	DB	0
	DW	230
	DB	0
	DB	67
	DB	108
	DB	101
	DB	97
	DB	114
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_ui_btn_Data:
	DW	145
	DB	0
	DW	230
	DB	0
	DB	68
	DB	97
	DB	116
	DB	97
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_ui_btn_Pref:
	DW	70
	DB	0
	DW	230
	DB	0
	DB	80
	DB	114
	DB	101
	DB	102
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	SEGMENT DATA
_xmeasureData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	80
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_xanglesData:
	DW	10
	DB	0
	DW	155
	DB	0
	DB	65
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	175
	DB	0
	DB	66
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	10
	DB	0
	DW	195
	DB	0
	DB	67
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_xsidesData:
	DW	130
	DB	0
	DW	155
	DB	0
	DB	97
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	175
	DB	0
	DB	98
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DW	130
	DB	0
	DW	195
	DB	0
	DB	99
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_data_X_ex:
	DW	10
	DB	0
	DW	215
	DB	0
	DB	42
	DB	88
	DB	32
	DB	61
	DB	32
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
;    1	//
;    2	// Created by Decimation on 4/27/2018.
;    3	//
;    4	
;    5	#include "Triangle.h"
;    6	#include "debug.h"
;    7	#include "Trigonometry.h"
;    8	#include "LabelPoint.h"
;    9	
;   10	static labelpoint_t xangles[3] = {
;   11			{{30,       119 - 10}, "A"},   // AAA
;   12			{{10 + 155, 119 - 10}, "B"},   // BBB
;   13			{{135,      27},       "C"}   // CCC
;   14	};
;   15	
;   16	static labelpoint_t xsides[3] = {
;   17			{{10 + 180, 60},  "a"},  // aaa
;   18			{{60,       55},  "b"},  // bbb
;   19			{{140 - 45, 130}, "c"}   // ccc
;   20	};
;   21	
;   22	
;   23	#define Point_Angle_A xangles[0]
;   24	#define Point_Angle_B xangles[1]
;   25	#define Point_Angle_C xangles[2]
;   26	
;   27	#define Point_Side_a xsides[0]
;   28	#define Point_Side_b xsides[1]
;   29	#define Point_Side_c xsides[2]
;   30	
;   31	static const char lbl_AngleMode[] = "ANGLE MODE";
;   32	static const char lbl_SideMode[]  = "SIDE MODE";
;   33	static const char lbl_SSS[]       = "SSS";
;   34	static const char lbl_SSA[]       = "SSA (!)";
;   35	static const char lbl_SAS[]       = "SAS";
;   36	static const char lbl_AAS[]       = "AAS";
;   37	static const char lbl_ASA[]       = "ASA";
;   38	static const char lbl_Unknown[]   = "?";
;   39	
;   40	static triangle_t   triangle;
;   41	static trigstatus_t trigstatus;
;   42	
;   43	/**
;   44	 * When true : display area and perimeter
;   45	 * When false: display a, b, c, A, B, C
;   46	 */
;   47	static bool ui_bDispMeasurements;
;   48	
;   49	static labelpoint_t       ui_Mode      = {{230, 10}, "ANGLE MODE"};
;   50	static labelpoint_t       ui_Type      = {{230, 20}, "..."};
;   51	static const labelpoint_t ui_btn_Mode  = {280, 230, "Mode"};
;   52	static const labelpoint_t ui_btn_Clear = {215, 230, "Clear"};
;   53	static const labelpoint_t ui_btn_Data  = {145, 230, "Data"};
;   54	static const labelpoint_t ui_btn_Pref  = {70, 230, "Pref"};
;   55	
;   56	static labelpoint_t xmeasureData[2] = {
;   57			{10, 155, "A = "},
;   58			{10, 175, "P = "},
;   59	};
;   60	
;   61	static labelpoint_t xanglesData[3] = {
;   62			{10, 155, "A = "},
;   63			{10, 175, "B = "},
;   64			{10, 195, "C = "}
;   65	};
;   66	
;   67	static labelpoint_t xsidesData[3] = {
;   68			{130, 155, "a = "},
;   69			{130, 175, "b = "},
;   70			{130, 195, "c = "}
;   71	};
;   72	
;   73	static labelpoint_t data_X_ex = {10, 215, "*X = "};
	SEGMENT CODE
;   74	
;   75	static void trig_Redraw()
;   76	{
_trig_Redraw:
	LD	HL,-3
	CALL	__frameset
;   77		int index = 0;
	LD	BC,0
	LD	(IX+-3),BC
;   78		for (; index < 3; index++)
	JR	L_4
L_2:
;   79		{
;   80			lp_Clear(&xangles[index]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;   81			lp_Clear(&xsides[index]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;   82	
;   83			lp_Print(&xangles[index]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Print
	POP	BC
;   84			lp_Print(&xsides[index]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   85	
;   86			dbg_sprintf(dbgout, "[%s, %s]\n", xangles[index].label, xsides[index].label);
;   87		}
L_4:
	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_2
;   88	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Redraw ***************************
;Name                         Addr/Register   Size   Type
;_lp_Print                           IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_lp_Clear                           IMPORT  -----   function
;index                                 IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   89	
;   90	static void dbg_printTriangle()
;   91	{
_dbg_printTriangle:
	LD	HL,-20
	CALL	__frameset
;   92		char buf[20];
;   93		os_RealToStr(buf, &triangle.A, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   94		dbg_sprintf(dbgout, "Angle A: %s | ", buf);
;   95		os_RealToStr(buf, &triangle.a, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   96		dbg_sprintf(dbgout, "Side a: %s\n", buf);
;   97	
;   98		os_RealToStr(buf, &triangle.B, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   99		dbg_sprintf(dbgout, "Angle B: %s | ", buf);
;  100		os_RealToStr(buf, &triangle.b, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  101		dbg_sprintf(dbgout, "Side b: %s\n", buf);
;  102	
;  103		os_RealToStr(buf, &triangle.C, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  104		dbg_sprintf(dbgout, "Angle C: %s | ", buf);
;  105		os_RealToStr(buf, &triangle.c, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  106		dbg_sprintf(dbgout, "Side c: %s\n", buf);
	JR	L_45
;  107	
;  108		dbg_sprintf(dbgout, "Angle availability: [%s, %s, %s]\n", trigstatus.A ? "1" : "0", trigstatus.B ? "1" : "0",
L__2:
L_23:
;  109					trigstatus.C ? "1" : "0");
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_45
	JR	L_45
;  110		dbg_sprintf(dbgout, "Side availability: [%s, %s, %s]\n", trigstatus.a ? "1" : "0", trigstatus.b ? "1" : "0",
L__4:
L_37:
;  111					trigstatus.c ? "1" : "0");
L_45:
;  112	
;  113		os_RealToStr(buf, &triangle.area, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  114		dbg_sprintf(dbgout, "Area: %s\n", buf);
;  115		os_RealToStr(buf, &triangle.perimeter, 0, 0, -1);
	LD	BC,16777215
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-20
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  116		dbg_sprintf(dbgout, "Perimeter: %s\n", buf);
;  117	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _dbg_printTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_os_RealToStr                       IMPORT  -----   function
;buf                                  IX-20     20   variable


; Stack Frame Size: 26 (bytes)
;       Spill Code: 0 (instruction)


;  118	
;  119	static void trig_Sync()
;  120	{
_trig_Sync:
;  121		dbg_sprintf(dbgout, "[Trig] Synchronizing...\n");
;  122		geo_RoundTriangle(&triangle, g_uRound);
	LD	A,(_g_uRound)
	LD	C,A
	LD	B,0
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	CALL	_geo_RoundTriangle
	POP	BC
	POP	BC
;  123		dbg_sprintf(dbgout, "[Trig] Rounded\n");
;  124	
;  125		if (trigstatus.A)
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_56
;  126		{
;  127	
;  128			os_RealToStr(Point_Angle_A.label, &triangle.A, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	LD	BC,_xangles+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  129		}
L_56:
;  130		if (trigstatus.B)
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_58
;  131		{
;  132			os_RealToStr(Point_Angle_B.label, &triangle.B, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  133		}
L_58:
;  134		if (trigstatus.C)
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_60
;  135		{
;  136			os_RealToStr(Point_Angle_C.label, &triangle.C, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+18
	PUSH	BC
	LD	IY,_xangles
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  137		}
L_60:
;  138		if (trigstatus.a)
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_62
;  139		{
;  140			os_RealToStr(Point_Side_a.label, &triangle.a, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+27
	PUSH	BC
	LD	BC,_xsides+6
	PUSH	BC
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  141		}
L_62:
;  142		if (trigstatus.b)
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_64
;  143		{
;  144			os_RealToStr(Point_Side_b.label, &triangle.b, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+36
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+26
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  145		}
L_64:
;  146		if (trigstatus.c)
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_65
;  147		{
;  148			os_RealToStr(Point_Side_c.label, &triangle.c, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+45
	PUSH	BC
	LD	IY,_xsides
	LEA	IY,IY+52
	PEA	IY+6
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  149		}
L_65:
;  150	
;  151		ui_DispData();
	CALL	_ui_DispData
;  152		trig_TruncateLabels(g_uDigitThreshold);
	LD	A,(_g_uDigitThreshold)
	UEXT	HL
	LD	L,A
	PUSH	HL
	CALL	_trig_TruncateLabels
	POP	BC
;  153		dbg_sprintf(dbgout, "[Trig] Truncated labels\n");
;  154		trig_Redraw();
	CALL	_trig_Redraw
;  155		dbg_printTriangle();
	CALL	_dbg_printTriangle
;  156	}
	RET	


;**************************** _trig_Sync ***************************
;Name                         Addr/Register   Size   Type
;_dbg_printTriangle                  STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_g_uDigitThreshold                  IMPORT      1   variable
;_trig_TruncateLabels                STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_os_RealToStr                       IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_g_uRound                           IMPORT      1   variable
;_geo_RoundTriangle                  IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


;  157	
;  158	real_t trig_AreaBySin(real_t a, real_t b, real_t C)
;  159	{
_trig_AreaBySin:
	LD	HL,-63
	CALL	__frameset
;  160		//Area =  1/2 ab sin C
;  161	
;  162		const real_t onehalf = os_FloatToReal(0.5f);
	LD	C,63
	LD	B,0
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PEA	IX+-27
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  163		real_t       buf;
;  164		C   = os_RealSinDeg(C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	IY,0
	ADD	IY,SP
	LEA	HL,IX+27
	PEA	IX+-36
	LD	DE,IY
	LD	BC,9
	LDIR	
	CALL	_os_RealSinDeg
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+27
;  165		buf = os_RealMul(&onehalf, &a);
	PEA	IX+9
	PEA	IX+-18
	PEA	IX+-45
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  166		buf = os_RealMul(&buf, &b);
	PEA	IX+18
	PEA	IX+-9
	PEA	IX+-54
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  167		return os_RealMul(&buf, &C);
	PEA	IX+27
	PEA	IX+-9
	PEA	IX+-63
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6	; spill
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)	; spill
;  168	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_AreaBySin ***************************
;Name                         Addr/Register   Size   Type
;_os_RealMul                         IMPORT  -----   function
;_os_RealSinDeg                      IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;onehalf                              IX-18      9   variable
;buf                                   IX-9      9   variable
;C                                    IX+27      9   parameter
;b                                    IX+18      9   parameter
;a                                     IX+9      9   parameter


; Stack Frame Size: 99 (bytes)
;       Spill Code: 0 (instruction)


;  169	
;  170	static void trig_HeronsFormula()
;  171	{
_trig_HeronsFormula:
	LD	HL,-180
	CALL	__frameset
;  172		real_t       num, s, root;
;  173		real_t       sma, smb, smc;
;  174		const real_t real2 = os_Int24ToReal(2);
	LD	BC,2
	PUSH	BC
	PEA	IX+-81
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-45
	LD	BC,9
	LDIR	
;  175	
;  176		num = os_RealAdd(&triangle.a, &triangle.b);
	LD	BC,_triangle+27
	LD	(IX+-72),BC
	LD	BC,_triangle+36
	LD	(IX+-69),BC
	PUSH	BC
	LD	BC,(IX+-72)
	PUSH	BC
	PEA	IX+-90
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  177		num = os_RealAdd(&num, &triangle.c);
	LD	BC,_triangle+45
	LD	(IX+-66),BC
	PUSH	BC
	PEA	IX+-18
	PEA	IX+-99
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
;  178	
;  179		// Half of perimeter
;  180		s = os_RealDiv(&num, &real2);
	PEA	IX+-45
	PEA	IX+-18
	PEA	IX+-108
	LD	BC,9
	LDIR	
	CALL	_os_RealDiv
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  181	
;  182		triangle.perimeter = os_RealMul(&s, &real2);
	PEA	IX+-45
	PEA	IX+-9
	PEA	IX+-117
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+63
	LD	BC,9
	LDIR	
;  183		dbg_sprintf(dbgout, "[Trig] Solved for perimeter\n");
;  184	
;  185		sma = os_RealSub(&s, &triangle.a);
	LD	BC,(IX+-72)
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-126
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
	LD	BC,9
	LDIR	
;  186		smb = os_RealSub(&s, &triangle.b);
	LD	BC,(IX+-69)
	PUSH	BC
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-135
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-63
	LD	BC,9
	LDIR	
;  187		smc = os_RealSub(&s, &triangle.c);
	LD	BC,(IX+-66)
	PUSH	BC
	PEA	IX+-9
	LD	HL,IX
	LD	BC,-144
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-54
;  188	
;  189		sma = os_RealMul(&s, &sma);
	PEA	IX+-36
	PEA	IX+-9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-153
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
;  190	
;  191		root = os_RealMul(&sma, &smb);
	PEA	IX+-63
	PEA	IX+-36
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-162
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
;  192		root = os_RealMul(&root, &smc);
	PEA	IX+-54
	PEA	IX+-27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-171
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
;  193	
;  194		triangle.area = os_RealSqrt(&root);
	PEA	IX+-27
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-180
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSqrt
	POP	BC
	POP	BC
	LD	DE,_triangle+54
	LD	BC,9
	LDIR	
;  195		dbg_sprintf(dbgout, "[Trig] Solved for area\n");
;  196	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_HeronsFormula ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSqrt                        IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_os_RealMul                         IMPORT  -----   function
;_os_RealDiv                         IMPORT  -----   function
;_os_RealAdd                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_Int24ToReal                     IMPORT  -----   function
;smb                                  IX-63      9   variable
;smc                                  IX-54      9   variable
;real2                                IX-45      9   variable
;sma                                  IX-36      9   variable
;root                                 IX-27      9   variable
;num                                  IX-18      9   variable
;s                                     IX-9      9   variable


; Stack Frame Size: 186 (bytes)
;       Spill Code: 0 (instruction)


;  197	
;  198	static void trig_SolveSSS()
;  199	{
_trig_SolveSSS:
	LD	HL,-69
	CALL	__frameset
;  200		real_t       buf;
;  201		const real_t real180 = os_Int24ToReal(180);
	LD	BC,180
	PUSH	BC
	PEA	IX+-33
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
	OR	A,A
;  202		dbg_sprintf(dbgout, "[Trig] Solving SSS triangle\n");
;  203		triangle.A   = loc_Angle_x(triangle.b, triangle.c, triangle.a);
	SBC	HL,HL
	LD	DE,_triangle
	LD	(IX+-21),DE
	PUSH	BC
	PUSH	BC
	PUSH	BC
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+45
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	PEA	IX+-42
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+36
	LDIR	
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,(IX+-21)
	LD	BC,9
	LDIR	
;  204		trigstatus.A = true;
	LD	A,1
	OR	A,A
;  205		dbg_sprintf(dbgout, "[Trig] Solved for angle A\n");
;  206	
;  207		triangle.B   = loc_Angle_x(triangle.c, triangle.a, triangle.b);
	SBC	HL,HL
	LD	(_trigstatus+3),A
	LD	DE,_triangle+9
	LD	(IX+-24),DE
	PUSH	BC
	PUSH	BC
	PUSH	BC
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+36
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	PEA	IX+-51
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+45
	LDIR	
	CALL	_loc_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,(IX+-24)
	LD	BC,9
	LDIR	
;  208		trigstatus.B = true;
	LD	A,1
	LD	(_trigstatus+4),A
;  209		dbg_sprintf(dbgout, "[Trig] Solved for angle B\n");
;  210	
;  211		buf = os_RealAdd(&triangle.A, &triangle.B);
	LD	BC,(IX+-24)
	PUSH	BC
	LD	BC,(IX+-21)
	PUSH	BC
	PEA	IX+-60
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  212		triangle.C   = os_RealSub(&real180, &buf);
	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-69
	LD	BC,9
	LDIR	
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  213		trigstatus.C = true;
	LD	A,1
	LD	(_trigstatus+5),A
;  214		dbg_sprintf(dbgout, "[Trig] Solved for angle C\n");
;  215	
;  216		trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  217		trig_Sync();
	CALL	_trig_Sync
;  218	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveSSS ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_HeronsFormula                 STATIC  -----   function
;_os_RealSub                         IMPORT  -----   function
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_loc_Angle_x                        IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-18      9   variable
;buf                                   IX-9      9   variable


; Stack Frame Size: 75 (bytes)
;       Spill Code: 0 (instruction)


;  219	
;  220	static void trig_SolveMissingAngle()
;  221	{
_trig_SolveMissingAngle:
	LD	HL,-81
	CALL	__frameset
;  222		const real_t real180 = os_Int24ToReal(180);
	LD	BC,180
	PUSH	BC
	PEA	IX+-27
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;  223		real_t       buf;
;  224	
;  225		if (trigstatus.A && trigstatus.B)
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_90
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_90
;  226		{
;  227			buf = os_RealAdd(&triangle.A, &triangle.B);
	LD	BC,_triangle+9
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-36
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  228			triangle.C   = os_RealSub(&real180, &buf);
	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-45
	LD	BC,9
	LDIR	
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  229			trigstatus.C = true;
	LD	A,1
	LD	(_trigstatus+5),A
;  230		}
;  231		else if (trigstatus.A && trigstatus.C)
	JR	L_91
L_90:
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_88
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_88
;  232		{
;  233			buf = os_RealAdd(&triangle.A, &triangle.C);
	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle
	PUSH	BC
	PEA	IX+-54
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  234			triangle.B   = os_RealSub(&real180, &buf);
	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-63
	LD	BC,9
	LDIR	
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  235			trigstatus.B = true;
	LD	A,1
	LD	(_trigstatus+4),A
;  236		}
;  237		else if (trigstatus.B && trigstatus.C)
	JR	L_91
L_88:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_91
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_91
;  238		{
;  239			buf = os_RealAdd(&triangle.B, &triangle.C);
	LD	BC,_triangle+18
	PUSH	BC
	LD	BC,_triangle+9
	PUSH	BC
	PEA	IX+-72
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  240			triangle.A   = os_RealSub(&real180, &buf);
	PEA	IX+-9
	PEA	IX+-18
	PEA	IX+-81
	LD	BC,9
	LDIR	
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  241			trigstatus.A = true;
	LD	A,1
	LD	(_trigstatus+3),A
;  242		}
;  243	}
L_91:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SolveMissingAngle ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSub                         IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealAdd                         IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_os_Int24ToReal                     IMPORT  -----   function
;real180                              IX-18      9   variable
;buf                                   IX-9      9   variable


; Stack Frame Size: 87 (bytes)
;       Spill Code: 0 (instruction)


;  244	
;  245	static void trig_TruncateLabels(int len)
;  246	{
_trig_TruncateLabels:
	LD	HL,-3
	CALL	__frameset
;  247		int i = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  248		for (; i < 3; i++)
	JR	L_95
L_93:
;  249		{
;  250			lib_StrCut(xangles[i].label, len, 20 - len);
	LD	HL,20
	LD	BC,(IX+6)
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	A,26
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	CALL	__imul_b
	LD	BC,_xangles
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
;  251			lib_StrCut(xsides[i].label, len, 20 - len);
	LD	BC,(IX+6)
	LD	HL,20
	OR	A,A
	SBC	HL,BC
	PUSH	HL
	LD	A,26
	LD	BC,(IX+6)
	PUSH	BC
	LD	HL,(IX+-3)
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	CALL	_lib_StrCut
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  252		}
L_95:
	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_93
;  253	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_TruncateLabels ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_lib_StrCut                         IMPORT  -----   function
;i                                     IX-3      3   variable
;len                                   IX+6      3   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


;  254	
;  255	static void trig_CheckSolvability()
;  256	{
_trig_CheckSolvability:
	LD	HL,-361
	CALL	__frameset
;  257		real_t       rbuf;
;  258		char         cbuf[20];
;  259		char         cbuf2[20];
;  260	
;  261		LocalReal(180);
	LD	BC,180
	PUSH	BC
	PEA	IX+-67
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  262	
;  263		dbg_sprintf(dbgout, "[Trig] Checking solvability...\n");
;  264		ui_DispData();
	CALL	_ui_DispData
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  265	
;  266		// Automatically solve for the third angle when possible
;  267		trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  268		trig_Sync();
	CALL	_trig_Sync
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  269	
;  270	
;  271		if (trigstatus.complete)
	LD	A,(_trigstatus+6)
	OR	A,A
	JR	NZ,L_192
;  272		{
;  273			return;
;  274		}
;  275	
;  276	
;  277		// SSS
;  278		if (trigstatus.a && trigstatus.b && trigstatus.c)
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_123
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_123
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_123
;  279		{
;  280			dbg_sprintf(dbgout, "SSS detected [%s, %s, %s]\n", Point_Side_a.label, Point_Side_b.label, Point_Side_c.label);
;  281			lp_Clear(&ui_Type);
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  282			lp_SetLabel(&ui_Type, lbl_SSS);
	LD	BC,_lbl_SSS
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  283			lp_PrintColor(&ui_Type, gfx_green);
	LD	BC,3
	PUSH	BC
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_lp_PrintColor
	POP	BC
	POP	BC
;  284	
;  285			trig_SolveSSS();
	CALL	_trig_SolveSSS
;  286			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  287			return;
	JR	L_192
;  288		}
L_123:
;  289	
;  290		// AAS
;  291		// "AAS" is when we know two angles and one side (which is not between the angles).
;  292		if (trigstatus.A && trigstatus.C && trigstatus.c)
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_122
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_122
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_122
;  293		{
;  294			dbg_sprintf(dbgout, "AAS_1 detected [%s, %s, %s]\n", Point_Angle_A.label, Point_Angle_C.label, Point_Side_c.label);
;  295			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  296			lp_SetLabel(&ui_Type, lbl_AAS);
	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  297			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  298	
;  299			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  300			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+45
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PEA	IX+-76
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  301			trigstatus.a = true;
;  302			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	PEA	IX+-85
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+9
	LDIR	
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  303			trigstatus.b = true;
	LD	A,1
	LD	(_trigstatus+1),A
;  304	
;  305			trig_Sync();
	CALL	_trig_Sync
;  306			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  307			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  308			ui_DispData();
	CALL	_ui_DispData
;  309			return;
	JR	L_192
;  310		}
;  311		else if (trigstatus.B && trigstatus.C && trigstatus.b)
L_122:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_120
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_120
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_120
;  312		{
;  313			dbg_sprintf(dbgout, "AAS_2 detected [%s, %s, %s]\n", Point_Angle_B.label, Point_Angle_C.label, Point_Side_b.label);
;  314			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  315			lp_SetLabel(&ui_Type, lbl_AAS);
	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  316			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  317	
;  318			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  319	
;  320			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+36
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+18
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PEA	IX+-94
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  321			trigstatus.c = true;
;  322			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus+2),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+45
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	PEA	IX+-103
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle
	LDIR	
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  323			trigstatus.a = true;
	LD	A,1
	LD	(_trigstatus),A
;  324	
;  325			//dbg_printTriangle();
;  326			trig_Sync();
	CALL	_trig_Sync
;  327			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  328			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  329			ui_DispData();
	CALL	_ui_DispData
;  330			return;
	JR	L_192
;  331		}
;  332		else if (trigstatus.A && trigstatus.B && trigstatus.b)
L_120:
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_143
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_143
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_143
;  333		{
;  334			dbg_sprintf(dbgout, "AAS_3 detected [%s, %s, %s]\n", Point_Angle_A.label, Point_Angle_B.label, Point_Side_b.label);
;  335			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  336			lp_SetLabel(&ui_Type, lbl_AAS);
	LD	DE,_lbl_AAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  337			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  338	
;  339			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  340			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+36
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+18
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PEA	IX+-112
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  341			trigstatus.c = true;
;  342			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus+2),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+36
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	PEA	IX+-121
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle
	LDIR	
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  343			trigstatus.a = true;
	LD	A,1
	LD	(_trigstatus),A
;  344	
;  345			trig_Sync();
	CALL	_trig_Sync
;  346			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  347			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  348			ui_DispData();
	CALL	_ui_DispData
;  349			return;
	JR	L_192
;  350		}
L_143:
;  351	
;  352		// ASA
;  353		// "ASA" is when we know two angles and a side between the angles.
;  354		if (trigstatus.A && trigstatus.c && trigstatus.B)
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_142
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_142
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_142
;  355		{
;  356			dbg_sprintf(dbgout, "ASA_1 detected [%s, %s, %s]\n", Point_Angle_A.label, Point_Side_c.label, Point_Angle_B.label);
;  357	
;  358			lp_SetLabel(&ui_Type, lbl_ASA);
	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  359			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  360	
;  361			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  362			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+45
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-316	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-316	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-316	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-316	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-130
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  363			trigstatus.a = true;
;  364			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+45
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+9
	LDIR	
	LD	HL,IX
	LD	BC,-139
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  365			trigstatus.b = true;
	LD	A,1
	LD	(_trigstatus+1),A
;  366	
;  367			trig_Sync();
	CALL	_trig_Sync
;  368			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  369			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  370			ui_DispData();
	CALL	_ui_DispData
;  371			dbg_sprintf(dbgout, ">> [%s]\n", ui_Type.label);
;  372			return;
	JR	L_192
;  373		}
;  374		else if (trigstatus.A && trigstatus.b && trigstatus.C) //todo: verify
L_142:
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_140
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_140
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_140
;  375		{
;  376			dbg_sprintf(dbgout, "ASA_2 detected [%s, %s, %s]\n", Point_Angle_A.label, Point_Side_b.label, Point_Angle_C.label);
;  377			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  378			lp_SetLabel(&ui_Type, lbl_ASA);
	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  379			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  380	
;  381			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  382			triangle.a   = los_Side_x(triangle.A, triangle.b, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+36
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-319	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-319	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-319	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-319	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-148
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  383			trigstatus.a = true;
;  384			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+36
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+18
	LDIR	
	LD	HL,IX
	LD	BC,-157
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  385			trigstatus.c = true;
	LD	A,1
	LD	(_trigstatus+2),A
;  386	
;  387			trig_Sync();
	CALL	_trig_Sync
;  388			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  389			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  390			ui_DispData();
	CALL	_ui_DispData
;  391			return;
	JR	L_192
;  392		}
;  393		else if (trigstatus.B && trigstatus.a && trigstatus.C) //todo: verify
L_140:
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_161
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_161
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_161
;  394		{
;  395			dbg_sprintf(dbgout, "ASA_3 detected [%s, %s, %s]\n", Point_Angle_B.label, Point_Side_a.label, Point_Angle_C.label);
;  396			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  397			lp_SetLabel(&ui_Type, lbl_ASA);
	LD	DE,_lbl_ASA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  398			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  399	
;  400			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  401			triangle.b   = los_Side_x(triangle.B, triangle.a, triangle.A);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+27
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+9
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-322	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-322	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-322	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-322	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-166
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  402			trigstatus.b = true;
;  403			triangle.c   = los_Side_x(triangle.C, triangle.a, triangle.A);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus+1),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+18
	LDIR	
	LD	HL,IX
	LD	BC,-175
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  404			trigstatus.c = true;
	LD	A,1
	LD	(_trigstatus+2),A
;  405	
;  406			trig_Sync();
	CALL	_trig_Sync
;  407			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  408			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  409			ui_DispData();
	CALL	_ui_DispData
;  410			return;
	JR	L_192
;  411		}
L_161:
;  412	
;  413		// SAS
;  414		// "SAS" is when we know two sides and the angle between them.
;  415		if (trigstatus.b && trigstatus.A && trigstatus.c)
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_160
	LD	A,(_trigstatus+3)
	OR	A,A
	JR	Z,L_160
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_160
;  416		{
;  417			dbg_sprintf(dbgout, "SAS_1 detected [%s, %s, %s]\n", Point_Side_b.label, Point_Angle_A.label, Point_Side_c.label);
;  418			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  419			lp_SetLabel(&ui_Type, lbl_SAS);
	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  420			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  421	
;  422			triangle.a   = loc_Side_x(triangle.b, triangle.c, triangle.A);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+45
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+36
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-325	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-325	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-325	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-325	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-184
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  423			trigstatus.a = true;
;  424	
;  425			// todo: need to find the smaller of the two angles
;  426			triangle.B   = los_Angle_x(triangle.b, triangle.A, triangle.a);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+36
	LDIR	
	LD	HL,IX
	LD	BC,-193
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  427			trigstatus.B = true;
	LD	A,1
	LD	(_trigstatus+4),A
;  428	
;  429			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
;  430	
;  431			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  432			trig_Sync();
	CALL	_trig_Sync
;  433			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  434			ui_DispData();
	CALL	_ui_DispData
;  435			return;
	JR	L_192
;  436		}
;  437		else if (trigstatus.c && trigstatus.B && trigstatus.a) //todo: verify
L_160:
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_158
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_158
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_158
;  438		{
;  439			dbg_sprintf(dbgout, "SAS_2 detected [%s, %s, %s]\n", Point_Side_c.label, Point_Angle_B.label, Point_Side_a.label);
;  440			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  441			lp_SetLabel(&ui_Type, lbl_SAS);
	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  442			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  443	
;  444			triangle.b   = loc_Side_x(triangle.a, triangle.c, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+45
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+27
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-328	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-328	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-328	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-328	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-202
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  445			trigstatus.b = true;
;  446	
;  447			// todo: need to find the smaller of the two angles
;  448			triangle.A   = los_Angle_x(triangle.a, triangle.B, triangle.b);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus+1),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+36
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	LD	HL,IX
	LD	BC,-211
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  449			trigstatus.A = true;
	LD	A,1
	LD	(_trigstatus+3),A
;  450	
;  451			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
;  452			trig_Sync();
	CALL	_trig_Sync
;  453			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  454			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  455			ui_DispData();
	CALL	_ui_DispData
;  456			return;
	JR	L_192
;  457		}
;  458		else if (trigstatus.b && trigstatus.C && trigstatus.a)
L_158:
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_191
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_191
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_191
;  459		{
;  460			dbg_sprintf(dbgout, "SAS_3 detected [%s, %s, %s]\n", Point_Side_b.label, Point_Angle_C.label, Point_Side_a.label);
;  461			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  462			lp_SetLabel(&ui_Type, lbl_SAS);
	LD	DE,_lbl_SAS
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  463			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  464	
;  465			triangle.c   = loc_Side_x(triangle.a, triangle.b, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+36
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+27
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-331	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-331	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-331	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-331	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-220
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_loc_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  466			trigstatus.c = true;
;  467	
;  468			// todo: need to find the smaller of the two angles
;  469			triangle.A   = los_Angle_x(triangle.a, triangle.C, triangle.c);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	A,1
	LD	(_trigstatus+2),A
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+45
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	BC,9
	LD	HL,_triangle+27
	LDIR	
	LD	HL,IX
	LD	BC,-229
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  470			trigstatus.A = true;
	LD	A,1
	LD	(_trigstatus+3),A
;  471	
;  472			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
;  473			trig_Sync();
	CALL	_trig_Sync
;  474			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  475			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  476			ui_DispData();
	CALL	_ui_DispData
;  477			return;
	JR	L_192
;  478		}
L_191:
;  479	
;  480		// SSA
;  481		// "SSA" is when we know two sides and an angle that is not the angle between the sides.
;  482		// todo: check if it has multiple answers
;  483		if (trigstatus.b && trigstatus.c && trigstatus.B)
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_190
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_190
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_190
;  484		{
;  485			dbg_sprintf(dbgout, "SSA_1 detected [%s, %s, %s]\n", Point_Side_b.label, Point_Side_c.label, Point_Angle_B.label);
;  486			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  487			lp_SetLabel(&ui_Type, lbl_SSA);
	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  488			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  489			trigstatus.isSSA = true;
;  490	
;  491			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	A,1
	LD	(_trigstatus+7),A
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+9
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+45
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-334	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-334	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-334	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-334	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-238
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  492			trigstatus.C = true;
	LD	A,1
	LD	(_trigstatus+5),A
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  493	
;  494			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  495	
;  496			triangle.a   = los_Side_x(triangle.A, triangle.c, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+45
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-337	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-337	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-337	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-337	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-247
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+27
	LD	BC,9
;  497			trigstatus.a = true;
;  498	
;  499			// other possible answer for C
;  500			rbuf = os_RealSub(&real180, &triangle.C);
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	LD	HL,_triangle+18
	PUSH	BC
	LD	BC,-358	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-358	; unspill
	CALL	__ildix
	POP	BC
	PUSH	HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	PEA	IX+-18
	LD	IY,IX
	LDIR	
	LD	BC,-256
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	A,1
	LD	(_trigstatus),A
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  501			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-58
	LD	BC,9
	LDIR	
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  502	
;  503			sprintf(cbuf2, "*C = %s", cbuf);
	PEA	IX+-58
	LD	BC,L__60
	PUSH	BC
	PEA	IX+-38
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  504			lp_SetLabel(&data_X_ex, cbuf2);
	PEA	IX+-38
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  505			lp_Clear(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  506			lp_Print(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  507			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
;  508			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
;  509	
;  510			trig_Sync();
	CALL	_trig_Sync
;  511			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  512			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  513			ui_DispData();
	CALL	_ui_DispData
;  514			return;
	JR	L_192
;  515		}
;  516		else if (trigstatus.b && trigstatus.a && trigstatus.B) //todo: verify
L_190:
	LD	A,(_trigstatus+1)
	OR	A,A
	JR	Z,L_188
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_188
	LD	A,(_trigstatus+4)
	OR	A,A
	JR	Z,L_188
;  517		{
;  518			dbg_sprintf(dbgout, "SSA_2 detected [%s, %s, %s]\n", Point_Side_b.label, Point_Side_a.label, Point_Angle_B.label);
;  519			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  520			lp_SetLabel(&ui_Type, lbl_SSA);
	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  521			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  522			trigstatus.isSSA = true;
;  523	
;  524			triangle.C   = los_Angle_x(triangle.c, triangle.B, triangle.b);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	A,1
	LD	(_trigstatus+7),A
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+36
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+9
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+45
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-340	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-340	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-340	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-340	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-265
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  525			trigstatus.C = true;
	LD	A,1
	LD	(_trigstatus+5),A
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  526	
;  527			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  528	
;  529			triangle.c   = los_Side_x(triangle.C, triangle.b, triangle.B);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+9
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+36
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+18
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-343	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-343	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-343	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-343	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-274
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+45
	LD	BC,9
;  530			trigstatus.c = true;
;  531	
;  532			// other possible answer for C
;  533			rbuf = os_RealSub(&real180, &triangle.C);
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	LD	HL,_triangle+18
	PUSH	BC
	LD	BC,-355	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-355	; unspill
	CALL	__ildix
	POP	BC
	PUSH	HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	PEA	IX+-18
	LD	IY,IX
	LDIR	
	LD	BC,-283
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	A,1
	LD	(_trigstatus+2),A
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  534			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-58
	LD	BC,9
	LDIR	
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  535	
;  536			sprintf(cbuf2, "*C = %s", cbuf);
	PEA	IX+-58
	LD	BC,L__64
	PUSH	BC
	PEA	IX+-38
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  537			lp_SetLabel(&data_X_ex, cbuf2);
	PEA	IX+-38
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  538			lp_Clear(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  539			lp_Print(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  540			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
;  541			dbg_sprintf(dbgout, "Other possible solution for C = %s\n", cbuf);
;  542	
;  543			trig_Sync();
	CALL	_trig_Sync
;  544			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  545			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  546			ui_DispData();
	CALL	_ui_DispData
;  547			return;
	JR	L_192
;  548		}
;  549		else if (trigstatus.a && trigstatus.c && trigstatus.C) //todo: verify
L_188:
	LD	A,(_trigstatus)
	OR	A,A
	JR	Z,L_192
	LD	A,(_trigstatus+2)
	OR	A,A
	JR	Z,L_192
	LD	A,(_trigstatus+5)
	OR	A,A
	JR	Z,L_192
;  550		{
;  551			dbg_sprintf(dbgout, "SSA_3 detected [%s, %s, %s]\n", Point_Side_a.label, Point_Side_c.label, Point_Angle_C.label);
;  552			lp_Clear(&ui_Type);
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_Clear
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
;  553			lp_SetLabel(&ui_Type, lbl_SSA);
	LD	DE,_lbl_SSA
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_SetLabel
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  554			lp_PrintColor(&ui_Type, gfx_green);
	LD	DE,3
	PUSH	DE
	LD	DE,_ui_Type
	PUSH	DE
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
	CALL	_lp_PrintColor
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
	POP	DE
	POP	DE
;  555			trigstatus.isSSA = true;
;  556	
;  557			triangle.B   = los_Angle_x(triangle.a, triangle.C, triangle.c);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	A,1
	LD	(_trigstatus+7),A
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+45
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+18
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+27
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-346	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-346	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-346	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-346	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-292
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Angle_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  558			trigstatus.B = true;
	LD	A,1
	LD	(_trigstatus+4),A
	PUSH	BC
	PUSH	HL
	LD	HL,BC
	LD	BC,-361
	CALL	__istix
	POP	HL
	POP	BC
;  559	
;  560			trig_SolveMissingAngle();
	CALL	_trig_SolveMissingAngle
	LD	BC,-361
	PUSH	HL
	CALL	__ildix
	LD	BC,HL
	POP	HL
;  561	
;  562			triangle.b   = los_Side_x(triangle.B, triangle.c, triangle.C);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	OR	A,A
	SBC	HL,HL
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_triangle+18
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	HL,_triangle+45
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LDIR	
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LD	BC,9
	LD	IY,IX
	LD	HL,_triangle+9
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	OR	A,A
	SBC	HL,HL
	PUSH	BC
	LD	BC,-349	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-349	; unspill
	CALL	__ildix
	POP	BC
	ADD	HL,SP
	PUSH	BC
	LD	BC,-349	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-349	; unspill
	CALL	__ildix
	POP	BC
	LD	DE,HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	LDIR	
	LD	BC,-301
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_los_Side_x
	LD	IY,30
	ADD	IY,SP
	LD	SP,IY
	LD	DE,_triangle+36
	LD	BC,9
;  563			trigstatus.b = true;
;  564	
;  565			// other possible answer for B
;  566			rbuf = os_RealSub(&real180, &triangle.B);
	PUSH	BC
	LD	BC,-313	; spill
	CALL	__istix
	POP	BC
	LD	HL,_triangle+9
	PUSH	BC
	LD	BC,-352	; spill
	CALL	__istix
	LD	BC,-313	; unspill
	CALL	__ildix
	LD	BC,-313	; spill
	CALL	__istix
	LD	BC,-352	; unspill
	CALL	__ildix
	POP	BC
	PUSH	HL
	PUSH	BC
	LD	BC,-313	; unspill
	CALL	__ildix
	POP	BC
	PEA	IX+-18
	LD	IY,IX
	LDIR	
	LD	BC,-310
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	LD	A,1
	LD	(_trigstatus+1),A
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;  567			os_RealToStr(cbuf, &rbuf, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-58
	LD	BC,9
	LDIR	
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  568	
;  569			sprintf(cbuf2, "*B = %s", cbuf);
	PEA	IX+-58
	LD	BC,L__68
	PUSH	BC
	PEA	IX+-38
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
;  570			lp_SetLabel(&data_X_ex, cbuf2);
	PEA	IX+-38
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  571			lp_Clear(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  572			lp_Print(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  573			dbg_sprintf(dbgout, "data_X_ex = %s\n", data_X_ex.label);
;  574			dbg_sprintf(dbgout, "Other possible solution for B = %s\n", cbuf);
;  575	
;  576			trig_Sync();
	CALL	_trig_Sync
;  577			trigstatus.complete = true;
	LD	A,1
	LD	(_trigstatus+6),A
;  578			trig_HeronsFormula();
	CALL	_trig_HeronsFormula
;  579			ui_DispData();
	CALL	_ui_DispData
;  580			return;
;  581		}
;  582	}
L_192:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_CheckSolvability ***************************
;Name                         Addr/Register   Size   Type
;_lp_Print                           IMPORT  -----   function
;_data_X_ex                          STATIC     26   variable
;_sprintf                            IMPORT  -----   function
;_os_RealToStr                       IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_lbl_SSA                            STATIC      8   variable
;_los_Angle_x                        IMPORT  -----   function
;_loc_Side_x                         IMPORT  -----   function
;_lbl_SAS                            STATIC      4   variable
;_lbl_ASA                            STATIC      4   variable
;_trig_HeronsFormula                 STATIC  -----   function
;_triangle                           STATIC     72   variable
;_los_Side_x                         IMPORT  -----   function
;_lbl_AAS                            STATIC      4   variable
;_trig_SolveSSS                      STATIC  -----   function
;_lp_PrintColor                      IMPORT  -----   function
;_lbl_SSS                            STATIC      4   variable
;_lp_SetLabel                        IMPORT  -----   function
;_ui_Type                            STATIC     26   variable
;_lp_Clear                           IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;_trig_Sync                          STATIC  -----   function
;_trig_SolveMissingAngle             STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;cbuf                                 IX-58     20   variable
;cbuf2                                IX-38     20   variable
;real180                              IX-18      9   variable
;rbuf                                  IX-9      9   variable


; Stack Frame Size: 367 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__60:
	DB	"*C = %s"
	DB	0
L__64:
	DB	"*C = %s"
	DB	0
L__68:
	DB	"*B = %s"
	DB	0
	SEGMENT CODE
;  583	
;  584	static void ui_ClearMeasurements()
;  585	{
_ui_ClearMeasurements:
	LD	HL,-3
	CALL	__frameset
;  586		int i = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  587		for (; i < 2; i++)
	JR	L_196
L_194:
;  588		{
;  589			lp_Clear(&xmeasureData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  590		}
L_196:
	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_194
;  591		dbg_sprintf(dbgout, "[UI] Cleared measurements\n");
;  592	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_xmeasureData                       STATIC     52   variable
;_lp_Clear                           IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;  593	
;  594	static void ui_ClearAngleSideData()
;  595	{
_ui_ClearAngleSideData:
	LD	HL,-3
	CALL	__frameset
;  596		int i = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  597		for (; i < 3; i++)
	JR	L_203
L_201:
;  598		{
;  599			lp_Clear(&xsidesData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  600			lp_Clear(&xanglesData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  601		}
L_203:
	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_201
;  602		dbg_sprintf(dbgout, "[UI] Cleared angle and side data\n");
;  603	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_ClearAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_lp_Clear                           IMPORT  -----   function
;i                                     IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;  604	
;  605	static void trig_SelectSide()
;  606	{
_trig_SelectSide:
	LD	HL,-64
	CALL	__frameset
;  607		uint8_t key;
;  608		labelpoint_t* currentSelection = &Point_Side_b; // start at b
	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  609		lp_Highlight(&Point_Side_b);
	PUSH	BC
	CALL	_lp_Highlight
	POP	BC
;  610		RECURSE:
;  611		while ((key = os_GetCSC()) != sk_Enter)
	JR	L_237
L_238:
;  612		{
;  613			if (key == sk_Clear)
	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_252
;  614			{
;  615				return;
;  616			}
;  617	
;  618			if (key == sk_Zoom)
	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_215
;  619			{
;  620				if (ui_bDispMeasurements)
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_210
;  621				{
;  622					ui_bDispMeasurements = false;
	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  623					ui_ClearMeasurements();
	CALL	_ui_ClearMeasurements
;  624				}
;  625				else
	JR	L_211
L_210:
;  626				{
;  627					ui_bDispMeasurements = true;
	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  628					ui_ClearAngleSideData();
	CALL	_ui_ClearAngleSideData
;  629				}
L_211:
;  630				ui_DispData();
	CALL	_ui_DispData
;  631			}
L_215:
;  632	
;  633			if (key == sk_Trace)
	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_217
;  634			{
;  635				trig_Reset();
	CALL	_trig_Reset
;  636				currentSelection = &Point_Side_b;
	LD	BC,_xsides+26
	LD	(IX+-3),BC
;  637				lp_Highlight(&Point_Side_b);
	PUSH	BC
	CALL	_lp_Highlight
	POP	BC
;  638			}
L_217:
;  639	
;  640			if (key == sk_Graph)
	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_220
;  641			{
;  642				lp_Clear(&ui_Mode);
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  643				lp_SetLabel(&ui_Mode, lbl_AngleMode);
	LD	BC,_lbl_AngleMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  644				lp_Print(&ui_Mode);
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  645				lp_ClearHighlight(currentSelection);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_lp_ClearHighlight
	POP	BC
;  646				trig_SelectAngle();
	CALL	_trig_SelectAngle
;  647				return;
	JR	L_252
;  648			}
L_220:
;  649	
;  650			/* bbb -> aaa */
;  651			if (key == sk_Right && lp_Equal(*currentSelection, Point_Side_b))
	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_223
	LD	BC,_xsides+26
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),IY	; spill
	LD	IY,0
	LD	(IX+-49),IY	; spill
	LD	IY,(IX+-46)	; unspill
	LD	(IX+-16),BC
	LD	HL,BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,(IX+-49)	; unspill
	ADD	IY,SP
	LD	(IX+-49),IY	; spill
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_223
;  652			{
;  653				lp_SetFocus(&currentSelection, &Point_Side_b, &Point_Side_a);
	LD	BC,_xsides
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  654			}
L_223:
;  655	
;  656			/* bbb -> ccc */
;  657			if (key == sk_Down && lp_Equal(*currentSelection, Point_Side_b))
	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_227
	LD	BC,_xsides+26
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),IY	; spill
	LD	IY,0
	LD	(IX+-52),IY	; spill
	LD	IY,(IX+-46)	; unspill
	LD	(IX+-7),BC
	LD	HL,BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,(IX+-52)	; unspill
	ADD	IY,SP
	LD	(IX+-52),IY	; spill
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_227
;  658			{
;  659				lp_SetFocus(&currentSelection, &Point_Side_b, &Point_Side_c);
	LD	BC,_xsides+52
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  660			}
L_227:
;  661	
;  662			/* ccc -> bbb */
;  663			if ((key == sk_Up || key == sk_Left) && lp_Equal(*currentSelection, Point_Side_c))
	LD	A,(IX+-4)
	CP	A,4
	JR	Z,L_225
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_230
L_225:
	LD	BC,_xsides+52
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),IY	; spill
	LD	IY,0
	LD	(IX+-55),IY	; spill
	LD	IY,(IX+-46)	; unspill
	LD	(IX+-10),BC
	LD	HL,BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,(IX+-55)	; unspill
	ADD	IY,SP
	LD	(IX+-55),IY	; spill
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_230
;  664			{
;  665				lp_SetFocus(&currentSelection, &Point_Side_c, &Point_Side_b);
	LD	BC,_xsides+26
	PUSH	BC
	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  666			}
L_230:
;  667	
;  668			/* ccc -> aaa */
;  669			if (key == sk_Right && lp_Equal(*currentSelection, Point_Side_c))
	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_233
	LD	BC,_xsides+52
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),IY	; spill
	LD	IY,0
	LD	(IX+-58),IY	; spill
	LD	IY,(IX+-46)	; unspill
	LD	(IX+-13),BC
	LD	HL,BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,(IX+-58)	; unspill
	ADD	IY,SP
	LD	(IX+-58),IY	; spill
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_233
;  670			{
;  671				lp_SetFocus(&currentSelection, &Point_Side_c, &Point_Side_a);
	LD	BC,_xsides
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  672			}
L_233:
;  673	
;  674			/* aaa -> bbb */
;  675			if (key == sk_Left && lp_Equal(*currentSelection, Point_Side_a))
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_236
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LEA	IY,IY+-27
	LD	SP,IY
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_236
;  676			{
;  677				lp_SetFocus(&currentSelection, &Point_Side_a, &Point_Side_b);
	LD	BC,_xsides+26
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  678			}
L_236:
;  679	
;  680			/* aaa -> ccc */
;  681			if (key == sk_Down && lp_Equal(*currentSelection, Point_Side_a))
	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_237
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LEA	IY,IY+-27
	LD	SP,IY
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_237
;  682			{
;  683				lp_SetFocus(&currentSelection, &Point_Side_a, &Point_Side_c);
	LD	BC,_xsides+52
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  684			}
;  685		}
L_237:
	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_238
;  686	
;  687		if (lp_Equal(*currentSelection, Point_Side_a))
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LEA	IY,IY+-27
	LD	SP,IY
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xsides
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_246
;  688		{
;  689			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", Point_Side_a.label);
;  690			triangle.a   = io_gfx_ReadReal(&Point_Side_a);
	LD	BC,_xsides
	PUSH	BC
	PEA	IX+-25
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+27
	LD	BC,9
	LDIR	
;  691			trigstatus.a = true;
	LD	A,1
	LD	(_trigstatus),A
;  692		}
L_246:
;  693	
;  694		if (lp_Equal(*currentSelection, Point_Side_b))
	LD	HL,_xsides+26
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),IY	; spill
	LD	IY,0
	LD	(IX+-61),IY	; spill
	LD	IY,(IX+-46)	; unspill
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,(IX+-61)	; unspill
	ADD	IY,SP
	LD	(IX+-61),IY	; spill
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_250
;  695		{
;  696			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", Point_Side_b.label);
;  697			triangle.b   = io_gfx_ReadReal(&Point_Side_b);
	LD	BC,_xsides+26
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+36
	LD	BC,9
	LDIR	
;  698			trigstatus.b = true;
	LD	A,1
	LD	(_trigstatus+1),A
;  699		}
L_250:
;  700	
;  701		if (lp_Equal(*currentSelection, Point_Side_c))
	LD	HL,_xsides+52
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),IY	; spill
	LD	IY,0
	LD	(IX+-64),IY	; spill
	LD	IY,(IX+-46)	; unspill
	LEA	IY,IY+-27
	LD	SP,IY
	LD	IY,(IX+-64)	; unspill
	ADD	IY,SP
	LD	(IX+-64),IY	; spill
	LD	DE,IY
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_251
;  702		{
;  703			dbg_sprintf(dbgout, "[Trig] User selected side %s\n", Point_Side_c.label);
;  704			triangle.c   = io_gfx_ReadReal(&Point_Side_c);
	LD	BC,_xsides+52
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+45
	LD	BC,9
	LDIR	
;  705			trigstatus.c = true;
	LD	A,1
	LD	(_trigstatus+2),A
;  706		}
L_251:
;  707	
;  708		trig_CheckSolvability();
	CALL	_trig_CheckSolvability
;  709		lp_Highlight(currentSelection);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_lp_Highlight
	POP	BC
;  710		goto RECURSE;
	JR	L_237
;  711	
;  712	}
L_252:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectSide ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_lp_SetFocus                        IMPORT  -----   function
;_lp_Equal                           IMPORT  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_lp_ClearHighlight                  IMPORT  -----   function
;_lp_Print                           IMPORT  -----   function
;_lbl_AngleMode                      STATIC     11   variable
;_lp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_lp_Clear                           IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_lp_Highlight                       IMPORT  -----   function
;_xsides                             STATIC     78   variable
;G_0                                  IX-16      3   variable
;G_3                                  IX-13      3   variable
;G_2                                  IX-10      3   variable
;G_1                                   IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 70 (bytes)
;       Spill Code: -6 (instruction)


;  713	
;  714	static void trig_Quit()
;  715	{
_trig_Quit:
;  716		gfx_ZeroScreen();
	CALL	_gfx_ZeroScreen
;  717		gfx_End();
	CALL	_gfx_End
;  718		dbg_sprintf(dbgout, "[Trig] Zeroed screen and ended GFX\n");
;  719	}
	RET	


;**************************** _trig_Quit ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_gfx_ZeroScreen                     IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: -6 (instruction)


;  720	
;  721	static void trig_Reset()
;  722	{
_trig_Reset:
	LD	HL,-12
	CALL	__frameset
;  723		int i = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  724		bool  * bptr = (bool*) &trigstatus;
;  725		real_t* rptr = (real_t*) &triangle;
;  726		for (; i < sizeof(trigstatus) / sizeof(bool); i++)
	JR	L_258
L_256:
;  727		{
;  728			bptr[i] = false;
	LD	BC,_trigstatus
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	(HL),0
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  729		}
L_258:
	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_256
;  730		for (i = 0; i < sizeof(triangle) / sizeof(real_t); i++)
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_262
L_260:
;  731		{
;  732			rptr[i] = os_Int24ToReal(0);
	LD	BC,0
	PUSH	BC
	PEA	IX+-12
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,(IX+-3)
	LD	A,9
	CALL	__imul_b
	LD	DE,_triangle
	ADD	HL,DE
	LD	DE,HL
	LD	HL,BC
	LD	BC,9
	LDIR	
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  733		}
L_262:
	LD	BC,8
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JR	C,L_260
;  734		for (i = 0; i < 3; i++)
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_267
L_265:
;  735		{
;  736			lp_Clear(&xanglesData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  737			lib_MemZero(xanglesData[i].label + kLabelOffset, 16);
	LD	A,26
	LD	BC,_xanglesData
	LD	DE,16
	PUSH	DE
	LD	HL,(IX+-3)
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  738	
;  739			lp_Clear(&xsidesData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  740			lib_MemZero(xsidesData[i].label + kLabelOffset, 16);
	LD	A,26
	LD	BC,_xsidesData
	LD	DE,16
	PUSH	DE
	LD	HL,(IX+-3)
	CALL	__imul_b
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  741		}
L_267:
	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_265
;  742		lp_Clear(&ui_Type);
	LD	BC,_ui_Type
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  743		lp_Clear(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  744		lib_MemZero(data_X_ex.label + kLabelOffset, 16);
	LD	BC,16
	PUSH	BC
	LD	BC,_data_X_ex+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  745	
;  746		lp_Clear(&xmeasureData[0]);
	LD	BC,_xmeasureData
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  747		lp_Clear(&xmeasureData[1]);
	LD	BC,_xmeasureData+26
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  748		lib_MemZero(xmeasureData[0].label + kLabelOffset, 20 - kLabelOffset);
	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  749		lib_MemZero(xmeasureData[1].label + kLabelOffset, 20 - kLabelOffset);
	LD	BC,16
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_lib_MemZero
	POP	BC
	POP	BC
;  750	
;  751		lp_SetLabel(&Point_Angle_A, "A");
	LD	BC,L__101
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  752		lp_SetLabel(&Point_Angle_B, "B");
	LD	BC,L__102
	PUSH	BC
	LD	BC,_xangles+26
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  753		lp_SetLabel(&Point_Angle_C, "C");
	LD	BC,L__103
	PUSH	BC
	LD	BC,_xangles+52
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  754		lp_SetLabel(&Point_Side_a, "a");
	LD	BC,L__104
	PUSH	BC
	LD	BC,_xsides
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  755		lp_SetLabel(&Point_Side_b, "b");
	LD	BC,L__105
	PUSH	BC
	LD	BC,_xsides+26
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  756		lp_SetLabel(&Point_Side_c, "c");
	LD	BC,L__106
	PUSH	BC
	LD	BC,_xsides+52
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  757		trig_Redraw();
	CALL	_trig_Redraw
;  758		trig_DrawTriangleSides();
	CALL	_trig_DrawTriangleSides
;  759		trig_Sync();
	CALL	_trig_Sync
;  760	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_Reset ***************************
;Name                         Addr/Register   Size   Type
;_trig_Sync                          STATIC  -----   function
;_trig_DrawTriangleSides             STATIC  -----   function
;_trig_Redraw                        STATIC  -----   function
;_xsides                             STATIC     78   variable
;_xangles                            STATIC     78   variable
;_lp_SetLabel                        IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_data_X_ex                          STATIC     26   variable
;_ui_Type                            STATIC     26   variable
;_xsidesData                         STATIC     78   variable
;_lib_MemZero                        IMPORT  -----   function
;_xanglesData                        STATIC     78   variable
;_lp_Clear                           IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_Int24ToReal                     IMPORT  -----   function
;_trigstatus                         STATIC      8   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 18 (bytes)
;       Spill Code: -6 (instruction)


	SEGMENT STRSECT
L__101:
	DB	"A"
	DB	0
L__102:
	DB	"B"
	DB	0
L__103:
	DB	"C"
	DB	0
L__104:
	DB	"a"
	DB	0
L__105:
	DB	"b"
	DB	0
L__106:
	DB	"c"
	DB	0
	SEGMENT CODE
;  761	
;  762	static void trig_DrawTriangleSides()
;  763	{
_trig_DrawTriangleSides:
	LD	HL,-42
	CALL	__frameset
;  764		int index = 0;
;  765	
;  766		/* Triangle coordinates */
;  767		const int verts[6] = {
;  768				140, 10,   /* (x0, y0) */
;  769				10, 119,  /* (x1, y1) */
;  770				209, 119, /* (x2, y2) */
;  771		};
	LEA	DE,IX+-36
	LD	HL,_0temp271
	LD	BC,18
;  772	
;  773		/* Leg a */
;  774		gfx_Line(verts[0], verts[1], verts[2], verts[3]);
	LEA	IY,IX+-36
	LD	(IX+-39),HL	; spill
	LEA	HL,IY+9
	LD	(IX+-42),HL	; spill
	LD	HL,(IX+-39)	; unspill
	LDIR	
	LD	HL,(IX+-42)	; unspill
	LD	(IX+-9),HL
	LEA	BC,IY+6
	LD	(IX+-6),BC
	LEA	IY,IX+-33
	LD	(IX+-18),IY
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  775	
;  776		/* Leg b */
;  777		gfx_Line(verts[2], verts[3], verts[4], verts[5]);
	LEA	BC,IX+-21
	LD	(IX+-15),BC
	LEA	IY,IX+-24
	LD	(IX+-12),IY
	LD	HL,BC
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-9)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-6)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  778	
;  779		/* Hypotenuse */
;  780		gfx_Line(verts[4], verts[5], verts[0], verts[1]);
	LD	HL,(IX+-18)
	LD	BC,(HL)
	PUSH	BC
	LD	BC,(IX+-36)
	PUSH	BC
	LD	HL,(IX+-15)
	LD	BC,(HL)
	PUSH	BC
	LD	HL,(IX+-12)
	LD	BC,(HL)
	PUSH	BC
	CALL	_gfx_Line
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  781	
;  782	
;  783		// Angles A, B, C
;  784		trig_Redraw();
	CALL	_trig_Redraw
;  785	
;  786		// Leg a, b, c
;  787		for (index = 0; index < 3; index++)
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_275
L_273:
;  788		{
;  789			lp_Print(&xsides[index]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xsides
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  790		}
L_275:
	LD	BC,3
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_273
;  791	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_DrawTriangleSides ***************************
;Name                         Addr/Register   Size   Type
;_xsides                             STATIC     78   variable
;_lp_Print                           IMPORT  -----   function
;_trig_Redraw                        STATIC  -----   function
;_gfx_Line                           IMPORT  -----   function
;_0temp271                           STATIC     18   variable
;verts                                IX-36     18   variable
;G_10                                 IX-18      3   variable
;G_8                                  IX-15      3   variable
;G_9                                  IX-12      3   variable
;G_6                                   IX-9      3   variable
;G_7                                   IX-6      3   variable
;index                                 IX-3      3   variable


; Stack Frame Size: 48 (bytes)
;       Spill Code: -6 (instruction)


	SEGMENT TEXT
_0temp271:
	DW	140
	DB	0
	DW	10
	DB	0
	DW	10
	DB	0
	DW	119
	DB	0
	DW	209
	DB	0
	DW	119
	DB	0
	SEGMENT CODE
;  792	
;  793	static void ui_DispData()
;  794	{
_ui_DispData:
;  795		if (ui_bDispMeasurements)
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_279
;  796		{
;  797			ui_DispMeasurements();
	CALL	_ui_DispMeasurements
;  798		}
;  799		else if (!ui_bDispMeasurements)
	JR	L_280
L_279:
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	NZ,L_280
;  800		{
;  801			ui_DispAngleSideData();
	CALL	_ui_DispAngleSideData
;  802		}
;  803	}
L_280:
	RET	


;**************************** _ui_DispData ***************************
;Name                         Addr/Register   Size   Type
;_ui_DispAngleSideData               STATIC  -----   function
;_ui_DispMeasurements                STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable


; Stack Frame Size: 6 (bytes)
;       Spill Code: -6 (instruction)


;  804	
;  805	static void trig_SelectAngle()
;  806	{
_trig_SelectAngle:
	LD	HL,-64
	CALL	__frameset
;  807		uint8_t key;
;  808		labelpoint_t* currentSelection = &Point_Angle_A;
	LD	BC,_xangles
	LD	(IX+-3),BC
;  809		lp_Highlight(&Point_Angle_A);
	PUSH	BC
	CALL	_lp_Highlight
	POP	BC
;  810		RECURSE:
;  811		while ((key = os_GetCSC()) != sk_Enter)
	JR	L_310
L_311:
;  812		{
;  813			if (key == sk_Clear)
	LD	A,(IX+-4)
	CP	A,15
	JR	Z,L_325
;  814			{
;  815				return;
;  816			}
;  817	
;  818			if (key == sk_Zoom)
	LD	A,(IX+-4)
	CP	A,51
	JR	NZ,L_289
;  819			{
;  820				if (ui_bDispMeasurements)
	LD	A,(_ui_bDispMeasurements)
	OR	A,A
	JR	Z,L_284
;  821				{
;  822					ui_bDispMeasurements = false;
	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  823					ui_ClearMeasurements();
	CALL	_ui_ClearMeasurements
;  824				}
;  825				else
	JR	L_285
L_284:
;  826				{
;  827					ui_bDispMeasurements = true;
	LD	A,1
	LD	(_ui_bDispMeasurements),A
;  828					ui_ClearAngleSideData();
	CALL	_ui_ClearAngleSideData
;  829				}
L_285:
;  830				ui_DispData();
	CALL	_ui_DispData
;  831			}
L_289:
;  832	
;  833			if (key == sk_Trace)
	LD	A,(IX+-4)
	CP	A,50
	JR	NZ,L_291
;  834			{
;  835				trig_Reset();
	CALL	_trig_Reset
;  836				currentSelection = &Point_Angle_A;
	LD	BC,_xangles
	LD	(IX+-3),BC
;  837				lp_Highlight(&Point_Angle_A);
	PUSH	BC
	CALL	_lp_Highlight
	POP	BC
;  838			}
L_291:
;  839	
;  840			if (key == sk_Graph)
	LD	A,(IX+-4)
	CP	A,49
	JR	NZ,L_294
;  841			{
;  842				lp_Clear(&ui_Mode);
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  843				lp_SetLabel(&ui_Mode, lbl_SideMode);
	LD	BC,_lbl_SideMode
	PUSH	BC
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_SetLabel
	POP	BC
	POP	BC
;  844				lp_Print(&ui_Mode);
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  845				lp_ClearHighlight(currentSelection);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_lp_ClearHighlight
	POP	BC
;  846				trig_SelectSide();
	CALL	_trig_SelectSide
;  847				return;
	JR	L_325
;  848			}
L_294:
;  849	
;  850			/* AAA -> BBB */
;  851			if (key == sk_Right && lp_Equal(*currentSelection, Point_Angle_A))
	LD	A,(IX+-4)
	CP	A,3
	JR	NZ,L_297
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LEA	IY,IY+-27
	LD	SP,IY
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_297
;  852			{
;  853				lp_SetFocus(&currentSelection, &Point_Angle_A, &Point_Angle_B);
	LD	BC,_xangles+26
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  854			}
L_297:
;  855	
;  856			/* AAA -> CCC */
;  857			if (key == sk_Up && lp_Equal(*currentSelection, Point_Angle_A))
	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_300
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LEA	IY,IY+-27
	LD	SP,IY
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_300
;  858			{
;  859				lp_SetFocus(&currentSelection, &Point_Angle_A, &Point_Angle_C);
	LD	BC,_xangles+52
	PUSH	BC
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  860			}
L_300:
;  861	
;  862			/* BBB -> AAA */
;  863			if (key == sk_Left && lp_Equal(*currentSelection, Point_Angle_B))
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_303
	LD	BC,_xangles+26
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LD	(IX+-49),HL	; spill
	LD	(IX+-16),BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	(IX+-46),BC	; spill
	LD	HL,(IX+-49)	; unspill
	ADD	HL,SP
	LD	(IX+-49),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-49)	; unspill
	LD	DE,HL
	LD	HL,(IX+-46)	; unspill
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_303
;  864			{
;  865				lp_SetFocus(&currentSelection, &Point_Angle_B, &Point_Angle_A);
	LD	BC,_xangles
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  866			}
L_303:
;  867	
;  868			/* BBB -> CCC */
;  869			if (key == sk_Up && lp_Equal(*currentSelection, Point_Angle_B))
	LD	A,(IX+-4)
	CP	A,4
	JR	NZ,L_306
	LD	BC,_xangles+26
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LD	(IX+-52),HL	; spill
	LD	(IX+-7),BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	(IX+-46),BC	; spill
	LD	HL,(IX+-52)	; unspill
	ADD	HL,SP
	LD	(IX+-52),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-52)	; unspill
	LD	DE,HL
	LD	HL,(IX+-46)	; unspill
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_306
;  870			{
;  871				lp_SetFocus(&currentSelection, &Point_Angle_B, &Point_Angle_C);
	LD	BC,_xangles+52
	PUSH	BC
	LD	BC,(IX+-7)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  872			}
L_306:
;  873	
;  874			/* CCC -> AAA */
;  875			if (key == sk_Left && lp_Equal(*currentSelection, Point_Angle_C))
	LD	A,(IX+-4)
	CP	A,2
	JR	NZ,L_309
	LD	BC,_xangles+52
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LD	(IX+-55),HL	; spill
	LD	(IX+-10),BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	(IX+-46),BC	; spill
	LD	HL,(IX+-55)	; unspill
	ADD	HL,SP
	LD	(IX+-55),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-55)	; unspill
	LD	DE,HL
	LD	HL,(IX+-46)	; unspill
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_309
;  876			{
;  877				lp_SetFocus(&currentSelection, &Point_Angle_C, &Point_Angle_A);
	LD	BC,_xangles
	PUSH	BC
	LD	BC,(IX+-10)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  878			}
L_309:
;  879	
;  880			/* CCC -> BBB */
;  881			if (key == sk_Down && lp_Equal(*currentSelection, Point_Angle_C))
	LD	A,(IX+-4)
	CP	A,1
	JR	NZ,L_310
	LD	BC,_xangles+52
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LD	(IX+-58),HL	; spill
	LD	(IX+-13),BC
	LEA	IY,IY+-27
	LD	SP,IY
	LD	(IX+-46),BC	; spill
	LD	HL,(IX+-58)	; unspill
	ADD	HL,SP
	LD	(IX+-58),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-58)	; unspill
	LD	DE,HL
	LD	HL,(IX+-46)	; unspill
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_310
;  882			{
;  883				lp_SetFocus(&currentSelection, &Point_Angle_C, &Point_Angle_B);
	LD	BC,_xangles+26
	PUSH	BC
	LD	BC,(IX+-13)
	PUSH	BC
	PEA	IX+-3
	CALL	_lp_SetFocus
	POP	BC
	POP	BC
	POP	BC
;  884			}
;  885		}
L_310:
	CALL	_os_GetCSC
	LD	(IX+-4),A
	CP	A,9
	JR	NZ,L_311
;  886	
;  887		if (lp_Equal(*currentSelection, Point_Angle_A))
	LD	IY,0
	ADD	IY,SP
	OR	A,A
	SBC	HL,HL
	LEA	IY,IY+-27
	LD	SP,IY
	ADD	HL,SP
	LD	DE,HL
	LD	HL,_xangles
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_319
;  888		{
;  889			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", Point_Angle_A.label);
;  890			triangle.A   = io_gfx_ReadReal(&Point_Angle_A);
	LD	BC,_xangles
	PUSH	BC
	PEA	IX+-25
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle
	LD	BC,9
	LDIR	
;  891			trigstatus.A = true;
	LD	A,1
	LD	(_trigstatus+3),A
;  892		}
L_319:
;  893	
;  894		if (lp_Equal(*currentSelection, Point_Angle_B))
	LD	HL,_xangles+26
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),HL	; spill
	OR	A,A
	SBC	HL,HL
	LD	(IX+-61),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LEA	IY,IY+-27
	LD	SP,IY
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-61)	; unspill
	ADD	HL,SP
	LD	(IX+-61),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-61)	; unspill
	LD	DE,HL
	LD	HL,(IX+-46)	; unspill
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_323
;  895		{
;  896			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", Point_Angle_B.label);
;  897			triangle.B   = io_gfx_ReadReal(&Point_Angle_B);
	LD	BC,_xangles+26
	PUSH	BC
	PEA	IX+-34
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+9
	LD	BC,9
	LDIR	
;  898			trigstatus.B = true;
	LD	A,1
	LD	(_trigstatus+4),A
;  899		}
L_323:
;  900	
;  901		if (lp_Equal(*currentSelection, Point_Angle_C))
	LD	HL,_xangles+52
	LD	IY,0
	ADD	IY,SP
	LD	(IX+-46),HL	; spill
	OR	A,A
	SBC	HL,HL
	LD	(IX+-64),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LEA	IY,IY+-27
	LD	SP,IY
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-64)	; unspill
	ADD	HL,SP
	LD	(IX+-64),HL	; spill
	LD	HL,(IX+-46)	; unspill
	LD	(IX+-46),HL	; spill
	LD	HL,(IX+-64)	; unspill
	LD	DE,HL
	LD	HL,(IX+-46)	; unspill
	LD	BC,26
	LDIR	
	LD	IY,0
	ADD	IY,SP
	LEA	IY,IY+-27
	LD	HL,(IX+-3)
	LD	SP,IY
	LD	IY,0
	ADD	IY,SP
	LD	DE,IY
	LD	BC,26
	LDIR	
	CALL	_lp_Equal
	LD	IY,54
	ADD	IY,SP
	LD	SP,IY
	OR	A,A
	JR	Z,L_324
;  902		{
;  903			dbg_sprintf(dbgout, "[Trig] User selected angle %s\n", Point_Angle_C.label);
;  904			triangle.C   = io_gfx_ReadReal(&Point_Angle_C);
	LD	BC,_xangles+52
	PUSH	BC
	PEA	IX+-43
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LD	DE,_triangle+18
	LD	BC,9
	LDIR	
;  905			trigstatus.C = true;
	LD	A,1
	LD	(_trigstatus+5),A
;  906		}
L_324:
;  907	
;  908		trig_CheckSolvability();
	CALL	_trig_CheckSolvability
;  909		lp_Highlight(currentSelection);
	LD	BC,(IX+-3)
	PUSH	BC
	CALL	_lp_Highlight
	POP	BC
;  910		goto RECURSE;
	JR	L_310
;  911	}
L_325:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _trig_SelectAngle ***************************
;Name                         Addr/Register   Size   Type
;_trig_CheckSolvability              STATIC  -----   function
;_trigstatus                         STATIC      8   variable
;_triangle                           STATIC     72   variable
;_io_gfx_ReadReal                    IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_lp_SetFocus                        IMPORT  -----   function
;_lp_Equal                           IMPORT  -----   function
;_trig_SelectSide                    STATIC  -----   function
;_lp_ClearHighlight                  IMPORT  -----   function
;_lp_Print                           IMPORT  -----   function
;_lbl_SideMode                       STATIC     10   variable
;_lp_SetLabel                        IMPORT  -----   function
;_ui_Mode                            STATIC     26   variable
;_lp_Clear                           IMPORT  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_DispData                        STATIC  -----   function
;_ui_ClearAngleSideData              STATIC  -----   function
;_ui_ClearMeasurements               STATIC  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_lp_Highlight                       IMPORT  -----   function
;_xangles                            STATIC     78   variable
;G_11                                 IX-16      3   variable
;G_14                                 IX-13      3   variable
;G_13                                 IX-10      3   variable
;G_12                                  IX-7      3   variable
;key                                   IX-4      1   variable
;currentSelection                      IX-3      3   variable


; Stack Frame Size: 70 (bytes)
;       Spill Code: -6 (instruction)


;  912	
;  913	static void ui_DispMeasurements()
;  914	{
_ui_DispMeasurements:
	LD	HL,-41
	CALL	__frameset
;  915		char         buffer[20];
;  916		const real_t real0 = os_Int24ToReal(0);
	LD	BC,0
	PUSH	BC
	PEA	IX+-41
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-12
	LD	BC,9
	LDIR	
;  917		int          i     = 0;
	LD	BC,0
	LD	(IX+-3),BC
;  918	
;  919		for (; i < 2; i++)
	JR	L_329
L_327:
;  920		{
;  921			lp_Clear(&xmeasureData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  922		}
L_329:
	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	JP	M,L_327
;  923	
;  924		if (os_RealCompare(&triangle.area, &real0) == 0)
	PEA	IX+-12
	LD	BC,_triangle+54
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_331
;  925		{
;  926			strcpy(xmeasureData[0].label + kLabelOffset, lbl_Unknown);
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  927		}
;  928		else
	JR	L_335
L_331:
;  929		{
;  930			os_RealToStr(buffer, &triangle.area, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+54
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  931			strncpy(xmeasureData[0].label + kLabelOffset, buffer, 20 - kLabelOffset);
	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+10
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  932		}
L_335:
;  933	
;  934		if (os_RealCompare(&triangle.perimeter, &real0) == 0)
	PEA	IX+-12
	LD	BC,_triangle+63
	PUSH	BC
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_334
;  935		{
;  936			strcpy(xmeasureData[1].label + kLabelOffset, lbl_Unknown);
	LD	BC,_lbl_Unknown
	PUSH	BC
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  937		}
;  938		else
	JR	L_340
L_334:
;  939		{
;  940			os_RealToStr(buffer, &triangle.perimeter, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	LD	BC,_triangle+63
	PUSH	BC
	PEA	IX+-32
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;  941			strncpy(xmeasureData[1].label + kLabelOffset, buffer, 20 - kLabelOffset);
	LD	BC,16
	PUSH	BC
	PEA	IX+-32
	LD	BC,_xmeasureData+36
	PUSH	BC
	CALL	_strncpy
	POP	BC
	POP	BC
	POP	BC
;  942		}
L_340:
;  943	
;  944	
;  945		for (i = 0; i < 2; i++)
	LD	BC,0
	LD	(IX+-3),BC
	JR	L_339
L_337:
;  946		{
;  947			lp_Clear(&xmeasureData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  948			lp_Print(&xmeasureData[i]);
	LD	HL,(IX+-3)
	LD	A,26
	CALL	__imul_b
	LD	BC,_xmeasureData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Print
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;  949		}
L_339:
	LD	BC,2
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_337
;  950	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispMeasurements ***************************
;Name                         Addr/Register   Size   Type
;_lp_Print                           IMPORT  -----   function
;_strncpy                            IMPORT  -----   function
;_strcpy                             IMPORT  -----   function
;_strncpy                            IMPORT  -----   function
;_os_RealToStr                       IMPORT  -----   function
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_triangle                           STATIC     72   variable
;_os_RealCompare                     IMPORT  -----   function
;_xmeasureData                       STATIC     52   variable
;_lp_Clear                           IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buffer                               IX-32     20   variable
;real0                                IX-12      9   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 47 (bytes)
;       Spill Code: -6 (instruction)


;  951	
;  952	static void ui_DispAngleSideData()
;  953	{
_ui_DispAngleSideData:
	LD	HL,-24
	CALL	__frameset
;  954		int i = 0;
	LD	BC,0
	LD	(IX+-12),BC
;  955		for (; i < 3; i++)
	JR	L_355
L_353:
;  956		{
;  957			lp_Clear(&xsidesData[i]);
	LD	HL,(IX+-12)
	LD	A,26
	CALL	__imul_b
	LD	(IX+-3),HL
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  958			lp_Clear(&xanglesData[i]);
	LD	HL,(IX+-3)
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  959	
;  960			if (*xsides[i].label == 'a' || *xsides[i].label == 'b' || *xsides[i].label == 'c')
	LD	HL,(IX+-3)
	LD	BC,_xsides
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-15),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	OR	A,A
	LD	BC,97
	SBC	HL,BC
	JR	Z,L_345
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	OR	A,A
	LD	BC,98
	SBC	HL,BC
	JR	Z,L_345
	LD	HL,(IX+-15)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	OR	A,A
	LD	BC,99
	SBC	HL,BC
	JR	NZ,L_346
L_345:
;  961				strcpy(xsidesData[i].label + kLabelOffset, lbl_Unknown);
	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	BC,_xsidesData
	LD	DE,_lbl_Unknown
	PUSH	DE
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  962			else strcpy(xsidesData[i].label + kLabelOffset, xsides[i].label);
	JR	L_351
L_346:
	LD	BC,(IX+-3)
	LD	(IX+-21),BC
	LD	HL,(IX+-3)
	LD	BC,_xsides
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	HL,(IX+-3)
	LD	BC,_xsidesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_351:
;  963	
;  964			if (*xangles[i].label == 'A' || *xangles[i].label == 'B' || *xangles[i].label == 'C')
	LD	BC,(IX+-21)
	LD	(IX+-6),BC
	LD	HL,BC
	LD	BC,_xangles
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+6
	LD	(IX+-18),BC
	LD	HL,BC
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	OR	A,A
	LD	BC,65
	SBC	HL,BC
	JR	Z,L_349
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	OR	A,A
	LD	BC,66
	SBC	HL,BC
	JR	Z,L_349
	LD	HL,(IX+-18)
	LD	A,(HL)
	LD	B,A
	SEXT	HL
	LD	L,B
	OR	A,A
	LD	BC,67
	SBC	HL,BC
	JR	NZ,L_350
L_349:
;  965				strcpy(xanglesData[i].label + kLabelOffset, lbl_Unknown);
	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	BC,_xanglesData
	LD	DE,_lbl_Unknown
	PUSH	DE
	LD	HL,(IX+-6)
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
;  966			else strcpy(xanglesData[i].label + kLabelOffset, xangles[i].label);
	JR	L_352
L_350:
	LD	BC,(IX+-6)
	LD	(IX+-24),BC
	LD	HL,(IX+-6)
	LD	BC,_xangles
	ADD	HL,BC
	LD	IY,HL
	PEA	IY+6
	LD	HL,(IX+-6)
	LD	BC,_xanglesData
	ADD	HL,BC
	LD	IY,HL
	LEA	BC,IY+10
	PUSH	BC
	CALL	_strcpy
	POP	BC
	POP	BC
L_352:
;  967	
;  968			lp_Clear(&xanglesData[i]);
	LD	BC,(IX+-24)
	LD	(IX+-9),BC
	LD	HL,BC
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  969			lp_Print(&xanglesData[i]);
	LD	HL,(IX+-9)
	LD	BC,_xanglesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Print
	POP	BC
;  970	
;  971			lp_Clear(&xsidesData[i]);
	LD	HL,(IX+-9)
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Clear
	POP	BC
;  972			lp_Print(&xsidesData[i]);
	LD	HL,(IX+-9)
	LD	BC,_xsidesData
	ADD	HL,BC
	PUSH	HL
	CALL	_lp_Print
	POP	BC
	LD	BC,(IX+-12)
	INC	BC
	LD	(IX+-12),BC
;  973		}
L_355:
	LD	BC,3
	LD	HL,(IX+-12)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_353
;  974		if (trigstatus.isSSA)
	LD	A,(_trigstatus+7)
	OR	A,A
	JR	Z,L_358
;  975		{
;  976			lp_Clear(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  977			lp_Print(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  978		}
;  979		else if (!trigstatus.isSSA)
	JR	L_360
L_358:
	LD	A,(_trigstatus+7)
	OR	A,A
	JR	NZ,L_360
;  980		{
;  981			lp_Clear(&data_X_ex);
	LD	BC,_data_X_ex
	PUSH	BC
	CALL	_lp_Clear
	POP	BC
;  982		}
;  983	}
L_360:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _ui_DispAngleSideData ***************************
;Name                         Addr/Register   Size   Type
;_data_X_ex                          STATIC     26   variable
;_trigstatus                         STATIC      8   variable
;_lp_Print                           IMPORT  -----   function
;_xangles                            STATIC     78   variable
;_lbl_Unknown                        STATIC      2   variable
;_strcpy                             IMPORT  -----   function
;_xsides                             STATIC     78   variable
;_xanglesData                        STATIC     78   variable
;_xsidesData                         STATIC     78   variable
;_lp_Clear                           IMPORT  -----   function
;G_28                                 IX-24      3   variable
;G_23                                 IX-21      3   variable
;G_24                                 IX-18      3   variable
;G_19                                 IX-15      3   variable
;i                                    IX-12      3   variable
;G_29                                  IX-9      3   variable
;G_26                                  IX-6      3   variable
;G_17                                  IX-3      3   variable


; Stack Frame Size: 30 (bytes)
;       Spill Code: -6 (instruction)


;  984	
;  985	void trig_SolveTriangle()
;  986	{
_trig_SolveTriangle:
;  987		os_ClrHome();
	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
;  988	
;  989		ui_bDispMeasurements = false;
	XOR	A,A
	LD	(_ui_bDispMeasurements),A
;  990	
;  991		gfx_Begin();
	CALL	_gfx_Begin
;  992		gfx_SetColor(gfx_blue);
	LD	BC,16
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;  993		gfx_SetTextFGColor(gfx_black);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;  994	
;  995		lp_Print(&ui_Mode);
	LD	BC,_ui_Mode
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  996		lp_Print(&ui_btn_Mode);
	LD	BC,_ui_btn_Mode
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  997		lp_Print(&ui_btn_Clear);
	LD	BC,_ui_btn_Clear
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  998		lp_Print(&ui_btn_Data);
	LD	BC,_ui_btn_Data
	PUSH	BC
	CALL	_lp_Print
	POP	BC
;  999	
; 1000		trig_Reset();
	CALL	_trig_Reset
; 1001	
; 1002		trig_SelectAngle();
	CALL	_trig_SelectAngle
; 1003	
; 1004		trig_Quit();
	CALL	_trig_Quit
; 1005	}
	RET	


;**************************** _trig_SolveTriangle ***************************
;Name                         Addr/Register   Size   Type
;_trig_Quit                          STATIC  -----   function
;_trig_SelectAngle                   STATIC  -----   function
;_trig_Reset                         STATIC  -----   function
;_ui_btn_Data                        STATIC     26   variable
;_ui_btn_Clear                       STATIC     26   variable
;_ui_btn_Mode                        STATIC     26   variable
;_ui_Mode                            STATIC     26   variable
;_lp_Print                           IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_ui_bDispMeasurements               STATIC      1   variable
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_HomeUp                         IMPORT  -----   function
;_asm_ClrLCD                         IMPORT  -----   function
;__OS                                IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: -6 (instruction)


	XREF _strncpy:ROM
	XREF _strcpy:ROM
	XREF _loc_Angle_x:ROM
	XREF _loc_Side_x:ROM
	XREF _los_Angle_x:ROM
	XREF _los_Side_x:ROM
	XREF _os_RealSinDeg:ROM
	XREF _sprintf:ROM
	XREF _geo_RoundTriangle:ROM
	XREF _io_gfx_ReadReal:ROM
	XREF _lp_Clear:ROM
	XREF _lp_Print:ROM
	XREF _lp_SetFocus:ROM
	XREF _lp_PrintColor:ROM
	XREF _lp_Highlight:ROM
	XREF _lp_ClearHighlight:ROM
	XREF _lp_SetLabel:ROM
	XREF _lp_Equal:ROM
	XREF _g_uDigitThreshold:ROM
	XREF _g_uRound:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_Line:ROM
	XREF _gfx_ZeroScreen:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _lib_StrCut:ROM
	XREF _lib_MemZero:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCD:ROM
	XREF _asm_HomeUp:ROM
	XREF __OS:ROM
	XREF _os_GetCSC:ROM
	XREF _os_RealToStr:ROM
	XREF _os_FloatToReal:ROM
	XREF _os_Int24ToReal:ROM
	XREF _os_RealCompare:ROM
	XREF _os_RealSub:ROM
	XREF _os_RealMul:ROM
	XREF _os_RealDiv:ROM
	XREF _os_RealAdd:ROM
	XREF _os_RealSqrt:ROM
	XREF __ildix:ROM
	XREF __istix:ROM
	XREF __frameset:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XREF __imul_b:ROM
	XDEF _trig_SolveTriangle
	XDEF _trig_AreaBySin
	END
