; Zilog eZ80 ANSI C Compiler Release 3.4
; -debug -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\MAIN.C"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",6
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "rem"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",8
.DEFINE "quot"
.VALUE 0
.CLASS 8
.TYPE 5
.ENDEF
.DEFINE "rem"
.VALUE 4
.CLASS 8
.TYPE 5
.ENDEF
.ENDREC "NONAME1"
.BEGREC "header",6
.DEFINE "s"
.VALUE 0
.CLASS 11
.TAG "NONAME2"
.TYPE 8
.ENDEF
.DEFINE "x"
.VALUE 0
.CLASS 11
.TYPE 2
.ENDEF
.ENDREC "header"
.BEGREC "NONAME2",6
.DEFINE "ptr"
.VALUE 0
.CLASS 8
.TAG "header"
.TYPE 40
.ENDEF
.DEFINE "size"
.VALUE 3
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME2"
.BEGREC "NONAME3",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME3"
.BEGREC "NONAME4",3
.DEFINE "width"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME4"
.BEGREC "NONAME5",6
.DEFINE "x"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "y"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME5"
.BEGREC "NONAME6",12
.DEFINE "xmin"
.VALUE 0
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymin"
.VALUE 3
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "xmax"
.VALUE 6
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "ymax"
.VALUE 9
.CLASS 8
.TYPE 4
.ENDEF
.ENDREC "NONAME6"
.BEGREC "NONAME7",18
.DEFINE "map"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "tiles"
.VALUE 3
.CLASS 8
.TAG "NONAME3"
.TYPE 296
.ENDEF
.DEFINE "tile_height"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "tile_width"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_height"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "draw_width"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_width"
.VALUE 10
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "type_height"
.VALUE 11
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "height"
.VALUE 12
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "width"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "y_loc"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "x_loc"
.VALUE 15
.CLASS 8
.TYPE 14
.ENDEF
.ENDREC "NONAME7"
.BEGREC "NONAME8",9
.DEFINE "sign"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "mant"
.VALUE 2
.CLASS 8
.DIM 7
.TYPE 108
.ENDEF
.ENDREC "NONAME8"
.BEGREC "NONAME9",18
.DEFINE "real"
.VALUE 0
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "imag"
.VALUE 9
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.ENDREC "NONAME9"
.BEGREC "NONAME10",11
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME8"
.TYPE 104
.ENDEF
.ENDREC "NONAME10"
.BEGREC "NONAME11",20
.DEFINE "dim"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME9"
.TYPE 104
.ENDEF
.ENDREC "NONAME11"
.BEGREC "NONAME12",11
.DEFINE "cols"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "rows"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "items"
.VALUE 2
.CLASS 8
.DIM 1
.TAG "NONAME8"
.TYPE 104
.ENDEF
.ENDREC "NONAME12"
.BEGREC "NONAME13",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME13"
.BEGREC "NONAME14",3
.DEFINE "len"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 98
.ENDEF
.ENDREC "NONAME14"
.BEGREC "NONAME15",3
.DEFINE "size"
.VALUE 0
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "data"
.VALUE 2
.CLASS 8
.DIM 1
.TYPE 108
.ENDEF
.ENDREC "NONAME15"
.BEGREC "NONAME16",26
.DEFINE "point"
.VALUE 0
.CLASS 8
.TAG "NONAME5"
.TYPE 8
.ENDEF
.DEFINE "label"
.VALUE 6
.CLASS 8
.DIM 20
.TYPE 98
.ENDEF
.ENDREC "NONAME16"
.BEGREC "NONAME17",72
.DEFINE "A"
.VALUE 0
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "B"
.VALUE 9
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "C"
.VALUE 18
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "a"
.VALUE 27
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "b"
.VALUE 36
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "c"
.VALUE 45
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "area"
.VALUE 54
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.DEFINE "perimeter"
.VALUE 63
.CLASS 8
.TAG "NONAME8"
.TYPE 8
.ENDEF
.ENDREC "NONAME17"
.BEGREC "NONAME18",8
.DEFINE "a"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "b"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "c"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "A"
.VALUE 3
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "B"
.VALUE 4
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "C"
.VALUE 5
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "complete"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "isSSA"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "NONAME18"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
.BEGREC "__stdio_file",1
.DEFINE "slot"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "__stdio_file"
;    1	//
;    2	// Created by Decimation on 4/27/2018.
;    3	//
;    4	
;    5	#include "Main.h"
;    6	
;    7	void __lowlevel_GetCalcSerial() {
___lowlevel_GetCalcSerial:
.DEFINE "___lowlevel_GetCalcSerial"

.VALUE ___lowlevel_GetCalcSerial

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "__lowlevel_GetCalcSerial",7,"___lowlevel_GetCalcSerial"

.LINE 7

.DEFINE "i"

.CLASS 65

.VALUE -3

.TYPE 4

.ENDEF

.DEFINE "bytes"

.CLASS 65

.VALUE -8

.DIM 5

.TYPE 108

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-11
	LD	SP,HL
;    8		uint8_t* mem = (void*) 0x8478;
;    9		uint8_t bytes[5];
;   10		int i = 0;
.LINE 10

	LD	BC,0
	LD	(IX+-3),BC
;   11		_OS((void*)0x807E);
.LINE 11

	LD	BC,32894
	PUSH	BC
	CALL	__OS
	POP	BC
;   12		for (; i < 5; i++) {
.LINE 12

	JR	L_3
L_1:
;   13			bytes[i] = mem[i];
.LINE 13

	LD	BC,(IX+-3)
	LEA	HL,IX+-8
	ADD	HL,BC
	LD	(IX+-11),HL
	LD	BC,33912
	LD	HL,(IX+-3)
	ADD	HL,BC
	LD	IY,(IX+-11)
	LD	A,(HL)
	LD	(IY),A
;   14			dbg_sprintf(dbgout, "%d ", (uint8_t) bytes[i]);
.LINE 14

	LD	HL,(IX+-11)
	LD	A,(HL)
	UEXT	HL
	LD	L,A
	PUSH	HL
	LD	BC,L__0
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	LD	BC,(IX+-3)
	INC	BC
	LD	(IX+-3),BC
;   15		}
L_3:
.LINE 15

	LD	BC,5
	LD	HL,(IX+-3)
	OR	A,A
	SBC	HL,BC
	CALL	__setflag
	JP	M,L_1
;   16	
;   17	
;   18	}
.LINE 18

	LD	SP,IX
	POP	IX
	RET	


;**************************** ___lowlevel_GetCalcSerial ***************************
;Name                         Addr/Register   Size   Type
;_sprintf                            IMPORT  -----   function
;__OS                                IMPORT  -----   function
;bytes                                 IX-8      5   variable
;i                                     IX-3      3   variable


; Stack Frame Size: 17 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "__lowlevel_GetCalcSerial",18,"___lowlevel_GetCalcSerial"
	SEGMENT STRSECT
L__0:
	DB	"%d "
	DB	0
	SEGMENT CODE
;   19	
;   20	int main(void)
;   21	{
_main:
.DEFINE "_main"

.VALUE _main

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "main",21,"_main"

.LINE 21

.DEFINE "r"

.CLASS 65

.VALUE -9

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "real1"

.CLASS 65

.VALUE -18

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "real2"

.CLASS 65

.VALUE -27

.TAG "NONAME8"

.TYPE 8

.ENDEF

.DEFINE "buf"

.CLASS 65

.VALUE -47

.DIM 20

.TYPE 98

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	LEA	HL,IX+-74
	LD	SP,HL
;   22		char                      buf[20];
;   23		real_t                    r;
;   24		const real_t              real1   = os_Int24ToReal(1);
.LINE 24

	LD	BC,1
	PUSH	BC
	PEA	IX+-56
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-18
	LD	BC,9
	LDIR	
;   25		const real_t              real2   = os_Int24ToReal(2);
.LINE 25

	LD	BC,2
	PUSH	BC
	PEA	IX+-65
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-27
	LD	BC,9
	LDIR	
;   26		const static superpoint_t iopoint = {{12, 116}, "..."};
.LINE 26

.DEFINE "iopoint"

.ALIAS "_0iopoint"

.CLASS 84

.VALUE _0iopoint

.TAG "NONAME16"

.TYPE 8

.ENDEF

;   27		const static superpoint_t title   = {{12, 16}, "TITrig"};
.LINE 27

.DEFINE "title"

.ALIAS "_1title"

.CLASS 84

.VALUE _1title

.TAG "NONAME16"

.TYPE 8

.ENDEF

;   28		const static superpoint_t author  = {{12, 36}, "By Decimation"};
.LINE 28

.DEFINE "author"

.ALIAS "_2author"

.CLASS 84

.VALUE _2author

.TAG "NONAME16"

.TYPE 8

.ENDEF

;   29	
;   30		//__lowlevel_GetCalcSerial();
;   31	
;   32	
;   33		dbg_sprintf(dbgout, "\n[----------------------------------------]\n");
.LINE 33

	LD	BC,L__3
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
;   34		dbg_sprintf(dbgout, "[TITrig] %d.%d\n", kMajor, kMinor);
.LINE 34

	LD	BC,0
	PUSH	BC
	LD	BC,3
	PUSH	BC
	LD	BC,L__4
	PUSH	BC
	LD	BC,16449536
	PUSH	BC
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   35	
;   36		os_ClrHome();
.LINE 36

	LD	BC,_asm_ClrLCD
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_HomeUp
	PUSH	BC
	CALL	__OS
	POP	BC
	LD	BC,_asm_DrawStatusBar
	PUSH	BC
	CALL	__OS
	POP	BC
;   37		gfx_Begin();
.LINE 37

	CALL	_gfx_Begin
;   38	
;   39	
;   40		gfx_PrintColor(&title, gfx_blue);
.LINE 40

	LD	BC,16
	PUSH	BC
	LD	BC,_1title
	PUSH	BC
	CALL	_gfx_PrintColor
	POP	BC
	POP	BC
;   41		gfx_PrintColor(&author, gfx_green);
.LINE 41

	LD	BC,3
	PUSH	BC
	LD	BC,_2author
	PUSH	BC
	CALL	_gfx_PrintColor
	POP	BC
	POP	BC
;   42	
;   43		sprintf(buf, "Build %d.%d", kMajor, kMinor);
.LINE 43

	LD	BC,0
	PUSH	BC
	LD	BC,3
	PUSH	BC
	LD	BC,L__5
	PUSH	BC
	PEA	IX+-47
	CALL	_sprintf
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   44		gfx_PrintStringXY(buf, 12, 56);
.LINE 44

	LD	BC,56
	PUSH	BC
	LD	BC,12
	PUSH	BC
	PEA	IX+-47
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   45	
;   46		gfx_PrintStringXY("1. Right", 12, 76);
.LINE 46

	LD	BC,76
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__6
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   47		gfx_PrintStringXY("2. Non-right", 12, 96);
.LINE 47

	LD	BC,96
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__7
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   48	
;   49		gfx_PrintStringXY("- Press Clear to quit", 12, 136);
.LINE 49

	LD	BC,136
	PUSH	BC
	LD	BC,12
	PUSH	BC
	LD	BC,L__8
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   50	
;   51		gfx_Print(&iopoint);
.LINE 51

	LD	BC,_0iopoint
	PUSH	BC
	CALL	_gfx_Print
	POP	BC
;   52		r = io_gfx_ReadReal(&iopoint);
.LINE 52

	LD	BC,_0iopoint
	PUSH	BC
	PEA	IX+-74
	CALL	_io_gfx_ReadReal
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;   53	
;   54	
;   55		if (os_RealCompare(&real1, &r) == 0)
.LINE 55

	PEA	IX+-9
	PEA	IX+-18
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_11
;   56		{
;   57			right_SolveTriangle();
.LINE 57

	CALL	_right_SolveTriangle
;   58		}
;   59		else if (os_RealCompare(&real2, &r) == 0)
.LINE 59

	JR	L_12
L_11:
	PEA	IX+-9
	PEA	IX+-27
	CALL	_os_RealCompare
	POP	BC
	POP	BC
	CALL	__icmpzero
	JR	NZ,L_9
;   60		{
;   61			trig_SolveTriangle();
.LINE 61

	CALL	_trig_SolveTriangle
;   62		}
;   63		else
.LINE 63

	JR	L_12
L_9:
;   64		{
;   65			gfx_End();
.LINE 65

	CALL	_gfx_End
;   66			return 0;
.LINE 66

	OR	A,A
	SBC	HL,HL
	JR	L_13
;   67		}
L_12:
.LINE 67

;   68	
;   69		gfx_End();
.LINE 69

	CALL	_gfx_End
;   70		return 0;
.LINE 70

	OR	A,A
	SBC	HL,HL
L_13:
.LINE 71

	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_trig_SolveTriangle                 IMPORT  -----   function
;_right_SolveTriangle                IMPORT  -----   function
;_os_RealCompare                     IMPORT  -----   function
;_io_gfx_ReadReal                    IMPORT  -----   function
;_0iopoint                           STATIC     26   variable
;_gfx_Print                          IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_2author                            STATIC     26   variable
;_1title                             STATIC     26   variable
;_gfx_PrintColor                     IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_asm_DrawStatusBar                  IMPORT  -----   function
;_asm_HomeUp                         IMPORT  -----   function
;_asm_ClrLCD                         IMPORT  -----   function
;__OS                                IMPORT  -----   function
;_sprintf                            IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buf                                  IX-47     20   variable
;real2                                IX-27      9   variable
;real1                                IX-18      9   variable
;r                                     IX-9      9   variable


; Stack Frame Size: 80 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "main",71,"_main"
	SEGMENT STRSECT
L__3:
	DB	10
	DB	"[----------------------------------------]"
	DB	10,0
L__4:
	DB	"[TITrig] %d.%d"
	DB	10,0
L__5:
	DB	"Build %d.%d"
	DB	0
L__6:
	DB	"1. Right"
	DB	0
L__7:
	DB	"2. Non-right"
	DB	0
L__8:
	DB	"- Press Clear to quit"
	DB	0
	SEGMENT TEXT
_0iopoint:
	DW	12
	DB	0
	DW	116
	DB	0
	DB	46
	DB	46
	DB	46
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_1title:
	DW	12
	DB	0
	DW	16
	DB	0
	DB	84
	DB	73
	DB	84
	DB	114
	DB	105
	DB	103
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
_2author:
	DW	12
	DB	0
	DW	36
	DB	0
	DB	66
	DB	121
	DB	32
	DB	68
	DB	101
	DB	99
	DB	105
	DB	109
	DB	97
	DB	116
	DB	105
	DB	111
	DB	110
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	DB	0
	XREF _trig_SolveTriangle:ROM
	XREF _sprintf:ROM
	XREF _right_SolveTriangle:ROM
	XREF _gfx_PrintColor:ROM
	XREF _io_gfx_ReadReal:ROM
	XREF _gfx_Print:ROM
	XREF _asm_DrawStatusBar:ROM
	XREF _asm_ClrLCD:ROM
	XREF _asm_HomeUp:ROM
	XREF __OS:ROM
	XREF _os_Int24ToReal:ROM
	XREF _os_RealCompare:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF __setflag:ROM
	XREF __icmpzero:ROM
	XDEF _main
	XDEF ___lowlevel_GetCalcSerial
	END
