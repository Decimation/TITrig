; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"..\SRC\TRIGONOMETRY.C"
	.assume ADL=1
	SEGMENT TEXT
_PI:
	DF	3.141592654
_HalfCircle:
	DF	180.0
;    1	//
;    2	// Created by Decimation on 4/27/2018.
;    3	//
;    4	
;    5	
;    6	#include "Trigonometry.h"
;    7	#include "Types.h"
;    8	#include <math.h>
;    9	
;   10	static const float PI         = 3.141592654f;
;   11	static const float HalfCircle = 180.0f;
	SEGMENT CODE
;   12	
;   13	float CosineDeg(float f)
;   14	{
_CosineDeg:
	CALL	__frameset0
;   15		return (float) (cos(f / HalfCircle * PI));
	LD	HL,3407872
	LD	E,67
	LD	BC,(IX+6)
	LD	A,(IX+9)
	CALL	__fdiv
	LD	HL,4788187
	LD	E,64
	CALL	__fmul
	LD	DE,BC
	LD	C,A
	LD	B,0
	PUSH	BC
	PUSH	DE
	CALL	_cos
	POP	BC
	POP	BC
;   16	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _CosineDeg ***************************
;Name                         Addr/Register   Size   Type
;_cos                                IMPORT  -----   function
;f                                     IX+6      4   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


;   17	
;   18	float ASinDeg(float f)
;   19	{
_ASinDeg:
	CALL	__frameset0
;   20		return (float) (asin(f) * HalfCircle / PI);
	LD	C,(IX+9)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+6)
	PUSH	BC
	CALL	_asin
	POP	BC
	POP	BC
	LD	BC,HL
	LD	HL,3407872
	LD	A,E
	LD	E,67
	CALL	__fmul
	LD	HL,4788187
	LD	E,64
	CALL	__fdiv
	LD	E,A
	LD	HL,BC
;   21	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _ASinDeg ***************************
;Name                         Addr/Register   Size   Type
;_asin                               IMPORT  -----   function
;f                                     IX+6      4   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


;   22	
;   23	float SinDeg(float f)
;   24	{
_SinDeg:
	CALL	__frameset0
;   25		return (float) (sin(f / HalfCircle * PI));
	LD	HL,3407872
	LD	E,67
	LD	BC,(IX+6)
	LD	A,(IX+9)
	CALL	__fdiv
	LD	HL,4788187
	LD	E,64
	CALL	__fmul
	LD	DE,BC
	LD	C,A
	LD	B,0
	PUSH	BC
	PUSH	DE
	CALL	_sin
	POP	BC
	POP	BC
;   26	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _SinDeg ***************************
;Name                         Addr/Register   Size   Type
;_sin                                IMPORT  -----   function
;f                                     IX+6      4   parameter


; Stack Frame Size: 12 (bytes)
;       Spill Code: 0 (instruction)


;   27	
;   28	real_t os_RealAcosDeg(real_t r)
;   29	{
_os_RealAcosDeg:
	LD	HL,-36
	CALL	__frameset
;   30		real_t rbuf;
;   31	
;   32		rbuf = os_FloatToReal((float) acos(os_RealToFloat(&r)));
	PEA	IX+9
	CALL	_os_RealToFloat
	POP	BC
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_acos
	POP	BC
	POP	BC
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	PEA	IX+-18
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;   33		rbuf = os_FloatToReal(os_RealToFloat(&rbuf) * HalfCircle / PI);
	PEA	IX+-9
	LD	BC,9
	LDIR	
	CALL	_os_RealToFloat
	POP	BC
	LD	A,E
	LD	BC,HL
	LD	HL,3407872
	LD	E,67
	CALL	__fmul
	LD	HL,4788187
	LD	E,64
	CALL	__fdiv
	LD	DE,BC
	LD	C,A
	LD	B,0
	PUSH	BC
	PUSH	DE
	PEA	IX+-27
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;   34		return os_RealRound(&rbuf, 1);
	LD	BC,1
	PUSH	BC
	PEA	IX+-9
	PEA	IX+-36
	LD	BC,9
	LDIR	
	CALL	_os_RealRound
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6	; spill
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)	; spill
;   35	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _os_RealAcosDeg ***************************
;Name                         Addr/Register   Size   Type
;_os_RealRound                       IMPORT  -----   function
;_os_RealToFloat                     IMPORT  -----   function
;_acos                               IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;rbuf                                  IX-9      9   variable
;r                                     IX+9      9   parameter


; Stack Frame Size: 54 (bytes)
;       Spill Code: 0 (instruction)


;   36	
;   37	real_t loc_Angle_x(real_t c, real_t a, real_t b)
;   38	{
_loc_Angle_x:
	LD	HL,-191
	CALL	__frameset
;   39		char   buf[20];
;   40		//cos B = (c2 + a2 âˆ’ b2) / 2ca
;   41		real_t real2 = os_Int24ToReal(2);
	LD	BC,2
	PUSH	BC
	PEA	IX+-101
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-45
;   42		real_t csq, asq, bsq, res, term, term2, rbuf;
;   43	
;   44		os_RealToStr(buf, &c, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+9
	PEA	IX+-92
	LD	BC,9
	LDIR	
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   45		//dbg_sprintf(dbgout, "c = %s\n", buf);
;   46		os_RealToStr(buf, &a, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+18
	PEA	IX+-92
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   47		//dbg_sprintf(dbgout, "a = %s\n", buf);
;   48		os_RealToStr(buf, &b, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+27
	PEA	IX+-92
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   49		//dbg_sprintf(dbgout, "b = %s\n", buf);
;   50	
;   51		bsq  = os_RealMul(&b, &b);
	PEA	IX+27
	PEA	IX+27
	PEA	IX+-110
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-72
;   52		csq  = os_RealMul(&c, &c);
	PEA	IX+9
	PEA	IX+9
	PEA	IX+-119
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-54
;   53		asq  = os_RealMul(&a, &a);
	PEA	IX+18
	PEA	IX+18
	PEA	IX+-128
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-63
;   54		term = os_RealAdd(&csq, &asq);
	PEA	IX+-63
	PEA	IX+-54
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-137
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealAdd
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;   55		term = os_RealSub(&term, &bsq);
	PEA	IX+-72
	PEA	IX+-9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-146
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealSub
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-9
;   56	
;   57		term2 = os_RealMul(&c, &a);
	PEA	IX+18
	PEA	IX+9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-155
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
;   58		term2 = os_RealMul(&real2, &term2);
	PEA	IX+-18
	PEA	IX+-45
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-164
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
;   59	
;   60		res = os_RealDiv(&term, &term2);
	PEA	IX+-18
	PEA	IX+-9
	LD	BC,9
	LDIR	
	LD	HL,IX
	LD	BC,-173
	ADD	HL,BC
	LD	BC,HL
	PUSH	BC
	CALL	_os_RealDiv
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
;   61		os_RealToStr(buf, &res, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-27
	PEA	IX+-92
	LD	BC,9
	LDIR	
	PUSH	IY
	LEA	IY,IX+-128
	LD	(IY+-63),BC
	POP	IY
	CALL	_os_RealToStr
	PUSH	IY
	LEA	IY,IX+-128
	LD	BC,(IY+-63)
	POP	IY
	POP	DE
	POP	DE
	POP	DE
	POP	DE
	POP	DE
;   62	
;   63		rbuf = os_RealAcosDeg(res);
	PUSH	BC
	PUSH	BC
	PUSH	BC
	LEA	HL,IX+-27
	LD	BC,9
	LD	IY,IX
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-57),HL	; spill
	POP	IY
	OR	A,A
	SBC	HL,HL
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-60),HL	; unspill
	LD	HL,(IY+-57)
	LD	(IY+-57),HL	; unspill
	LD	HL,(IY+-60)
	POP	IY
	ADD	HL,SP
	PUSH	IY
	LEA	IY,IX+-128	; spill
	LD	(IY+-60),HL	; unspill
	LD	HL,(IY+-57)
	LD	(IY+-57),HL	; spill
	LD	HL,(IY+-60)
	POP	IY
	LD	DE,HL
	PUSH	IY
	LEA	IY,IX+-128	; unspill
	LD	HL,(IY+-57)
	POP	IY
	LDIR	
	LD	BC,-182
	ADD	IY,BC
	LD	BC,IY
	PUSH	BC
	CALL	_os_RealAcosDeg
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
;   64		os_RealToStr(buf, &rbuf, 0, 0, 6);
	LD	BC,6
	PUSH	BC
	LD	BC,0
	PUSH	BC
	PUSH	BC
	PEA	IX+-36
	PEA	IX+-92
	LD	BC,9
	LDIR	
	CALL	_os_RealToStr
	POP	BC
	POP	BC
	POP	BC
	POP	BC
	POP	BC
;   65	
;   66		return rbuf;
	LEA	HL,IX+6
	LD	DE,(HL)
	LEA	HL,IX+-36
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)
;   67	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _loc_Angle_x ***************************
;Name                         Addr/Register   Size   Type
;_os_RealAcosDeg                     IMPORT  -----   function
;_os_RealDiv                         IMPORT  -----   function
;_os_RealSub                         IMPORT  -----   function
;_os_RealAdd                         IMPORT  -----   function
;_os_RealMul                         IMPORT  -----   function
;_os_RealToStr                       IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buf                                  IX-92     20   variable
;bsq                                  IX-72      9   variable
;asq                                  IX-63      9   variable
;csq                                  IX-54      9   variable
;real2                                IX-45      9   variable
;rbuf                                 IX-36      9   variable
;res                                  IX-27      9   variable
;term2                                IX-18      9   variable
;term                                  IX-9      9   variable
;b                                    IX+27      9   parameter
;a                                    IX+18      9   parameter
;c                                     IX+9      9   parameter


; Stack Frame Size: 227 (bytes)
;       Spill Code: -6 (instruction)


;   68	
;   69	real_t los_Side_x(real_t X, real_t y, real_t Y)
;   70	{
_los_Side_x:
	LD	HL,-21
	CALL	__frameset
;   71		//a = (sin(A) * c) / sin(C);
;   72		float fbuf = (os_RealToFloat(&y) * SinDeg(os_RealToFloat(&X))) / SinDeg(os_RealToFloat(&Y));
	PEA	IX+9
	CALL	_os_RealToFloat
	POP	BC
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_SinDeg
	POP	BC
	POP	BC
	PEA	IX+18
	LD	BC,HL
	LD	A,E
	LD	(IX+-20),BC
	LD	(IX+-21),A
	CALL	_os_RealToFloat
	LD	BC,(IX+-20)
	LD	A,(IX+-21)
	POP	IY
	PEA	IX+27
	CALL	__fmul
	LD	(IX+-14),A
	LD	(IX+-17),BC
	CALL	_os_RealToFloat
	POP	BC
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	CALL	_SinDeg
	POP	BC
	POP	BC
	LD	A,(IX+-14)
	LD	BC,(IX+-17)
	CALL	__fdiv
	LD	(IX+-4),BC
	LD	(IX+-1),A
;   73		return os_FloatToReal(fbuf);
	LD	C,(IX+-1)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-4)
	PUSH	BC
	PEA	IX+-13
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6	; spill
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)	; spill
;   74	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _los_Side_x ***************************
;Name                         Addr/Register   Size   Type
;_os_FloatToReal                     IMPORT  -----   function
;_os_RealToFloat                     IMPORT  -----   function
;_SinDeg                             IMPORT  -----   function
;fbuf                                  IX-4      4   variable
;Y                                    IX+27      9   parameter
;y                                    IX+18      9   parameter
;X                                     IX+9      9   parameter


; Stack Frame Size: 57 (bytes)
;       Spill Code: -6 (instruction)


;   75	
;   76	real_t los_Angle_x(real_t x, real_t Y, real_t y)
;   77	{
_los_Angle_x:
	LD	HL,-25
	CALL	__frameset
;   78		// A = asin((a * sin(B) / b));
;   79		// X = asin((x * sin(Y) / y))
;   80	
;   81		float xf, Yf, yf, sol;
;   82		xf  = os_RealToFloat(&x);
	PEA	IX+9
	CALL	_os_RealToFloat
	POP	BC
	LD	(IX+-4),HL
	LD	(IX+-1),E
;   83		Yf  = os_RealToFloat(&Y);
	PEA	IX+18
	CALL	_os_RealToFloat
	POP	BC
	LD	(IX+-8),HL
	LD	(IX+-5),E
;   84		yf  = os_RealToFloat(&y);
	PEA	IX+27
	CALL	_os_RealToFloat
	POP	BC
	LD	(IX+-12),HL
	LD	(IX+-9),E
;   85		sol = ASinDeg((SinDeg(Yf) * xf) / yf);
	LD	C,(IX+-5)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-8)
	PUSH	BC
	CALL	_SinDeg
	POP	BC
	POP	BC
	LD	A,E
	LD	BC,HL
	LD	HL,(IX+-4)
	LD	E,(IX+-1)
	CALL	__fmul
	LD	HL,(IX+-12)
	LD	E,(IX+-9)
	CALL	__fdiv
	LD	DE,BC
	LD	C,A
	LD	B,0
	PUSH	BC
	PUSH	DE
	CALL	_ASinDeg
	POP	BC
	POP	BC
	LD	(IX+-16),HL
	LD	(IX+-13),E
;   86		return os_FloatToReal(sol);
	LD	C,(IX+-13)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-16)
	PUSH	BC
	PEA	IX+-25
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6	; spill
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)	; spill
;   87	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _los_Angle_x ***************************
;Name                         Addr/Register   Size   Type
;_os_FloatToReal                     IMPORT  -----   function
;_SinDeg                             IMPORT  -----   function
;_ASinDeg                            IMPORT  -----   function
;_os_RealToFloat                     IMPORT  -----   function
;sol                                  IX-16      4   variable
;yf                                   IX-12      4   variable
;Yf                                    IX-8      4   variable
;xf                                    IX-4      4   variable
;y                                    IX+27      9   parameter
;Y                                    IX+18      9   parameter
;x                                     IX+9      9   parameter


; Stack Frame Size: 61 (bytes)
;       Spill Code: -6 (instruction)


;   88	
;   89	real_t loc_Side_x(real_t a, real_t b, real_t angle)
;   90	{
_loc_Side_x:
	LD	HL,-33
	CALL	__frameset
;   91		//c = sqrt(a^2 + b^2 - 2*a*b*cos(c))
;   92		float af, bf, anglef;
;   93		af     = os_RealToFloat(&a);
	PEA	IX+9
	CALL	_os_RealToFloat
	POP	BC
	LD	(IX+-4),HL
	LD	(IX+-1),E
;   94		bf     = os_RealToFloat(&b);
	PEA	IX+18
	CALL	_os_RealToFloat
	POP	BC
	LD	(IX+-8),HL
	LD	(IX+-5),E
;   95		anglef = os_RealToFloat(&angle);
	PEA	IX+27
	CALL	_os_RealToFloat
	POP	BC
	LD	(IX+-12),HL
	LD	(IX+-9),E
;   96		return os_FloatToReal(sqrt((af * af) + (bf * bf) - 2 * af * bf * CosineDeg(anglef)));
	LD	HL,(IX+-4)
	LD	E,(IX+-1)
	LD	BC,(IX+-4)
	LD	A,(IX+-1)
	CALL	__fmul
	LD	(IX+-24),BC
	LD	(IX+-25),A
	LD	A,(IX+-5)
	LD	BC,(IX+-8)
	LD	HL,(IX+-8)
	LD	E,(IX+-5)
	CALL	__fmul
	LD	E,A
	LD	HL,BC
	LD	BC,(IX+-24)
	LD	A,(IX+-25)
	CALL	__fadd
	LD	(IX+-26),A
	LD	(IX+-29),BC
	LD	BC,(IX+-4)
	LD	A,(IX+-1)
	OR	A,A
	SBC	HL,HL
	LD	E,64
	CALL	__fmul
	LD	HL,(IX+-8)
	LD	E,(IX+-5)
	CALL	__fmul
	LD	(IX+-32),BC
	LD	C,(IX+-9)
	LD	B,0
	PUSH	BC
	LD	BC,(IX+-12)
	PUSH	BC
	LD	(IX+-33),A
	CALL	_CosineDeg
	POP	BC
	POP	BC
	LD	A,(IX+-33)
	LD	BC,(IX+-32)
	CALL	__fmul
	LD	E,A
	LD	HL,BC
	LD	BC,(IX+-29)
	LD	A,(IX+-26)
	CALL	__fsub
	LD	DE,BC
	LD	C,A
	LD	B,0
	PUSH	BC
	PUSH	DE
	CALL	_sqrt
	POP	BC
	POP	BC
	LD	C,E
	LD	B,0
	PUSH	BC
	PUSH	HL
	PEA	IX+-21
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	IY,IX+6	; spill
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)	; spill
;   97	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _loc_Side_x ***************************
;Name                         Addr/Register   Size   Type
;_CosineDeg                          IMPORT  -----   function
;_sqrt                               IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;_os_RealToFloat                     IMPORT  -----   function
;anglef                               IX-12      4   variable
;bf                                    IX-8      4   variable
;af                                    IX-4      4   variable
;angle                                IX+27      9   parameter
;b                                    IX+18      9   parameter
;a                                     IX+9      9   parameter


; Stack Frame Size: 69 (bytes)
;       Spill Code: -6 (instruction)


;   98	
;   99	void tri_SetSide(triangle_t* pTriangle, real_t r, trigstatus_t* pTriStatus, sidetype_t side)
;  100	{
_tri_SetSide:
	CALL	__frameset0
;  101		switch (side) {
	LD	HL,(IX+21)
	CALL	__seqcase
L__8:
	DW	3
	DW	0
	DB	0
	DW24	L_8	

	DW24	L_9	

	DW24	L_10	

	DW24	L_11	

;  102			case SIDE_A:
L_8:
;  103				pTriangle->a  = r;
	LD	IY,(IX+6)
	LEA	DE,IY+27
	LEA	HL,IX+9
	LD	BC,9
	LDIR	
;  104				pTriStatus->a = true;
	LD	IY,(IX+18)
	LD	(IY+0),1
;  105				break;
	JR	L_11
;  106			case SIDE_B:
L_9:
;  107				pTriangle->b  = r;
	LD	IY,(IX+6)
	LEA	DE,IY+36
	LEA	HL,IX+9
	LD	BC,9
	LDIR	
;  108				pTriStatus->b = true;
	LD	IY,(IX+18)
	LD	(IY+1),1
;  109				break;
	JR	L_11
;  110			case SIDE_C:
L_10:
;  111				pTriangle->c = r;
	LD	IY,(IX+6)
	LEA	DE,IY+45
	LEA	HL,IX+9
	LD	BC,9
	LDIR	
;  112				pTriStatus->c = true;
	LD	IY,(IX+18)
	LD	(IY+2),1
;  113				break;
;  114		}
;  115	}
L_11:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _tri_SetSide ***************************
;Name                         Addr/Register   Size   Type
;side                                 IX+21      3   parameter
;pTriStatus                           IX+18      3   parameter
;r                                     IX+9      9   parameter
;pTriangle                             IX+6      3   parameter


; Stack Frame Size: 24 (bytes)
;       Spill Code: -6 (instruction)


;  116	
;  117	void tri_SetAngle(triangle_t* pTriangle, real_t r, trigstatus_t* pTriStatus, const angletype_t angletype)
;  118	{
_tri_SetAngle:
	CALL	__frameset0
;  119		switch (angletype) {
	LD	HL,(IX+21)
	CALL	__seqcase
L__10:
	DW	3
	DW	0
	DB	0
	DW24	L_12	

	DW24	L_13	

	DW24	L_14	

	DW24	L_15	

;  120			case ANGLE_A:
L_12:
;  121				pTriangle->A  = r;
	LD	IY,(IX+6)
	LEA	DE,IY+0
	LEA	HL,IX+9
	LD	BC,9
	LDIR	
;  122				pTriStatus->A = true;
	LD	IY,(IX+18)
	LD	(IY+3),1
;  123				break;
	JR	L_15
;  124			case ANGLE_B:
L_13:
;  125				pTriangle->B  = r;
	LD	IY,(IX+6)
	LEA	DE,IY+9
	LEA	HL,IX+9
	LD	BC,9
	LDIR	
;  126				pTriStatus->B = true;
	LD	IY,(IX+18)
	LD	(IY+4),1
;  127				break;
	JR	L_15
;  128			case ANGLE_C90:
L_14:
;  129				pTriangle->C  = r;
	LD	IY,(IX+6)
	LEA	DE,IY+18
	LEA	HL,IX+9
	LD	BC,9
	LDIR	
;  130				pTriStatus->C = true;
	LD	IY,(IX+18)
	LD	(IY+5),1
;  131				break;
;  132	
;  133		}
;  134	}
L_15:
	LD	SP,IX
	POP	IX
	RET	


;**************************** _tri_SetAngle ***************************
;Name                         Addr/Register   Size   Type
;angletype                            IX+21      3   parameter
;pTriStatus                           IX+18      3   parameter
;r                                     IX+9      9   parameter
;pTriangle                             IX+6      3   parameter


; Stack Frame Size: 24 (bytes)
;       Spill Code: -6 (instruction)


;  135	
;  136	real_t os_RealSinDeg(real_t r)
;  137	{
_os_RealSinDeg:
	LD	HL,-81
	CALL	__frameset
;  138		const real_t real180 = os_Int24ToReal(180);
	LD	BC,180
	PUSH	BC
	PEA	IX+-45
	CALL	_os_Int24ToReal
	POP	BC
	POP	BC
	LEA	DE,IX+-9
	LD	BC,9
	LDIR	
;  139		const real_t realpi  = os_FloatToReal(PI);
	LD	C,64
	LD	B,0
	PUSH	BC
	LD	BC,4788187
	PUSH	BC
	PEA	IX+-54
	CALL	_os_FloatToReal
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-18
;  140		real_t       buf     = os_RealDiv(&r, &real180);
	PEA	IX+-9
	PEA	IX+9
	PEA	IX+-63
	LD	BC,9
	LDIR	
	CALL	_os_RealDiv
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-27
;  141		real_t       buf2    = os_RealMul(&buf, &realpi);
	PEA	IX+-18
	PEA	IX+-27
	PEA	IX+-72
	LD	BC,9
	LDIR	
	CALL	_os_RealMul
	POP	BC
	POP	BC
	POP	BC
	LEA	DE,IX+-36
;  142		return os_RealSinRad(&buf2);
	PEA	IX+-36
	PEA	IX+-81
	LD	BC,9
	LDIR	
	CALL	_os_RealSinRad
	POP	BC
	POP	BC
	LEA	IY,IX+6	; spill
	LD	DE,(IY)
	LD	BC,9
	LDIR	
	LD	HL,(IX+6)	; spill
	LD	SP,IX
	POP	IX
	RET	


;**************************** _os_RealSinDeg ***************************
;Name                         Addr/Register   Size   Type
;_os_RealSinRad                      IMPORT  -----   function
;_os_RealMul                         IMPORT  -----   function
;_os_RealDiv                         IMPORT  -----   function
;_os_FloatToReal                     IMPORT  -----   function
;_os_Int24ToReal                     IMPORT  -----   function
;buf2                                 IX-36      9   variable
;buf                                  IX-27      9   variable
;realpi                               IX-18      9   variable
;real180                               IX-9      9   variable
;r                                     IX+9      9   parameter


; Stack Frame Size: 99 (bytes)
;       Spill Code: -6 (instruction)


	XREF _sqrt:ROM
	XREF _sin:ROM
	XREF _cos:ROM
	XREF _asin:ROM
	XREF _acos:ROM
	XREF _os_RealToStr:ROM
	XREF _os_FloatToReal:ROM
	XREF _os_RealToFloat:ROM
	XREF _os_Int24ToReal:ROM
	XREF _os_RealRound:ROM
	XREF _os_RealSub:ROM
	XREF _os_RealMul:ROM
	XREF _os_RealDiv:ROM
	XREF _os_RealAdd:ROM
	XREF _os_RealSinRad:ROM
	XREF __fadd:ROM
	XREF __fsub:ROM
	XREF __fmul:ROM
	XREF __fdiv:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XREF __seqcase:ROM
	XDEF _os_RealSinDeg
	XDEF _tri_SetAngle
	XDEF _tri_SetSide
	XDEF _loc_Side_x
	XDEF _los_Angle_x
	XDEF _los_Side_x
	XDEF _loc_Angle_x
	XDEF _os_RealAcosDeg
	XDEF _SinDeg
	XDEF _ASinDeg
	XDEF _CosineDeg
	END
